{"version":3,"file":"static/js/490.01a510ae.chunk.js","mappings":"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","sources":["../node_modules/react-tsparticles/esm/Utils.js","../node_modules/react-tsparticles/esm/Particles.js","../node_modules/react-tsparticles/esm/index.js","../node_modules/tsparticles-engine/esm/Core/Utils/Circle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Constants.js","../node_modules/tsparticles-engine/esm/Core/Utils/Range.js","../node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Vector.js","../node_modules/tsparticles-engine/esm/Core/Utils/Vector3d.js","../node_modules/tsparticles-engine/esm/Options/Classes/ColorAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/HslAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/AnimatableColor.js","../node_modules/tsparticles-engine/esm/Options/Classes/AnimationOptions.js","../node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Random.js","../node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js","../node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js","../node_modules/tsparticles-engine/esm/Utils/ColorUtils.js","../node_modules/tsparticles-engine/esm/Utils/NumberUtils.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsAbsorb.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsOverlap.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounce.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/Collisions.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAngle.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAttract.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveCenter.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveGravity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Path/MovePath.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrailFill.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrail.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/OutModes.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Spin.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Move.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/OpacityAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/Opacity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesDensity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesNumber.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shadow.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shape/Shape.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/SizeAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/Size.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Stroke.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/ZIndex/ZIndex.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/ParticlesOptions.js","../node_modules/tsparticles-engine/esm/Utils/OptionsUtils.js","../node_modules/tsparticles-engine/esm/Utils/Utils.js","../node_modules/tsparticles-engine/esm/Core/Canvas.js","../node_modules/tsparticles-engine/esm/Core/Utils/EventListeners.js","../node_modules/tsparticles-engine/esm/Options/Classes/Background/Background.js","../node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMaskCover.js","../node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMask.js","../node_modules/tsparticles-engine/esm/Options/Classes/FullScreen/FullScreen.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ClickEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/DivEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Parallax.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/HoverEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ResizeEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Events.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Modes/Modes.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Interactivity.js","../node_modules/tsparticles-engine/esm/Options/Classes/ManualParticle.js","../node_modules/tsparticles-engine/esm/Options/Classes/Responsive.js","../node_modules/tsparticles-engine/esm/Options/Classes/Theme/ThemeDefault.js","../node_modules/tsparticles-engine/esm/Options/Classes/Theme/Theme.js","../node_modules/tsparticles-engine/esm/Options/Classes/Options.js","../node_modules/tsparticles-engine/esm/Core/Utils/InteractionManager.js","../node_modules/tsparticles-engine/esm/Core/Particle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Point.js","../node_modules/tsparticles-engine/esm/Core/Utils/QuadTree.js","../node_modules/tsparticles-engine/esm/Core/Particles.js","../node_modules/tsparticles-engine/esm/Core/Retina.js","../node_modules/tsparticles-engine/esm/Core/Container.js","../node_modules/tsparticles-engine/esm/Utils/EventDispatcher.js","../node_modules/tsparticles-engine/esm/Core/Utils/Plugins.js","../node_modules/tsparticles-engine/esm/Core/Engine.js","../node_modules/tsparticles-engine/esm/Utils/HslColorManager.js","../node_modules/tsparticles-engine/esm/Utils/RgbColorManager.js","../node_modules/tsparticles-engine/esm/index.js","../node_modules/tsparticles-engine/esm/init.js","../node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/AbsorberSizeLimit.js","../node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/AbsorberSize.js","../node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/Absorber.js","../node_modules/tsparticles-plugin-absorbers/esm/AbsorberInstance.js","../node_modules/tsparticles-plugin-absorbers/esm/Absorbers.js","../node_modules/tsparticles-plugin-absorbers/esm/index.js","../node_modules/tsparticles-updater-destroy/esm/Options/Classes/DestroyBounds.js","../node_modules/tsparticles-updater-destroy/esm/Options/Classes/SplitFactor.js","../node_modules/tsparticles-updater-destroy/esm/Options/Classes/SplitRate.js","../node_modules/tsparticles-updater-destroy/esm/Options/Classes/Split.js","../node_modules/tsparticles-updater-destroy/esm/Options/Classes/Destroy.js","../node_modules/tsparticles-updater-destroy/esm/Utils.js","../node_modules/tsparticles-updater-destroy/esm/DestroyUpdater.js","../node_modules/tsparticles-plugin-emitters/esm/Shapes/Circle/CircleShape.js","../node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterLife.js","../node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterRate.js","../node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterSize.js","../node_modules/tsparticles-plugin-emitters/esm/Options/Classes/Emitter.js","../node_modules/tsparticles-plugin-emitters/esm/EmitterInstance.js","../node_modules/tsparticles-plugin-emitters/esm/Emitters.js","../node_modules/tsparticles-plugin-emitters/esm/ShapeManager.js","../node_modules/tsparticles-plugin-emitters/esm/Shapes/Square/SquareShape.js","../node_modules/tsparticles-plugin-emitters/esm/index.js","../node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js","../node_modules/tsparticles-interaction-external-trail/esm/Options/Classes/Trail.js","../node_modules/tsparticles-interaction-external-trail/esm/TrailMaker.js","../node_modules/tsparticles-updater-roll/esm/Options/Classes/RollLight.js","../node_modules/tsparticles-updater-roll/esm/Options/Classes/Roll.js","../node_modules/tsparticles-updater-roll/esm/RollUpdater.js","../node_modules/tsparticles-updater-roll/esm/Utils.js","../node_modules/tsparticles-particles.js/esm/marcbruederlin/Particles.js","../node_modules/tsparticles-particles.js/esm/VincentGarreau/particles.js","../node_modules/tsparticles-particles.js/esm/index.js","../node_modules/tsparticles-move-base/esm/Utils.js","../node_modules/tsparticles-move-base/esm/BaseMover.js","../node_modules/tsparticles-shape-circle/esm/CircleDrawer.js","../node_modules/tsparticles-updater-color/esm/Utils.js","../node_modules/tsparticles-updater-color/esm/ColorUpdater.js","../node_modules/tsparticles-updater-opacity/esm/OpacityUpdater.js","../node_modules/tsparticles-updater-opacity/esm/Utils.js","../node_modules/tsparticles-updater-out-modes/esm/BounceOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/Utils.js","../node_modules/tsparticles-updater-out-modes/esm/DestroyOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/NoneOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/OutOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/OutOfCanvasUpdater.js","../node_modules/tsparticles-updater-size/esm/SizeUpdater.js","../node_modules/tsparticles-updater-size/esm/Utils.js","../node_modules/tsparticles-basic/esm/index.js","../node_modules/tsparticles-move-base/esm/index.js","../node_modules/tsparticles-shape-circle/esm/index.js","../node_modules/tsparticles-updater-color/esm/index.js","../node_modules/tsparticles-updater-opacity/esm/index.js","../node_modules/tsparticles-updater-out-modes/esm/index.js","../node_modules/tsparticles-updater-size/esm/index.js","../node_modules/tsparticles-interaction-external-attract/esm/Options/Classes/Attract.js","../node_modules/tsparticles-interaction-external-attract/esm/Attractor.js","../node_modules/tsparticles-interaction-external-bounce/esm/Options/Classes/Bounce.js","../node_modules/tsparticles-interaction-external-bounce/esm/Bouncer.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleBase.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleDiv.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/Bubble.js","../node_modules/tsparticles-interaction-external-bubble/esm/Utils.js","../node_modules/tsparticles-interaction-external-bubble/esm/Bubbler.js","../node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/ConnectLinks.js","../node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/Connect.js","../node_modules/tsparticles-interaction-external-connect/esm/Utils.js","../node_modules/tsparticles-interaction-external-connect/esm/Connector.js","../node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/GrabLinks.js","../node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/Grab.js","../node_modules/tsparticles-interaction-external-grab/esm/Utils.js","../node_modules/tsparticles-interaction-external-grab/esm/Grabber.js","../node_modules/tsparticles-interaction-external-pause/esm/Pauser.js","../node_modules/tsparticles-interaction-external-push/esm/Options/Classes/Push.js","../node_modules/tsparticles-interaction-external-push/esm/Pusher.js","../node_modules/tsparticles-interaction-external-remove/esm/Options/Classes/Remove.js","../node_modules/tsparticles-interaction-external-remove/esm/Remover.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseBase.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseDiv.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/Repulse.js","../node_modules/tsparticles-interaction-external-repulse/esm/Repulser.js","../node_modules/tsparticles-interaction-external-slow/esm/Options/Classes/Slow.js","../node_modules/tsparticles-interaction-external-slow/esm/Slower.js","../node_modules/tsparticles-shape-image/esm/GifUtils/Constants.js","../node_modules/tsparticles-shape-image/esm/GifUtils/ByteStream.js","../node_modules/tsparticles-shape-image/esm/GifUtils/Utils.js","../node_modules/tsparticles-shape-image/esm/Utils.js","../node_modules/tsparticles-shape-image/esm/ImageDrawer.js","../node_modules/tsparticles-shape-image/esm/Options/Classes/Preload.js","../node_modules/tsparticles-shape-image/esm/ImagePreloader.js","../node_modules/tsparticles-shape-image/esm/index.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDelay.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDuration.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/Life.js","../node_modules/tsparticles-updater-life/esm/LifeUpdater.js","../node_modules/tsparticles-shape-line/esm/LineDrawer.js","../node_modules/tsparticles-move-parallax/esm/ParallaxMover.js","../node_modules/tsparticles-engine/esm/Core/Utils/ParticlesInteractorBase.js","../node_modules/tsparticles-interaction-particles-attract/esm/Attractor.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Absorb.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Bounce.js","../node_modules/tsparticles-interaction-particles-collisions/esm/ResolveCollision.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Destroy.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Collider.js","../node_modules/tsparticles-interaction-particles-links/esm/CircleWarp.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksShadow.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksTriangle.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/Links.js","../node_modules/tsparticles-interaction-particles-links/esm/Linker.js","../node_modules/tsparticles-interaction-particles-links/esm/Utils.js","../node_modules/tsparticles-interaction-particles-links/esm/LinkInstance.js","../node_modules/tsparticles-interaction-particles-links/esm/plugin.js","../node_modules/tsparticles-interaction-particles-links/esm/index.js","../node_modules/tsparticles-interaction-particles-links/esm/interaction.js","../node_modules/tsparticles-shape-polygon/esm/PolygonDrawerBase.js","../node_modules/tsparticles-shape-polygon/esm/PolygonDrawer.js","../node_modules/tsparticles-shape-polygon/esm/TriangleDrawer.js","../node_modules/tsparticles-shape-polygon/esm/index.js","../node_modules/tsparticles-updater-rotate/esm/Options/Classes/RotateAnimation.js","../node_modules/tsparticles-updater-rotate/esm/Options/Classes/Rotate.js","../node_modules/tsparticles-updater-rotate/esm/RotateUpdater.js","../node_modules/tsparticles-shape-square/esm/SquareDrawer.js","../node_modules/tsparticles-shape-star/esm/StarDrawer.js","../node_modules/tsparticles-updater-stroke-color/esm/Utils.js","../node_modules/tsparticles-updater-stroke-color/esm/StrokeColorUpdater.js","../node_modules/tsparticles-shape-text/esm/TextDrawer.js","../node_modules/tsparticles-slim/esm/index.js","../node_modules/tsparticles-move-parallax/esm/index.js","../node_modules/tsparticles-interaction-external-attract/esm/index.js","../node_modules/tsparticles-interaction-external-bounce/esm/index.js","../node_modules/tsparticles-interaction-external-bubble/esm/index.js","../node_modules/tsparticles-interaction-external-connect/esm/index.js","../node_modules/tsparticles-interaction-external-grab/esm/index.js","../node_modules/tsparticles-interaction-external-pause/esm/index.js","../node_modules/tsparticles-interaction-external-push/esm/index.js","../node_modules/tsparticles-interaction-external-remove/esm/index.js","../node_modules/tsparticles-interaction-external-repulse/esm/index.js","../node_modules/tsparticles-interaction-external-slow/esm/index.js","../node_modules/tsparticles-interaction-particles-attract/esm/index.js","../node_modules/tsparticles-interaction-particles-collisions/esm/index.js","../node_modules/tsparticles-plugin-easing-quad/esm/index.js","../node_modules/tsparticles-shape-line/esm/index.js","../node_modules/tsparticles-shape-square/esm/index.js","../node_modules/tsparticles-shape-star/esm/index.js","../node_modules/tsparticles-shape-text/esm/index.js","../node_modules/tsparticles-updater-life/esm/index.js","../node_modules/tsparticles-updater-rotate/esm/index.js","../node_modules/tsparticles-updater-stroke-color/esm/index.js","../node_modules/tsparticles-updater-tilt/esm/Options/Classes/TiltAnimation.js","../node_modules/tsparticles-updater-tilt/esm/Options/Classes/Tilt.js","../node_modules/tsparticles-updater-tilt/esm/TiltUpdater.js","../node_modules/tsparticles-updater-tilt/esm/Utils.js","../node_modules/tsparticles-updater-twinkle/esm/Options/Classes/TwinkleValues.js","../node_modules/tsparticles-updater-twinkle/esm/Options/Classes/Twinkle.js","../node_modules/tsparticles-updater-twinkle/esm/TwinkleUpdater.js","../node_modules/tsparticles-updater-wobble/esm/Options/Classes/WobbleSpeed.js","../node_modules/tsparticles-updater-wobble/esm/Options/Classes/Wobble.js","../node_modules/tsparticles-updater-wobble/esm/WobbleUpdater.js","../node_modules/tsparticles-updater-wobble/esm/Utils.js","../node_modules/tsparticles/esm/index.js","../node_modules/tsparticles-updater-destroy/esm/index.js","../node_modules/tsparticles-updater-roll/esm/index.js","../node_modules/tsparticles-updater-tilt/esm/index.js","../node_modules/tsparticles-updater-twinkle/esm/index.js","../node_modules/tsparticles-updater-wobble/esm/index.js","../node_modules/tsparticles-interaction-external-trail/esm/index.js"],"sourcesContent":["const isObject = (val) => typeof val === \"object\" && val !== null;\nexport function deepCompare(obj1, obj2, excludeKeyFn = () => false) {\n    if (!isObject(obj1) || !isObject(obj2)) {\n        return obj1 === obj2;\n    }\n    const keys1 = Object.keys(obj1).filter(key => !excludeKeyFn(key)), keys2 = Object.keys(obj2).filter(key => !excludeKeyFn(key));\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const value1 = obj1[key], value2 = obj2[key];\n        if (isObject(value1) && isObject(value2)) {\n            if (value1 === obj2 && value2 === obj1) {\n                continue;\n            }\n            if (!deepCompare(value1, value2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (Array.isArray(value1) && Array.isArray(value2)) {\n            if (!deepCompareArrays(value1, value2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (value1 !== value2) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction deepCompareArrays(arr1, arr2, excludeKeyFn) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        const val1 = arr1[i], val2 = arr2[i];\n        if (Array.isArray(val1) && Array.isArray(val2)) {\n            if (!deepCompareArrays(val1, val2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (isObject(val1) && isObject(val2)) {\n            if (!deepCompare(val1, val2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (val1 !== val2) {\n            return false;\n        }\n    }\n    return true;\n}\n","import React, { Component } from \"react\";\nimport { tsParticles } from \"tsparticles-engine\";\nimport { deepCompare } from \"./Utils\";\nconst defaultId = \"tsparticles\";\nclass Particles extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            init: false,\n            library: undefined,\n        };\n    }\n    destroy() {\n        if (!this.state.library) {\n            return;\n        }\n        this.state.library.destroy();\n        this.setState({\n            library: undefined,\n        });\n    }\n    shouldComponentUpdate(nextProps) {\n        const nextOptions = nextProps.options ?? nextProps.params, currentOptions = this.props.options ?? this.props.params;\n        return (nextProps.url !== this.props.url ||\n            nextProps.id !== this.props.id ||\n            nextProps.canvasClassName !== this.props.canvasClassName ||\n            nextProps.className !== this.props.className ||\n            nextProps.height !== this.props.height ||\n            nextProps.width !== this.props.width ||\n            !deepCompare(nextProps.style, this.props.style) ||\n            nextProps.init !== this.props.init ||\n            nextProps.loaded !== this.props.loaded ||\n            !deepCompare(nextOptions, currentOptions, key => key.startsWith(\"_\")));\n    }\n    componentDidUpdate() {\n        this.refresh();\n    }\n    forceUpdate() {\n        this.refresh().then(() => {\n            super.forceUpdate();\n        });\n    }\n    componentDidMount() {\n        (async () => {\n            if (this.props.init) {\n                await this.props.init(tsParticles);\n            }\n            this.setState({\n                init: true,\n            }, async () => {\n                await this.loadParticles();\n            });\n        })();\n    }\n    componentWillUnmount() {\n        this.destroy();\n    }\n    render() {\n        const { width, height, className, canvasClassName, id } = this.props;\n        return (React.createElement(\"div\", { className: className, id: id },\n            React.createElement(\"canvas\", { className: canvasClassName, style: {\n                    ...this.props.style,\n                    width,\n                    height,\n                } })));\n    }\n    async refresh() {\n        this.destroy();\n        await this.loadParticles();\n    }\n    async loadParticles() {\n        if (!this.state.init) {\n            return;\n        }\n        const id = this.props.id ?? Particles.defaultProps.id ?? defaultId, container = await tsParticles.load({\n            url: this.props.url,\n            id,\n            options: this.props.options ?? this.props.params,\n        });\n        if (this.props.container) {\n            this.props.container.current = container;\n        }\n        this.setState({\n            library: container,\n        });\n        if (this.props.loaded) {\n            await this.props.loaded(container);\n        }\n    }\n}\nParticles.defaultProps = {\n    width: \"100%\",\n    height: \"100%\",\n    options: {},\n    style: {},\n    url: undefined,\n    id: defaultId,\n};\nexport default Particles;\n","import Particles from \"./Particles\";\nexport default Particles;\nexport { Particles };\n","import { Range } from \"./Range\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class Circle extends Range {\n    constructor(x, y, radius) {\n        super(x, y);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (range instanceof Circle) {\n            const rSum = r + range.radius, dist = Math.sqrt(distPos.x ** 2 + distPos.y ** 2);\n            return rSum > dist;\n        }\n        else if (range instanceof Rectangle) {\n            const { width, height } = range.size, edges = Math.pow(distPos.x - width, 2) + Math.pow(distPos.y - height, 2);\n            return (edges <= r ** 2 ||\n                (distPos.x <= r + width && distPos.y <= r + height) ||\n                distPos.x <= width ||\n                distPos.y <= height);\n        }\n        return false;\n    }\n}\n","export const generatedAttribute = \"generated\";\nexport const mouseDownEvent = \"pointerdown\";\nexport const mouseUpEvent = \"pointerup\";\nexport const mouseLeaveEvent = \"pointerleave\";\nexport const mouseOutEvent = \"pointerout\";\nexport const mouseMoveEvent = \"pointermove\";\nexport const touchStartEvent = \"touchstart\";\nexport const touchEndEvent = \"touchend\";\nexport const touchMoveEvent = \"touchmove\";\nexport const touchCancelEvent = \"touchcancel\";\nexport const resizeEvent = \"resize\";\nexport const visibilityChangeEvent = \"visibilitychange\";\nexport const errorPrefix = \"tsParticles - Error\";\n","export class Range {\n    constructor(x, y) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Range } from \"./Range\";\nexport class Rectangle extends Range {\n    constructor(x, y, width, height) {\n        super(x, y);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n","import { Vector3d } from \"./Vector3d\";\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, 0);\n    }\n    static get origin() {\n        return Vector.create(0, 0);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n","import { errorPrefix } from \"./Constants\";\nimport { isNumber } from \"../../Utils/Utils\";\nexport class Vector3d {\n    constructor(xOrCoords, y, z) {\n        this._updateFromAngle = (angle, length) => {\n            this.x = Math.cos(angle) * length;\n            this.y = Math.sin(angle) * length;\n        };\n        if (!isNumber(xOrCoords) && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : 0;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z ?? 0;\n        }\n        else {\n            throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\n        }\n    }\n    static get origin() {\n        return Vector3d.create(0, 0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this._updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this._updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    normalize() {\n        const length = this.length;\n        if (length != 0) {\n            this.multTo(1.0 / length);\n        }\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : 0;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ColorAnimation {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.offset = 0;\n        this.speed = 1;\n        this.delay = 0;\n        this.decay = 0;\n        this.sync = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ColorAnimation } from \"./ColorAnimation\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nimport { HslAnimation } from \"./HslAnimation\";\nimport { OptionsColor } from \"./OptionsColor\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.delay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexport class RangedAnimationOptions extends AnimationOptions {\n    constructor() {\n        super();\n        this.mode = \"auto\";\n        this.startValue = \"random\";\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n    }\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nexport class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if (data?.value === undefined) {\n            return;\n        }\n        this.value = data.value;\n    }\n}\n","export class Random {\n    constructor() {\n        this.enable = false;\n        this.minimumValue = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n    }\n}\n","import { AnimationOptions, RangedAnimationOptions } from \"./AnimationOptions\";\nimport { Random } from \"./Random\";\nimport { isBoolean } from \"../../Utils/Utils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ValueWithRandom {\n    constructor() {\n        this.random = new Random();\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (isBoolean(data.random)) {\n            this.random.enable = data.random;\n        }\n        else {\n            this.random.load(data.random);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value, this.random.enable ? this.random.minimumValue : undefined);\n        }\n    }\n}\nexport class AnimationValueWithRandom extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new AnimationOptions();\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\nexport class RangedAnimationValueWithRandom extends AnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RangedAnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { getStyleFromRgb } from \"./ColorUtils\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, 0, 0, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data;\n    const pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : 0), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, transformData = {\n        a: rotateData.cos * (transform.a ?? 1),\n        b: rotateData.sin * (transform.b ?? 1),\n        c: -rotateData.sin * (transform.c ?? 1),\n        d: rotateData.cos * (transform.d ?? 1),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    context.beginPath();\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const strokeWidth = particle.strokeWidth ?? 0;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    drawShape(container, context, particle, radius, opacity, delta);\n    if (strokeWidth > 0) {\n        context.stroke();\n    }\n    if (particle.close) {\n        context.closePath();\n    }\n    if (particle.fill) {\n        context.fill();\n    }\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.globalCompositeOperation = \"source-over\";\n    context.setTransform(1, 0, 0, 1, 0, 0);\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer || !drawer.afterEffect) {\n        return;\n    }\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === \"darken\" ? -1 : 1) * value,\n    };\n}\n","import { getRandom, getRangeValue, mix, randomInRange, setRangeValue } from \"./NumberUtils\";\nimport { isArray, isString, itemFromArray } from \"./Utils\";\nconst randomColorValue = \"random\", midColorValue = \"mid\", colorManagers = new Map();\nexport function addColorManager(manager) {\n    colorManagers.set(manager.key, manager);\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\nfunction stringToRgba(input) {\n    for (const [, manager] of colorManagers) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) => {\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    }), regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, result = regex.exec(hexFixed);\n    return result\n        ? {\n            a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n            b: parseInt(result[3], 16),\n            g: parseInt(result[2], 16),\n            r: parseInt(result[1], 16),\n        }\n        : undefined;\n}\nexport function rangeColorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return colorToRgb(color.value, index, useIndex);\n    }\n    if (isArray(color.value)) {\n        return rangeColorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\n    }\n    if (isArray(color.value)) {\n        return colorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(color, index, useIndex = true) {\n    const rgb = colorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / 255, g1 = color.g / 255, b1 = color.b / 255, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: 0,\n        l: (max + min) / 2,\n        s: 0,\n    };\n    if (max !== min) {\n        res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n    }\n    res.l *= 100;\n    res.s *= 100;\n    res.h *= 60;\n    if (res.h < 0) {\n        res.h += 360;\n    }\n    if (res.h >= 360) {\n        res.h -= 360;\n    }\n    return res;\n}\nexport function stringToAlpha(input) {\n    return stringToRgba(input)?.a;\n}\nexport function stringToRgb(input) {\n    return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n    const result = { b: 0, g: 0, r: 0 }, hslPercent = {\n        h: hsl.h / 360,\n        l: hsl.l / 100,\n        s: hsl.s / 100,\n    };\n    if (!hslPercent.s) {\n        result.r = result.g = result.b = hslPercent.l;\n    }\n    else {\n        const q = hslPercent.l < 0.5\n            ? hslPercent.l * (1 + hslPercent.s)\n            : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s, p = 2 * hslPercent.l - q;\n        result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n        result.g = hue2rgb(p, q, hslPercent.h);\n        result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n    }\n    result.r = Math.floor(result.r * 255);\n    result.g = Math.floor(result.g * 255);\n    result.b = Math.floor(result.b * 255);\n    return result;\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min ?? 0;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? 1})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? 1})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor ?? destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n    const color = isString(optColor) ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb({\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb({\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / 100) * reduceFactor;\n        colorValue.decay = 1 - getRangeValue(colorAnimation.decay);\n        colorValue.status = \"increasing\";\n        colorValue.loops = 0;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        colorValue.time = 0;\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * 1000;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n    }\n    else {\n        colorValue.velocity = 0;\n    }\n}\n","import { isBoolean, isNumber } from \"./Utils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nlet _random = Math.random;\nconst easings = new Map();\nexport function addEasing(name, easing) {\n    if (easings.get(name)) {\n        return;\n    }\n    easings.set(name, easing);\n}\nexport function getEasing(name) {\n    return easings.get(name) || ((value) => value);\n}\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    return clamp(_random(), 0, 1 - 1e-16);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r);\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = 0;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && isNumber(source))) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getValue(options) {\n    const random = options.random, { enable, minimumValue } = isBoolean(random)\n        ? {\n            enable: random,\n            minimumValue: 0,\n        }\n        : random;\n    return enable ? getRangeValue(setRangeValue(options.value, minimumValue)) : getRangeValue(options.value);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** 2 + dy ** 2) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (isNumber(direction)) {\n        return (direction * Math.PI) / 180;\n    }\n    switch (direction) {\n        case \"top\":\n            return -Math.PI / 2;\n        case \"top-right\":\n            return -Math.PI / 4;\n        case \"right\":\n            return 0;\n        case \"bottom-right\":\n            return Math.PI / 4;\n        case \"bottom\":\n            return Math.PI / 2;\n        case \"bottom-left\":\n            return (3 * Math.PI) / 4;\n        case \"left\":\n            return Math.PI;\n        case \"top-left\":\n            return (-3 * Math.PI) / 4;\n        case \"inside\":\n            return Math.atan2(center.y - position.y, center.x - position.x);\n        case \"outside\":\n            return Math.atan2(position.y - center.y, position.x - center.x);\n        default:\n            return getRandom() * Math.PI * 2;\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * 2 * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position && data.position.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / 100,\n            y: (data.position.y * data.size.height) / 100,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    return {\n        x: ((data.position?.x ?? getRandom() * 100) * data.size.width) / 100,\n        y: ((data.position?.y ?? getRandom() * 100) * data.size.height) / 100,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    return {\n        x: data.position?.x ?? getRandom() * data.size.width,\n        y: data.position?.y ?? getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    return input ? (input.endsWith(\"%\") ? parseFloat(input) / 100 : parseFloat(input)) : 1;\n}\n","export class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","export class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n}\n","import { ParticlesBounceFactor } from \"./ParticlesBounceFactor\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n","import { CollisionsAbsorb } from \"./CollisionsAbsorb\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.maxSpeed = 50;\n        this.mode = \"bounce\";\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    get rotateX() {\n        return this.rotate.x;\n    }\n    set rotateX(value) {\n        this.rotate.x = value;\n    }\n    get rotateY() {\n        return this.rotate.y;\n    }\n    set rotateY(value) {\n        this.rotate.y = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const rotateX = data.rotate?.x ?? data.rotateX;\n        if (rotateX !== undefined) {\n            this.rotate.x = rotateX;\n        }\n        const rotateY = data.rotate?.y ?? data.rotateY;\n        if (rotateY !== undefined) {\n            this.rotate.y = rotateY;\n        }\n    }\n}\n","export class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = \"percent\";\n        this.radius = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../../ValueWithRandom\";\nimport { deepExtend } from \"../../../../../Utils/Utils\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n","import { OptionsColor } from \"../../OptionsColor\";\nexport class MoveTrailFill {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n    }\n}\n","import { MoveTrailFill } from \"./MoveTrailFill\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    get fillColor() {\n        return this.fill.color;\n    }\n    set fillColor(value) {\n        this.fill.load({ color: value });\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined || data.fillColor !== undefined) {\n            this.fill.load(data.fill || { color: data.fillColor });\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n","export class OutModes {\n    constructor() {\n        this.default = \"out\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = data.bottom ?? data.default;\n        this.left = data.left ?? data.default;\n        this.right = data.right ?? data.default;\n        this.top = data.top ?? data.default;\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.position) {\n            this.position = deepExtend({}, data.position);\n        }\n    }\n}\n","import { isNumber, isObject } from \"../../../../Utils/Utils\";\nimport { MoveAngle } from \"./MoveAngle\";\nimport { MoveAttract } from \"./MoveAttract\";\nimport { MoveCenter } from \"./MoveCenter\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { MovePath } from \"./Path/MovePath\";\nimport { MoveTrail } from \"./MoveTrail\";\nimport { OutModes } from \"./OutModes\";\nimport { Spin } from \"./Spin\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = \"none\";\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(_) {\n    }\n    get noise() {\n        return this.path;\n    }\n    set noise(value) {\n        this.path = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.angle.load(isNumber(data.angle) ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = isNumber(data.distance)\n                ? {\n                    horizontal: data.distance,\n                    vertical: data.distance,\n                }\n                : { ...data.distance };\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = data.outModes ?? data.outMode ?? data.out_mode;\n        if (outModes !== undefined) {\n            if (isObject(outModes)) {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load(data.path ?? data.noise);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class OpacityAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 2;\n    }\n    get opacity_min() {\n        return this.minimumValue;\n    }\n    set opacity_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.opacity_min !== undefined && data.minimumValue === undefined) {\n            data.minimumValue = data.opacity_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { OpacityAnimation } from \"./OpacityAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Opacity extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","export class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.width = 1920;\n        this.height = 1080;\n    }\n    get area() {\n        return this.width;\n    }\n    set area(value) {\n        this.width = value;\n    }\n    get factor() {\n        return this.height;\n    }\n    set factor(value) {\n        this.height = value;\n    }\n    get value_area() {\n        return this.area;\n    }\n    set value_area(value) {\n        this.area = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const width = data.width ?? data.area ?? data.value_area;\n        if (width !== undefined) {\n            this.width = width;\n        }\n        const height = data.height ?? data.factor;\n        if (height !== undefined) {\n            this.height = height;\n        }\n    }\n}\n","import { ParticlesDensity } from \"./ParticlesDensity\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = 0;\n        this.value = 0;\n    }\n    get max() {\n        return this.limit;\n    }\n    set max(value) {\n        this.limit = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.density.load(data.density);\n        const limit = data.limit ?? data.max;\n        if (limit !== undefined) {\n            this.limit = limit;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n","import { deepExtend, isArray } from \"../../../../Utils/Utils\";\nconst charKey = \"character\", charAltKey = \"char\", imageKey = \"image\", imageAltKey = \"images\", polygonKey = \"polygon\", polygonAltKey = \"star\";\nexport class Shape {\n    constructor() {\n        this.loadShape = (item, mainKey, altKey, altOverride) => {\n            if (!item) {\n                return;\n            }\n            const itemIsArray = isArray(item), emptyValue = itemIsArray ? [] : {}, mainDifferentValues = itemIsArray !== isArray(this.options[mainKey]), altDifferentValues = itemIsArray !== isArray(this.options[altKey]);\n            if (mainDifferentValues) {\n                this.options[mainKey] = emptyValue;\n            }\n            if (altDifferentValues && altOverride) {\n                this.options[altKey] = emptyValue;\n            }\n            this.options[mainKey] = deepExtend(this.options[mainKey] ?? emptyValue, item);\n            if (!this.options[altKey] || altOverride) {\n                this.options[altKey] = deepExtend(this.options[altKey] ?? emptyValue, item);\n            }\n        };\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = \"circle\";\n    }\n    get character() {\n        return (this.options[charKey] ?? this.options[charAltKey]);\n    }\n    set character(value) {\n        this.options[charAltKey] = this.options[charKey] = value;\n    }\n    get custom() {\n        return this.options;\n    }\n    set custom(value) {\n        this.options = value;\n    }\n    get image() {\n        return (this.options[imageKey] ?? this.options[imageAltKey]);\n    }\n    set image(value) {\n        this.options[imageAltKey] = this.options[imageKey] = value;\n    }\n    get images() {\n        return this.image;\n    }\n    set images(value) {\n        this.image = value;\n    }\n    get polygon() {\n        return (this.options[polygonKey] ?? this.options[polygonAltKey]);\n    }\n    set polygon(value) {\n        this.options[polygonAltKey] = this.options[polygonKey] = value;\n    }\n    get stroke() {\n        return [];\n    }\n    set stroke(_value) {\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const options = data.options ?? data.custom;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend(this.options[shape] ?? {}, item);\n                }\n            }\n        }\n        this.loadShape(data.character, charKey, charAltKey, true);\n        this.loadShape(data.polygon, polygonKey, polygonAltKey, false);\n        this.loadShape(data.image ?? data.images, imageKey, imageAltKey, true);\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class SizeAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 5;\n    }\n    get size_min() {\n        return this.minimumValue;\n    }\n    set size_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.size_min !== undefined && data.minimumValue === undefined) {\n            data.minimumValue = data.size_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { SizeAnimation } from \"./SizeAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Size extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.random.minimumValue = 1;\n        this.value = 3;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { AnimatableColor } from \"../AnimatableColor\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils\";\nimport { AnimatableColor } from \"../AnimatableColor\";\nimport { Collisions } from \"./Collisions/Collisions\";\nimport { Move } from \"./Move/Move\";\nimport { Opacity } from \"./Opacity/Opacity\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber\";\nimport { Shadow } from \"./Shadow\";\nimport { Shape } from \"./Shape/Shape\";\nimport { Size } from \"./Size/Size\";\nimport { Stroke } from \"./Stroke\";\nimport { ZIndex } from \"./ZIndex/ZIndex\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        if (data.groups !== undefined) {\n            for (const group in data.groups) {\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend(this.groups[group] ?? {}, item);\n                }\n            }\n        }\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        const collisions = data.move?.collisions ?? data.move?.bounce;\n        if (collisions !== undefined) {\n            this.collisions.enable = collisions;\n        }\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = data.stroke ?? data.shape?.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, (t) => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.plugins.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.plugins.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n","import { collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, } from \"./NumberUtils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nconst _logger = {\n    debug: console.debug,\n    error: console.error,\n    info: console.info,\n    log: console.log,\n    verbose: console.log,\n    warning: console.warn,\n};\nexport function setLogger(logger) {\n    _logger.debug = logger.debug || _logger.debug;\n    _logger.error = logger.error || _logger.error;\n    _logger.info = logger.info || _logger.info;\n    _logger.log = logger.log || _logger.log;\n    _logger.verbose = logger.verbose || _logger.verbose;\n    _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n    return _logger;\n}\nfunction rectSideBounce(data) {\n    const res = { bounced: false }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data;\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) / 2 && velocity > 0) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) / 2 && velocity < 0)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, (selector) => {\n        return element.matches(selector);\n    });\n    return isArray(res) ? res.some((t) => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function safeMutationObserver(callback) {\n    if (isSsr() || typeof MutationObserver === \"undefined\") {\n        return;\n    }\n    return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n    return value === array || (isArray(array) && array.indexOf(value) > -1);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\n    }\n    catch {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    return areBoundsInside(calculateBounds(point, radius ?? 0), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === \"bottom\") {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === \"left\")) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === \"right\")) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === \"top\")) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (!isObject(source)) {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], destDict = destination;\n            destDict[key] =\n                isObject(value) && Array.isArray(value)\n                    ? value.map((v) => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, (t) => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, (div) => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, (selector) => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, (div) => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getValue(p.options.bounce.horizontal), getValue(p.options.bounce.vertical)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1);\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < 0) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), resH = rectSideBounce({\n        pSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        pOtherSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        rectSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        rectOtherSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        velocity: particle.velocity.x,\n        factor: getValue(particle.options.bounce.horizontal),\n    });\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        pSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        pOtherSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        rectSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        rectOtherSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        velocity: particle.velocity.y,\n        factor: getValue(particle.options.bounce.vertical),\n    });\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, 0);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.find((t, index) => callback(t, index)) : callback(obj, 0) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n    const valueRange = options.value, animationOptions = options.animation, res = {\n        delayTime: getRangeValue(animationOptions.delay) * 1000,\n        enable: animationOptions.enable,\n        value: getRangeValue(options.value) * pxRatio,\n        max: getRangeMax(valueRange) * pxRatio,\n        min: getRangeMin(valueRange) * pxRatio,\n        loops: 0,\n        maxLoops: getRangeValue(animationOptions.count),\n        time: 0,\n    };\n    if (animationOptions.enable) {\n        res.decay = 1 - getRangeValue(animationOptions.decay);\n        switch (animationOptions.mode) {\n            case \"increase\":\n                res.status = \"increasing\";\n                break;\n            case \"decrease\":\n                res.status = \"decreasing\";\n                break;\n            case \"random\":\n                res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                break;\n        }\n        const autoStatus = animationOptions.mode === \"auto\";\n        switch (animationOptions.startValue) {\n            case \"min\":\n                res.value = res.min;\n                if (autoStatus) {\n                    res.status = \"increasing\";\n                }\n                break;\n            case \"max\":\n                res.value = res.max;\n                if (autoStatus) {\n                    res.status = \"decreasing\";\n                }\n                break;\n            case \"random\":\n            default:\n                res.value = randomInRange(res);\n                if (autoStatus) {\n                    res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                }\n                break;\n        }\n    }\n    res.initialValue = res.value;\n    return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n    const isPercent = positionOrSize.mode === \"percent\";\n    if (!isPercent) {\n        const { mode: _, ...rest } = positionOrSize;\n        return rest;\n    }\n    const isPosition = \"x\" in positionOrSize;\n    if (isPosition) {\n        return {\n            x: (positionOrSize.x / 100) * canvasSize.width,\n            y: (positionOrSize.y / 100) * canvasSize.height,\n        };\n    }\n    else {\n        return {\n            width: (positionOrSize.width / 100) * canvasSize.width,\n            height: (positionOrSize.height / 100) * canvasSize.height,\n        };\n    }\n}\nexport function getPosition(position, canvasSize) {\n    return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n    return getPositionOrSize(size, canvasSize);\n}\nexport function isBoolean(arg) {\n    return typeof arg === \"boolean\";\n}\nexport function isString(arg) {\n    return typeof arg === \"string\";\n}\nexport function isNumber(arg) {\n    return typeof arg === \"number\";\n}\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\nexport function isObject(arg) {\n    return typeof arg === \"object\" && arg !== null;\n}\nexport function isArray(arg) {\n    return Array.isArray(arg);\n}\n","import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this._applyPostDrawUpdaters = (particle) => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw && updater.afterDraw(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw && updater.beforeDraw(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize && plugin.resize();\n            }\n        };\n        this._getPluginParticleColors = (particle) => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n            if (coverRgb) {\n                const coverColor = {\n                    ...coverRgb,\n                    a: cover.opacity,\n                };\n                this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._originalStyle = deepExtend({}, element.style);\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                const trail = options.particles.move.trail;\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity: 1 / trail.length,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity: 1 / trail.length,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = (baseColor) => {\n            this.draw((ctx) => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw((ctx) => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver((observer) => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver((observer) => observer.observe(element, { attributes: true }));\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!(element && originalStyle)) {\n                return;\n            }\n            const style = element.style;\n            style.position = originalStyle.position;\n            style.zIndex = originalStyle.zIndex;\n            style.top = originalStyle.top;\n            style.left = originalStyle.left;\n            style.width = originalStyle.width;\n            style.height = originalStyle.height;\n        };\n        this._safeMutationObserver = (callback) => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            const priority = \"important\", style = element.style;\n            style.setProperty(\"position\", \"fixed\", priority);\n            style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n            style.setProperty(\"top\", \"0\", priority);\n            style.setProperty(\"left\", \"0\", priority);\n            style.setProperty(\"width\", \"100%\", priority);\n            style.setProperty(\"height\", \"100%\", priority);\n        };\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element && element.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? 1, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = safeMutationObserver((records) => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this._paintBase(this._coverColorStyle);\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...size };\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw((ctx) => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, (mode) => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                setTimeout(() => this._mouseTouchFinish(), 500);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) => theme.name === themeName);\n            if (theme && theme.default.auto) {\n                container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document && document.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.getAnimationStatus()) {\n                    container.play(true);\n                }\n                else {\n                    container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = async () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            this._resizeTimeout = setTimeout(async () => {\n                const canvas = this.container.canvas;\n                canvas && (await canvas.windowResize());\n            }, this.container.actualOptions.interactivity.events.resize.delay * 1000);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            const interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === \"window\") {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === \"parent\" && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = (add) => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver(async (entries) => {\n                    const entry = entries.find((e) => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    await this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const [, plugin] of container.plugins) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = (e) => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity || !interactivity.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === \"parent\") {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - 1], canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? 0),\n                        y: lastTouch.clientY - (canvasRect.top ?? 0),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { BackgroundMaskCover } from \"./BackgroundMaskCover\";\nimport { isString } from \"../../../Utils/Utils\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover;\n            const color = (isString(data.cover) ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","export class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n","export class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = \"circle\";\n    }\n    get el() {\n        return this.elementId;\n    }\n    set el(value) {\n        this.elementId = value;\n    }\n    get elementId() {\n        return this.ids;\n    }\n    set elementId(value) {\n        this.ids = value;\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const ids = data.ids ?? data.elementId ?? data.el;\n        if (ids !== undefined) {\n            this.ids = ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","export class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n","import { Parallax } from \"./Parallax\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n","export class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean } from \"../../../../Utils/Utils\";\nimport { ClickEvent } from \"./ClickEvent\";\nimport { DivEvent } from \"./DivEvent\";\nimport { HoverEvent } from \"./HoverEvent\";\nimport { ResizeEvent } from \"./ResizeEvent\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    get onclick() {\n        return this.onClick;\n    }\n    set onclick(value) {\n        this.onClick = value;\n    }\n    get ondiv() {\n        return this.onDiv;\n    }\n    set ondiv(value) {\n        this.onDiv = value;\n    }\n    get onhover() {\n        return this.onHover;\n    }\n    set onhover(value) {\n        this.onHover = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.onClick.load(data.onClick ?? data.onclick);\n        const onDiv = data.onDiv ?? data.ondiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, (t) => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load(data.onHover ?? data.onhover);\n        if (isBoolean(data.resize)) {\n            this.resize.enable = data.resize;\n        }\n        else {\n            this.resize.load(data.resize);\n        }\n    }\n}\n","export class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (!this._container) {\n            return;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (!interactors) {\n            return;\n        }\n        for (const interactor of interactors) {\n            if (!interactor.loadModeOptions) {\n                continue;\n            }\n            interactor.loadModeOptions(this, data);\n        }\n    }\n}\n","import { Events } from \"./Events/Events\";\nimport { Modes } from \"./Modes/Modes\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = \"window\";\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    get detect_on() {\n        return this.detectsOn;\n    }\n    set detect_on(value) {\n        this.detectsOn = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const detectsOn = data.detectsOn ?? data.detect_on;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class ManualParticle {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.position) {\n            this.position = {\n                x: data.position.x ?? 50,\n                y: data.position.y ?? 50,\n                mode: data.position.mode ?? \"percent\",\n            };\n        }\n        if (data.options) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = \"canvas\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.maxWidth !== undefined) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (data.mode !== undefined) {\n            if (data.mode === \"screen\") {\n                this.mode = \"screen\";\n            }\n            else {\n                this.mode = \"canvas\";\n            }\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","export class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = \"any\";\n        this.value = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ThemeDefault } from \"./ThemeDefault\";\nimport { deepExtend } from \"../../../Utils/Utils\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { Background } from \"./Background/Background\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask\";\nimport { FullScreen } from \"./FullScreen/FullScreen\";\nimport { Interactivity } from \"./Interactivity/Interactivity\";\nimport { ManualParticle } from \"./ManualParticle\";\nimport { Responsive } from \"./Responsive\";\nimport { Theme } from \"./Theme/Theme\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class Options {\n    constructor(engine, container) {\n        this._findDefaultTheme = (mode) => {\n            return (this.themes.find((theme) => theme.default.value && theme.default.mode === mode) ??\n                this.themes.find((theme) => theme.default.value && theme.default.mode === \"any\"));\n        };\n        this._importPreset = (preset) => {\n            this.load(this._engine.plugins.getPreset(preset));\n        };\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    get backgroundMode() {\n        return this.fullScreen;\n    }\n    set backgroundMode(value) {\n        this.fullScreen.load(value);\n    }\n    get fps_limit() {\n        return this.fpsLimit;\n    }\n    set fps_limit(value) {\n        this.fpsLimit = value;\n    }\n    get retina_detect() {\n        return this.detectRetina;\n    }\n    set retina_detect(value) {\n        this.detectRetina = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, (preset) => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = data.detectRetina ?? data.retina_detect;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = data.fpsLimit ?? data.fps_limit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = data.fullScreen ?? data.backgroundMode;\n        if (isBoolean(fullScreen)) {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles) {\n            this.manualParticles = data.manualParticles.map((t) => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.plugins.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find((t) => t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = this._findDefaultTheme(\"dark\")?.name;\n        this.defaultThemes.light = this._findDefaultTheme(\"light\")?.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find((t) => t.mode === \"screen\" && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions?.options);\n        return responsiveOptions?.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find((theme) => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch && mediaMatch.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? \"dark\" : \"light\");\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n}\n","export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = engine.plugins.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    async externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && (await interactor.interact(delta));\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode && interactor.handleClickMode(mode);\n        }\n    }\n    init() {\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case \"external\":\n                    this._externalInteractors.push(interactor);\n                    break;\n                case \"particles\":\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    async particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && (await interactor.interact(particle, delta));\n        }\n    }\n    async reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && interactor.reset(particle);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && interactor.reset(particle);\n        }\n    }\n}\n","import { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, getValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\nconst fixOutMode = (data) => {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * 2;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n};\nexport class Particle {\n    constructor(engine, id, container, position, overrideOptions, group) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = 0) => {\n            for (const [, plugin] of container.plugins) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-horizontal\"],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-vertical\"],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                return this._calcPosition(container, undefined, zIndex, tryCount + 1);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n                return res;\n            }\n            const rad = (Math.PI / 180) * getRangeValue(moveOptions.angle.value), radOffset = (Math.PI / 180) * getRangeValue(moveOptions.angle.offset), range = {\n                left: radOffset - rad / 2,\n                right: radOffset + rad / 2,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = 0) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries;\n            if (retries >= 0 && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find((particle) => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = (color) => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const backFactor = this.roll.horizontal && this.roll.vertical ? 2 : 1, backSum = this.roll.horizontal ? Math.PI / 2 : 0, rolled = Math.floor(((this.roll.angle ?? 0) + backSum) / (Math.PI / backFactor)) % 2;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = (position) => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value);\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? 0,\n                mode: this.options.move.center.mode ?? \"percent\",\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case \"inside\":\n                    this.outType = \"inside\";\n                    break;\n                case \"outside\":\n                    this.outType = \"outside\";\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._loadShapeData = (shapeOptions, reduceDuplicates) => {\n            const shapeData = shapeOptions.options[this.shape];\n            if (!shapeData) {\n                return;\n            }\n            return deepExtend({\n                close: shapeOptions.close,\n                fill: shapeOptions.fill,\n            }, itemFromSingleOrMultiple(shapeData, this.id, reduceDuplicates));\n        };\n        this._engine = engine;\n        this.init(id, position, overrideOptions, group);\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        for (const updater of container.particles.updaters) {\n            if (updater.particleDestroyed) {\n                updater.particleDestroyed(this, override);\n            }\n        }\n        if (pathGenerator) {\n            pathGenerator.reset(this);\n        }\n    }\n    draw(delta) {\n        const container = this.container;\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        container.canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return (this.getRadius() ** 2 * Math.PI) / 2;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.fill = true;\n        this.pathRotation = false;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), shapeType = particlesOptions.shape.type, { reduceDuplicates } = particlesOptions;\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const shapeOptions = particlesOptions.shape;\n        if (overrideOptions && overrideOptions.shape && overrideOptions.shape.type) {\n            const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n            if (shape) {\n                this.shape = shape;\n                shapeOptions.load(overrideOptions.shape);\n            }\n        }\n        this.shapeData = this._loadShapeData(shapeOptions, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.fill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.close = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getValue(pathOptions.delay) * 1000;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.plugins.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n        particles.lastZIndex = this.position.z;\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = this._engine.plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        if (drawer && drawer.loadShape) {\n            drawer.loadShape(this);\n        }\n        const sideCountFunc = drawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of container.particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of container.particles.movers) {\n            mover.init && mover.init(this);\n        }\n        if (drawer && drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.particleCreated && plugin.particleCreated(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset && updater.reset(this);\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < 4; i++) {\n                this._subs.push(new QuadTree(new Rectangle(x + (width / 2) * (i % 2), y + (height / 2) * (Math.round(i / 2) - (i % 2)), width / 2, height / 2), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some((sub) => sub.insert(point));\n    }\n    query(range, check, found) {\n        const res = found || [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                sub.query(range, check, res);\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { getLogger, getPosition } from \"../Utils/Utils\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { errorPrefix } from \"./Utils/Constants\";\nconst qTreeCapacity = 4;\nconst qTreeRectangle = (canvasSize) => {\n    return new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._applyDensity = (options, manualCount, group) => {\n            if (!options.number.density?.enable) {\n                return;\n            }\n            const numberOptions = options.number, densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter((t) => t.group === group).length);\n            this.limit = numberOptions.limit * densityFactor;\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = (densityOptions) => {\n            const container = this._container;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return 1;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this.pool.pop();\n                if (particle) {\n                    particle.init(this._nextId, position, overrideOptions, group);\n                }\n                else {\n                    particle = new Particle(this._engine, this._nextId, this._container, position, overrideOptions, group);\n                }\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(\"particleAdded\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n                return;\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            particle.destroy(override);\n            const zIdx = this._zArray.indexOf(particle);\n            this._array.splice(index, 1);\n            this._zArray.splice(zIdx, 1);\n            this.pool.push(particle);\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this.pool = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = this._engine.plugins.getMovers(container, true);\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(particle.position ? getPosition(particle.position, container.canvas.size) : undefined, particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const container = this._container, options = container.actualOptions, limit = options.particles.number.limit;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this._container;\n        container.canvas.clear();\n        await this.update(delta);\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    init() {\n        const container = this._container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        let handled = false;\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n        this._interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this._interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (index < 0 || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            this._removeParticle(i--, group, override) && deleted++;\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups;\n        for (const group in groups) {\n            this._applyDensity(groups[group], 0, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    async update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.update && plugin.update(delta);\n        }\n        for (const particle of this._array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            await this._interactionManager.reset(particle);\n            for (const [, plugin] of this._container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                if (plugin.particleUpdate) {\n                    plugin.particleUpdate(particle, delta);\n                }\n            }\n            for (const mover of this.movers) {\n                mover.isEnabled(particle) && mover.move(particle, delta);\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            this.pool.push(...particlesToDelete);\n        }\n        await this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n        if (this.needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = zArray[zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = 1;\n        this.reduceFactor = 1;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n        this.reduceFactor = 1;\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { getLogger, isFunction } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = 60, smooth = false) {\n    return {\n        value,\n        factor: smooth ? 60 / fpsLimit : (60 * value) / 1000,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nconst defaultPathGeneratorKey = \"default\", defaultPathGenerator = {\n    generate: (p) => p.velocity,\n    init: () => {\n    },\n    update: () => {\n    },\n    reset: () => {\n    },\n};\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this.id = id;\n        this._intersectionManager = (entries) => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                (entry.isIntersecting ? this.play : this.pause)();\n            }\n        };\n        this._nextFrame = async (timestamp) => {\n            try {\n                if (!this.smooth &&\n                    this.lastFrameTime !== undefined &&\n                    timestamp < this.lastFrameTime + 1000 / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this.lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this.lastFrameTime, this.fpsLimit, this.smooth);\n                this.addLifeTime(delta.value);\n                this.lastFrameTime = timestamp;\n                if (delta.value > 1000) {\n                    this.draw(false);\n                    return;\n                }\n                await this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.getAnimationStatus()) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.fpsLimit = 120;\n        this.smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this._intersectionObserver = new IntersectionObserver((entries) => this._intersectionManager(entries));\n        }\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator ?? defaultPathGenerator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            drawer.destroy && drawer.destroy(this);\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this._engine.plugins.destroy(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this);\n        if (idx >= 0) {\n            mainArr.splice(idx, 1);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        this._drawAnimationFrame = requestAnimationFrame(async (timestamp) => {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this._nextFrame(timestamp);\n        });\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    getAnimationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode && plugin.handleClickMode(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const shapes = this._engine.plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this._duration = getRangeValue(this.actualOptions.duration) * 1000;\n        this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n        this._lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n        this.smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.drawers) {\n            drawer.init && (await drawer.init(this));\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.init && (await plugin.init());\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup && plugin.particlesSetup();\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimationFrame(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause && plugin.pause();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate || false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = undefined;\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator || !guardCheck(this)) {\n            return;\n        }\n        const pathGenerator = { ...defaultPathGenerator };\n        if (isFunction(pathOrGenerator)) {\n            pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                pathGenerator.init = init;\n            }\n            if (update) {\n                pathGenerator.update = update;\n            }\n        }\n        else {\n            const oldGenerator = pathGenerator;\n            pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n            pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n            pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n        }\n        this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            this._delayTimeout = setTimeout(async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    plugin.start && (await plugin.start());\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            }, this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop && plugin.stop();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this.responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this.responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n","export class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        this.removeEventListener(type, listener);\n        let arr = this._listeners.get(type);\n        if (!arr) {\n            arr = [];\n            this._listeners.set(type, arr);\n        }\n        arr.push(listener);\n    }\n    dispatchEvent(type, args) {\n        const listeners = this._listeners.get(type);\n        listeners && listeners.forEach((handler) => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < 0) {\n            return;\n        }\n        if (length === 1) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, 1);\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../Utils/Utils\";\nfunction getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = [...initializers.values()].map((t) => t(container));\n        map.set(container, res);\n    }\n    return res;\n}\nexport class Plugins {\n    constructor(engine) {\n        this._engine = engine;\n        this.plugins = [];\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.drawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    addInteractor(name, initInteractor) {\n        this._initializers.interactors.set(name, initInteractor);\n    }\n    addParticleMover(name, initMover) {\n        this._initializers.movers.set(name, initMover);\n    }\n    addParticleUpdater(name, initUpdater) {\n        this._initializers.updaters.set(name, initUpdater);\n    }\n    addPathGenerator(type, pathGenerator) {\n        !this.getPathGenerator(type) && this.pathGenerators.set(type, pathGenerator);\n    }\n    addPlugin(plugin) {\n        !this.getPlugin(plugin.id) && this.plugins.push(plugin);\n    }\n    addPreset(presetKey, options, override = false) {\n        (override || !this.getPreset(presetKey)) && this.presets.set(presetKey, options);\n    }\n    addShapeDrawer(types, drawer) {\n        executeOnSingleOrMultiple(types, (type) => {\n            !this.getShapeDrawer(type) && this.drawers.set(type, drawer);\n        });\n    }\n    destroy(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            plugin.needsPlugin(container.actualOptions) && res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find((t) => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.drawers.get(type);\n    }\n    getSupportedShapes() {\n        return this.drawers.keys();\n    }\n    getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    loadOptions(options, sourceOptions) {\n        for (const plugin of this.plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        for (const updater of updaters) {\n            updater.loadOptions && updater.loadOptions(options, ...sourceOptions);\n        }\n    }\n}\n","import { errorPrefix, generatedAttribute } from \"./Utils/Constants\";\nimport { getLogger, isBoolean, isFunction, isNumber, isString, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { Container } from \"./Container\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher\";\nimport { Plugins } from \"./Utils/Plugins\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return response.json();\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nfunction isParamsEmpty(params) {\n    return !params.id && !params.element && !params.url && !params.options;\n}\nfunction isParams(obj) {\n    return !isParamsEmpty(obj);\n}\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = new Plugins(this);\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get version() {\n        return \"2.12.0\";\n    }\n    addConfig(nameOrConfig, config) {\n        if (isString(nameOrConfig)) {\n            if (config) {\n                config.name = nameOrConfig;\n                this._configs.set(nameOrConfig, config);\n            }\n        }\n        else {\n            this._configs.set(nameOrConfig.name ?? \"default\", nameOrConfig);\n        }\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this.plugins.addInteractor(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this.plugins.addParticleMover(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this.plugins.addParticleUpdater(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        this.plugins.addPathGenerator(name, generator);\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        this.plugins.addPlugin(plugin);\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        this.plugins.addPreset(preset, options, override);\n        await this.refresh(refresh);\n    }\n    async addShape(shape, drawer, initOrRefresh, afterEffectOrRefresh, destroyOrRefresh, refresh = true) {\n        let customDrawer;\n        let realRefresh = refresh, realInit, realAfterEffect, realDestroy;\n        if (isBoolean(initOrRefresh)) {\n            realRefresh = initOrRefresh;\n            realInit = undefined;\n        }\n        else {\n            realInit = initOrRefresh;\n        }\n        if (isBoolean(afterEffectOrRefresh)) {\n            realRefresh = afterEffectOrRefresh;\n            realAfterEffect = undefined;\n        }\n        else {\n            realAfterEffect = afterEffectOrRefresh;\n        }\n        if (isBoolean(destroyOrRefresh)) {\n            realRefresh = destroyOrRefresh;\n            realDestroy = undefined;\n        }\n        else {\n            realDestroy = destroyOrRefresh;\n        }\n        if (isFunction(drawer)) {\n            customDrawer = {\n                afterEffect: realAfterEffect,\n                destroy: realDestroy,\n                draw: drawer,\n                init: realInit,\n            };\n        }\n        else {\n            customDrawer = drawer;\n        }\n        this.plugins.addShapeDrawer(shape, customDrawer);\n        await this.refresh(realRefresh);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this._domArray;\n    }\n    domItem(index) {\n        const dom = this.dom(), item = dom[index];\n        if (!item || item.destroyed) {\n            dom.splice(index, 1);\n            return;\n        }\n        return item;\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    async load(tagIdOrOptionsOrParams, options) {\n        return this.loadFromArray(tagIdOrOptionsOrParams, options);\n    }\n    async loadFromArray(tagIdOrOptionsOrParams, optionsOrIndex, index) {\n        let params;\n        if (!isParams(tagIdOrOptionsOrParams)) {\n            params = {};\n            if (isString(tagIdOrOptionsOrParams)) {\n                params.id = tagIdOrOptionsOrParams;\n            }\n            else {\n                params.options = tagIdOrOptionsOrParams;\n            }\n            if (isNumber(optionsOrIndex)) {\n                params.index = optionsOrIndex;\n            }\n            else {\n                params.options = optionsOrIndex ?? params.options;\n            }\n            params.index = index ?? params.index;\n        }\n        else {\n            params = tagIdOrOptionsOrParams;\n        }\n        return this._loadParams(params);\n    }\n    async loadJSON(tagId, pathConfigJson, index) {\n        let url, id;\n        if (isNumber(pathConfigJson) || pathConfigJson === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = pathConfigJson;\n        }\n        return this._loadParams({ id: id, url, index });\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        this.dom().forEach((t) => t.refresh());\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    async set(id, element, options, index) {\n        const params = { index };\n        if (isString(id)) {\n            params.id = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (element instanceof HTMLElement) {\n            params.element = element;\n        }\n        else {\n            params.options = element;\n        }\n        if (isNumber(options)) {\n            params.index = options;\n        }\n        else {\n            params.options = options ?? params.options;\n        }\n        return this._loadParams(params);\n    }\n    async setJSON(id, element, pathConfigJson, index) {\n        const params = {};\n        if (id instanceof HTMLElement) {\n            params.element = id;\n            params.url = element;\n            params.index = pathConfigJson;\n        }\n        else {\n            params.id = id;\n            params.element = element;\n            params.url = pathConfigJson;\n            params.index = index;\n        }\n        return this._loadParams(params);\n    }\n    setOnClickHandler(callback) {\n        const dom = this.dom();\n        if (!dom.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        for (const domItem of dom) {\n            domItem.addClickHandler(callback);\n        }\n    }\n    async _loadParams(params) {\n        const id = params.id ?? `tsparticles${Math.floor(getRandom() * 10000)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\n        let domContainer = params.element ?? document.getElementById(id);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = id;\n            document.body.append(domContainer);\n        }\n        const currentOptions = itemFromSingleOrMultiple(options, index), dom = this.dom(), oldIndex = dom.findIndex((v) => v.id === id);\n        if (oldIndex >= 0) {\n            const old = this.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                canvasEl.dataset[generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[generatedAttribute] = \"true\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        if (!canvasEl.style.width) {\n            canvasEl.style.width = \"100%\";\n        }\n        if (!canvasEl.style.height) {\n            canvasEl.style.height = \"100%\";\n        }\n        const newItem = new Container(this, id, currentOptions);\n        if (oldIndex >= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils\";\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? hslaToRgba({\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                l: parseInt(result[3], 10),\n                s: parseInt(result[2], 10),\n            })\n            : undefined;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? {\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                b: parseInt(result[3], 10),\n                g: parseInt(result[2], 10),\n                r: parseInt(result[1], 10),\n            }\n            : undefined;\n    }\n}\n","import { init } from \"./init\";\nimport { isSsr } from \"./Utils/Utils\";\nconst tsParticles = init();\nif (!isSsr()) {\n    window.tsParticles = tsParticles;\n}\nexport * from \"./exports\";\nexport * from \"./export-types\";\nexport { tsParticles };\n","import { Engine } from \"./Core/Engine\";\nimport { HslColorManager } from \"./Utils/HslColorManager\";\nimport { RgbColorManager } from \"./Utils/RgbColorManager\";\nimport { addColorManager } from \"./Utils/ColorUtils\";\nexport function init() {\n    const rgbColorManager = new RgbColorManager(), hslColorManager = new HslColorManager();\n    addColorManager(rgbColorManager);\n    addColorManager(hslColorManager);\n    const engine = new Engine();\n    engine.init();\n    return engine;\n}\n","export class AbsorberSizeLimit {\n    constructor() {\n        this.radius = 0;\n        this.mass = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.mass !== undefined) {\n            this.mass = data.mass;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ValueWithRandom, isNumber } from \"tsparticles-engine\";\nimport { AbsorberSizeLimit } from \"./AbsorberSizeLimit\";\nexport class AbsorberSize extends ValueWithRandom {\n    constructor() {\n        super();\n        this.density = 5;\n        this.value = 50;\n        this.limit = new AbsorberSizeLimit();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.density !== undefined) {\n            this.density = data.density;\n        }\n        if (isNumber(data.limit)) {\n            this.limit.radius = data.limit;\n        }\n        else {\n            this.limit.load(data.limit);\n        }\n    }\n}\n","import { OptionsColor, setRangeValue, } from \"tsparticles-engine\";\nimport { AbsorberSize } from \"./AbsorberSize\";\nexport class Absorber {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#000000\";\n        this.draggable = false;\n        this.opacity = 1;\n        this.destroy = true;\n        this.orbits = false;\n        this.size = new AbsorberSize();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.draggable !== undefined) {\n            this.draggable = data.draggable;\n        }\n        this.name = data.name;\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.position !== undefined) {\n            this.position = {};\n            if (data.position.x !== undefined) {\n                this.position.x = setRangeValue(data.position.x);\n            }\n            if (data.position.y !== undefined) {\n                this.position.y = setRangeValue(data.position.y);\n            }\n        }\n        if (data.size !== undefined) {\n            this.size.load(data.size);\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.orbits !== undefined) {\n            this.orbits = data.orbits;\n        }\n    }\n}\n","import { Vector, calcPositionOrRandomFromSize, calcPositionOrRandomFromSizeRanged, getDistance, getDistances, getRandom, getRangeValue, getStyleFromRgb, isPointInside, rangeColorToRgb, } from \"tsparticles-engine\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nexport class AbsorberInstance {\n    constructor(absorbers, container, options, position) {\n        this.absorbers = absorbers;\n        this.container = container;\n        this._calcPosition = () => {\n            const exactPosition = calcPositionOrRandomFromSizeRanged({\n                size: this.container.canvas.size,\n                position: this.options.position,\n            });\n            return Vector.create(exactPosition.x, exactPosition.y);\n        };\n        this._updateParticlePosition = (particle, v) => {\n            if (particle.destroyed) {\n                return;\n            }\n            const container = this.container, canvasSize = container.canvas.size;\n            if (particle.needsNewPosition) {\n                const newPosition = calcPositionOrRandomFromSize({ size: canvasSize });\n                particle.position.setTo(newPosition);\n                particle.velocity.setTo(particle.initialVelocity);\n                particle.absorberOrbit = undefined;\n                particle.needsNewPosition = false;\n            }\n            if (this.options.orbits) {\n                if (particle.absorberOrbit === undefined) {\n                    particle.absorberOrbit = Vector.create(0, 0);\n                    particle.absorberOrbit.length = getDistance(particle.getPosition(), this.position);\n                    particle.absorberOrbit.angle = getRandom() * Math.PI * 2;\n                }\n                if (particle.absorberOrbit.length <= this.size && !this.options.destroy) {\n                    const minSize = Math.min(canvasSize.width, canvasSize.height);\n                    particle.absorberOrbit.length = minSize * (1 + (getRandom() * 0.2 - 0.1));\n                }\n                if (particle.absorberOrbitDirection === undefined) {\n                    particle.absorberOrbitDirection =\n                        particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\";\n                }\n                const orbitRadius = particle.absorberOrbit.length, orbitAngle = particle.absorberOrbit.angle, orbitDirection = particle.absorberOrbitDirection;\n                particle.velocity.setTo(Vector.origin);\n                const updateFunc = {\n                    x: orbitDirection === \"clockwise\" ? Math.cos : Math.sin,\n                    y: orbitDirection === \"clockwise\" ? Math.sin : Math.cos,\n                };\n                particle.position.x = this.position.x + orbitRadius * updateFunc.x(orbitAngle);\n                particle.position.y = this.position.y + orbitRadius * updateFunc.y(orbitAngle);\n                particle.absorberOrbit.length -= v.length;\n                particle.absorberOrbit.angle +=\n                    (((particle.retina.moveSpeed ?? 0) * container.retina.pixelRatio) / 100) *\n                        container.retina.reduceFactor;\n            }\n            else {\n                const addV = Vector.origin;\n                addV.length = v.length;\n                addV.angle = v.angle;\n                particle.velocity.addTo(addV);\n            }\n        };\n        this.initialPosition = position ? Vector.create(position.x, position.y) : undefined;\n        if (options instanceof Absorber) {\n            this.options = options;\n        }\n        else {\n            this.options = new Absorber();\n            this.options.load(options);\n        }\n        this.dragging = false;\n        this.name = this.options.name;\n        this.opacity = this.options.opacity;\n        this.size = getRangeValue(this.options.size.value) * container.retina.pixelRatio;\n        this.mass = this.size * this.options.size.density * container.retina.reduceFactor;\n        const limit = this.options.size.limit;\n        this.limit = {\n            radius: limit.radius * container.retina.pixelRatio * container.retina.reduceFactor,\n            mass: limit.mass,\n        };\n        this.color = rangeColorToRgb(this.options.color) ?? {\n            b: 0,\n            g: 0,\n            r: 0,\n        };\n        this.position = this.initialPosition?.copy() ?? this._calcPosition();\n    }\n    attract(particle) {\n        const container = this.container, options = this.options;\n        if (options.draggable) {\n            const mouse = container.interactivity.mouse;\n            if (mouse.clicking && mouse.downPosition) {\n                const mouseDist = getDistance(this.position, mouse.downPosition);\n                if (mouseDist <= this.size) {\n                    this.dragging = true;\n                }\n            }\n            else {\n                this.dragging = false;\n            }\n            if (this.dragging && mouse.position) {\n                this.position.x = mouse.position.x;\n                this.position.y = mouse.position.y;\n            }\n        }\n        const pos = particle.getPosition(), { dx, dy, distance } = getDistances(this.position, pos), v = Vector.create(dx, dy);\n        v.length = (this.mass / Math.pow(distance, 2)) * container.retina.reduceFactor;\n        if (distance < this.size + particle.getRadius()) {\n            const sizeFactor = particle.getRadius() * 0.033 * container.retina.pixelRatio;\n            if ((this.size > particle.getRadius() && distance < this.size - particle.getRadius()) ||\n                (particle.absorberOrbit !== undefined && particle.absorberOrbit.length < 0)) {\n                if (options.destroy) {\n                    particle.destroy();\n                }\n                else {\n                    particle.needsNewPosition = true;\n                    this._updateParticlePosition(particle, v);\n                }\n            }\n            else {\n                if (options.destroy) {\n                    particle.size.value -= sizeFactor;\n                }\n                this._updateParticlePosition(particle, v);\n            }\n            if (this.limit.radius <= 0 || this.size < this.limit.radius) {\n                this.size += sizeFactor;\n            }\n            if (this.limit.mass <= 0 || this.mass < this.limit.mass) {\n                this.mass += sizeFactor * this.options.size.density * container.retina.reduceFactor;\n            }\n        }\n        else {\n            this._updateParticlePosition(particle, v);\n        }\n    }\n    draw(context) {\n        context.translate(this.position.x, this.position.y);\n        context.beginPath();\n        context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStyle = getStyleFromRgb(this.color, this.opacity);\n        context.fill();\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin)\n                ? initialPosition\n                : this._calcPosition();\n    }\n}\n","import { executeOnSingleOrMultiple, isNumber, itemFromSingleOrMultiple, } from \"tsparticles-engine\";\nimport { AbsorberInstance } from \"./AbsorberInstance\";\nexport class Absorbers {\n    constructor(container) {\n        this.container = container;\n        this.array = [];\n        this.absorbers = [];\n        this.interactivityAbsorbers = [];\n        container.getAbsorber = (idxOrName) => idxOrName === undefined || isNumber(idxOrName)\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        container.addAbsorber = (options, position) => this.addAbsorber(options, position);\n    }\n    addAbsorber(options, position) {\n        const absorber = new AbsorberInstance(this, this.container, options, position);\n        this.array.push(absorber);\n        return absorber;\n    }\n    draw(context) {\n        for (const absorber of this.array) {\n            absorber.draw(context);\n        }\n    }\n    handleClickMode(mode) {\n        const absorberOptions = this.absorbers, modeAbsorbers = this.interactivityAbsorbers;\n        if (mode === \"absorber\") {\n            const absorbersModeOptions = itemFromSingleOrMultiple(modeAbsorbers), absorbersOptions = absorbersModeOptions ?? itemFromSingleOrMultiple(absorberOptions), aPosition = this.container.interactivity.mouse.clickPosition;\n            this.addAbsorber(absorbersOptions, aPosition);\n        }\n    }\n    async init() {\n        this.absorbers = this.container.actualOptions.absorbers;\n        this.interactivityAbsorbers = this.container.actualOptions.interactivity.modes.absorbers;\n        executeOnSingleOrMultiple(this.absorbers, (absorber) => {\n            this.addAbsorber(absorber);\n        });\n    }\n    particleUpdate(particle) {\n        for (const absorber of this.array) {\n            absorber.attract(particle);\n            if (particle.destroyed) {\n                break;\n            }\n        }\n    }\n    removeAbsorber(absorber) {\n        const index = this.array.indexOf(absorber);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n    resize() {\n        for (const absorber of this.array) {\n            absorber.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n}\n","import { executeOnSingleOrMultiple, isArray, isInArray, } from \"tsparticles-engine\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nimport { Absorbers } from \"./Absorbers\";\nclass AbsorbersPlugin {\n    constructor() {\n        this.id = \"absorbers\";\n    }\n    getPlugin(container) {\n        return new Absorbers(container);\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source?.absorbers) {\n            options.absorbers = executeOnSingleOrMultiple(source.absorbers, (absorber) => {\n                const tmp = new Absorber();\n                tmp.load(absorber);\n                return tmp;\n            });\n        }\n        options.interactivity.modes.absorbers = executeOnSingleOrMultiple(source?.interactivity?.modes?.absorbers, (absorber) => {\n            const tmp = new Absorber();\n            tmp.load(absorber);\n            return tmp;\n        });\n    }\n    needsPlugin(options) {\n        if (!options) {\n            return false;\n        }\n        const absorbers = options.absorbers;\n        if (isArray(absorbers)) {\n            return !!absorbers.length;\n        }\n        else if (absorbers) {\n            return true;\n        }\n        else if (options.interactivity?.events?.onClick?.mode &&\n            isInArray(\"absorber\", options.interactivity.events.onClick.mode)) {\n            return true;\n        }\n        return false;\n    }\n}\nexport async function loadAbsorbersPlugin(engine, refresh = true) {\n    await engine.addPlugin(new AbsorbersPlugin(), refresh);\n}\nexport * from \"./AbsorberContainer\";\nexport * from \"./Enums/AbsorberClickMode\";\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class DestroyBounds {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.bottom !== undefined) {\n            this.bottom = setRangeValue(data.bottom);\n        }\n        if (data.left !== undefined) {\n            this.left = setRangeValue(data.left);\n        }\n        if (data.right !== undefined) {\n            this.right = setRangeValue(data.right);\n        }\n        if (data.top !== undefined) {\n            this.top = setRangeValue(data.top);\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class SplitFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = 3;\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class SplitRate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = { min: 4, max: 9 };\n    }\n}\n","import { OptionsColor, deepExtend, executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { SplitFactor } from \"./SplitFactor\";\nimport { SplitRate } from \"./SplitRate\";\nexport class Split {\n    constructor() {\n        this.count = 1;\n        this.factor = new SplitFactor();\n        this.rate = new SplitRate();\n        this.sizeOffset = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.factor.load(data.factor);\n        this.rate.load(data.rate);\n        this.particles = executeOnSingleOrMultiple(data.particles, (particles) => {\n            return deepExtend({}, particles);\n        });\n        if (data.sizeOffset !== undefined) {\n            this.sizeOffset = data.sizeOffset;\n        }\n        if (data.colorOffset) {\n            this.colorOffset = this.colorOffset ?? {};\n            if (data.colorOffset.h !== undefined) {\n                this.colorOffset.h = data.colorOffset.h;\n            }\n            if (data.colorOffset.s !== undefined) {\n                this.colorOffset.s = data.colorOffset.s;\n            }\n            if (data.colorOffset.l !== undefined) {\n                this.colorOffset.l = data.colorOffset.l;\n            }\n        }\n    }\n}\n","import { DestroyBounds } from \"./DestroyBounds\";\nimport { Split } from \"./Split\";\nexport class Destroy {\n    constructor() {\n        this.bounds = new DestroyBounds();\n        this.mode = \"none\";\n        this.split = new Split();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.mode) {\n            this.mode = data.mode;\n        }\n        if (data.bounds) {\n            this.bounds.load(data.bounds);\n        }\n        this.split.load(data.split);\n    }\n}\n","import { getRangeValue, getValue, isNumber, itemFromSingleOrMultiple, loadParticlesOptions, randomInRange, setRangeValue, } from \"tsparticles-engine\";\nfunction addSplitParticle(engine, container, parent, splitParticlesOptions) {\n    const destroyOptions = parent.options.destroy;\n    if (!destroyOptions) {\n        return;\n    }\n    const splitOptions = destroyOptions.split, options = loadParticlesOptions(engine, container, parent.options), factor = getValue(splitOptions.factor), parentColor = parent.getFillColor();\n    if (splitOptions.color) {\n        options.color.load(splitOptions.color);\n    }\n    else if (splitOptions.colorOffset && parentColor) {\n        options.color.load({\n            value: {\n                hsl: {\n                    h: parentColor.h + getRangeValue(splitOptions.colorOffset.h ?? 0),\n                    s: parentColor.s + getRangeValue(splitOptions.colorOffset.s ?? 0),\n                    l: parentColor.l + getRangeValue(splitOptions.colorOffset.l ?? 0),\n                },\n            },\n        });\n    }\n    else {\n        options.color.load({\n            value: {\n                hsl: parent.getFillColor(),\n            },\n        });\n    }\n    options.move.load({\n        center: {\n            x: parent.position.x,\n            y: parent.position.y,\n            mode: \"precise\",\n        },\n    });\n    if (isNumber(options.size.value)) {\n        options.size.value /= factor;\n    }\n    else {\n        options.size.value.min /= factor;\n        options.size.value.max /= factor;\n    }\n    options.load(splitParticlesOptions);\n    const offset = splitOptions.sizeOffset ? setRangeValue(-parent.size.value, parent.size.value) : 0, position = {\n        x: parent.position.x + randomInRange(offset),\n        y: parent.position.y + randomInRange(offset),\n    };\n    return container.particles.addParticle(position, options, parent.group, (particle) => {\n        if (particle.size.value < 0.5) {\n            return false;\n        }\n        particle.velocity.length = randomInRange(setRangeValue(parent.velocity.length, particle.velocity.length));\n        particle.splitCount = (parent.splitCount ?? 0) + 1;\n        particle.unbreakable = true;\n        setTimeout(() => {\n            particle.unbreakable = false;\n        }, 500);\n        return true;\n    });\n}\nexport function split(engine, container, particle) {\n    const destroyOptions = particle.options.destroy;\n    if (!destroyOptions) {\n        return;\n    }\n    const splitOptions = destroyOptions.split;\n    if (splitOptions.count >= 0 && (particle.splitCount === undefined || particle.splitCount++ > splitOptions.count)) {\n        return;\n    }\n    const rate = getValue(splitOptions.rate), particlesSplitOptions = itemFromSingleOrMultiple(splitOptions.particles);\n    for (let i = 0; i < rate; i++) {\n        addSplitParticle(engine, container, particle, particlesSplitOptions);\n    }\n}\n","import { getRangeValue, } from \"tsparticles-engine\";\nimport { Destroy } from \"./Options/Classes/Destroy\";\nimport { split } from \"./Utils\";\nexport class DestroyUpdater {\n    constructor(engine, container) {\n        this.engine = engine;\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, destroyOptions = particlesOptions.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        particle.splitCount = 0;\n        const destroyBoundsOptions = destroyOptions.bounds;\n        if (!particle.destroyBounds) {\n            particle.destroyBounds = {};\n        }\n        const { bottom, left, right, top } = destroyBoundsOptions, { destroyBounds } = particle, canvasSize = container.canvas.size;\n        if (bottom) {\n            destroyBounds.bottom = (getRangeValue(bottom) * canvasSize.height) / 100;\n        }\n        if (left) {\n            destroyBounds.left = (getRangeValue(left) * canvasSize.width) / 100;\n        }\n        if (right) {\n            destroyBounds.right = (getRangeValue(right) * canvasSize.width) / 100;\n        }\n        if (top) {\n            destroyBounds.top = (getRangeValue(top) * canvasSize.height) / 100;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.destroy) {\n            options.destroy = new Destroy();\n        }\n        for (const source of sources) {\n            options.destroy.load(source?.destroy);\n        }\n    }\n    particleDestroyed(particle, override) {\n        if (override) {\n            return;\n        }\n        const destroyOptions = particle.options.destroy;\n        if (destroyOptions && destroyOptions.mode === \"split\") {\n            split(this.engine, this.container, particle);\n        }\n    }\n    update(particle) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        const position = particle.getPosition(), bounds = particle.destroyBounds;\n        if (!bounds) {\n            return;\n        }\n        if ((bounds.bottom !== undefined && position.y >= bounds.bottom) ||\n            (bounds.left !== undefined && position.x <= bounds.left) ||\n            (bounds.right !== undefined && position.x >= bounds.right) ||\n            (bounds.top !== undefined && position.y <= bounds.top)) {\n            particle.destroy();\n        }\n    }\n}\n","import { getRandom } from \"tsparticles-engine\";\nexport class CircleShape {\n    randomPosition(position, size, fill) {\n        const generateTheta = (x, y) => {\n            const u = getRandom() / 4.0, theta = Math.atan((y / x) * Math.tan(2 * Math.PI * u)), v = getRandom();\n            if (v < 0.25) {\n                return theta;\n            }\n            else if (v < 0.5) {\n                return Math.PI - theta;\n            }\n            else if (v < 0.75) {\n                return Math.PI + theta;\n            }\n            else {\n                return -theta;\n            }\n        }, radius = (x, y, theta) => (x * y) / Math.sqrt((y * Math.cos(theta)) ** 2 + (x * Math.sin(theta)) ** 2), [a, b] = [size.width / 2, size.height / 2], randomTheta = generateTheta(a, b), maxRadius = radius(a, b, randomTheta), randomRadius = fill ? maxRadius * Math.sqrt(getRandom()) : maxRadius;\n        return {\n            x: position.x + randomRadius * Math.cos(randomTheta),\n            y: position.y + randomRadius * Math.sin(randomTheta),\n        };\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class EmitterLife {\n    constructor() {\n        this.wait = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        if (data.wait !== undefined) {\n            this.wait = data.wait;\n        }\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class EmitterRate {\n    constructor() {\n        this.quantity = 1;\n        this.delay = 0.1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = setRangeValue(data.quantity);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n    }\n}\n","export class EmitterSize {\n    constructor() {\n        this.mode = \"percent\";\n        this.height = 0;\n        this.width = 0;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { AnimatableColor, deepExtend, executeOnSingleOrMultiple, setRangeValue, } from \"tsparticles-engine\";\nimport { EmitterLife } from \"./EmitterLife\";\nimport { EmitterRate } from \"./EmitterRate\";\nimport { EmitterSize } from \"./EmitterSize\";\nexport class Emitter {\n    constructor() {\n        this.autoPlay = true;\n        this.fill = true;\n        this.life = new EmitterLife();\n        this.rate = new EmitterRate();\n        this.shape = \"square\";\n        this.startCount = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.size !== undefined) {\n            if (!this.size) {\n                this.size = new EmitterSize();\n            }\n            this.size.load(data.size);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.domId = data.domId;\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        this.life.load(data.life);\n        this.name = data.name;\n        this.particles = executeOnSingleOrMultiple(data.particles, (particles) => {\n            return deepExtend({}, particles);\n        });\n        this.rate.load(data.rate);\n        if (data.shape !== undefined) {\n            this.shape = data.shape;\n        }\n        if (data.position !== undefined) {\n            this.position = {};\n            if (data.position.x !== undefined) {\n                this.position.x = setRangeValue(data.position.x);\n            }\n            if (data.position.y !== undefined) {\n                this.position.y = setRangeValue(data.position.y);\n            }\n        }\n        if (data.spawnColor !== undefined) {\n            if (this.spawnColor === undefined) {\n                this.spawnColor = new AnimatableColor();\n            }\n            this.spawnColor.load(data.spawnColor);\n        }\n        if (data.startCount !== undefined) {\n            this.startCount = data.startCount;\n        }\n    }\n}\n","import { Vector, calcPositionOrRandomFromSizeRanged, deepExtend, getRangeValue, getSize, isPointInside, itemFromSingleOrMultiple, randomInRange, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterSize } from \"./Options/Classes/EmitterSize\";\nexport class EmitterInstance {\n    constructor(engine, emitters, container, options, position) {\n        this.emitters = emitters;\n        this.container = container;\n        this._calcPosition = () => {\n            return calcPositionOrRandomFromSizeRanged({\n                size: this.container.canvas.size,\n                position: this.options.position,\n            });\n        };\n        this._destroy = () => {\n            this.emitters.removeEmitter(this);\n            this._engine.dispatchEvent(\"emitterDestroyed\", {\n                container: this.container,\n                data: {\n                    emitter: this,\n                },\n            });\n        };\n        this._emit = () => {\n            if (this._paused) {\n                return;\n            }\n            const quantity = getRangeValue(this.options.rate.quantity);\n            this._emitParticles(quantity);\n        };\n        this._emitParticles = (quantity) => {\n            const position = this.getPosition(), size = this.getSize(), singleParticlesOptions = itemFromSingleOrMultiple(this._particlesOptions);\n            for (let i = 0; i < quantity; i++) {\n                const particlesOptions = deepExtend({}, singleParticlesOptions);\n                if (this.spawnColor) {\n                    const hslAnimation = this.options.spawnColor?.animation;\n                    if (hslAnimation) {\n                        this.spawnColor.h = this._setColorAnimation(hslAnimation.h, this.spawnColor.h, 360);\n                        this.spawnColor.s = this._setColorAnimation(hslAnimation.s, this.spawnColor.s, 100);\n                        this.spawnColor.l = this._setColorAnimation(hslAnimation.l, this.spawnColor.l, 100);\n                    }\n                    if (!particlesOptions.color) {\n                        particlesOptions.color = {\n                            value: this.spawnColor,\n                        };\n                    }\n                    else {\n                        particlesOptions.color.value = this.spawnColor;\n                    }\n                }\n                if (!position) {\n                    return;\n                }\n                const pPosition = this._shape?.randomPosition(position, size, this.fill) ?? position;\n                this.container.particles.addParticle(pPosition, particlesOptions);\n            }\n        };\n        this._prepareToDie = () => {\n            if (this._paused) {\n                return;\n            }\n            const duration = this.options.life?.duration !== undefined ? getRangeValue(this.options.life.duration) : undefined;\n            if (this.container.retina.reduceFactor &&\n                (this._lifeCount > 0 || this._immortal) &&\n                duration !== undefined &&\n                duration > 0) {\n                this._duration = duration * 1000;\n            }\n        };\n        this._setColorAnimation = (animation, initValue, maxValue) => {\n            const container = this.container;\n            if (!animation.enable) {\n                return initValue;\n            }\n            const colorOffset = randomInRange(animation.offset), delay = getRangeValue(this.options.rate.delay), emitFactor = (1000 * delay) / container.retina.reduceFactor, colorSpeed = getRangeValue(animation.speed ?? 0);\n            return (initValue + (colorSpeed * container.fpsLimit) / emitFactor + colorOffset * 3.6) % maxValue;\n        };\n        this._engine = engine;\n        this._currentDuration = 0;\n        this._currentEmitDelay = 0;\n        this._currentSpawnDelay = 0;\n        this._initialPosition = position;\n        if (options instanceof Emitter) {\n            this.options = options;\n        }\n        else {\n            this.options = new Emitter();\n            this.options.load(options);\n        }\n        this._spawnDelay = (getRangeValue(this.options.life.delay ?? 0) * 1000) / this.container.retina.reduceFactor;\n        this.position = this._initialPosition ?? this._calcPosition();\n        this.name = this.options.name;\n        this._shape = this._engine.emitterShapeManager?.getShape(this.options.shape);\n        this.fill = this.options.fill;\n        this._firstSpawn = !this.options.life.wait;\n        this._startParticlesAdded = false;\n        let particlesOptions = deepExtend({}, this.options.particles);\n        particlesOptions ??= {};\n        particlesOptions.move ??= {};\n        particlesOptions.move.direction ??= this.options.direction;\n        if (this.options.spawnColor) {\n            this.spawnColor = rangeColorToHsl(this.options.spawnColor);\n        }\n        this._paused = !this.options.autoPlay;\n        this._particlesOptions = particlesOptions;\n        this.size =\n            this.options.size ??\n                (() => {\n                    const size = new EmitterSize();\n                    size.load({\n                        height: 0,\n                        mode: \"percent\",\n                        width: 0,\n                    });\n                    return size;\n                })();\n        this._lifeCount = this.options.life.count ?? -1;\n        this._immortal = this._lifeCount <= 0;\n        this._engine.dispatchEvent(\"emitterCreated\", {\n            container,\n            data: {\n                emitter: this,\n            },\n        });\n        this.play();\n    }\n    externalPause() {\n        this._paused = true;\n        this.pause();\n    }\n    externalPlay() {\n        this._paused = false;\n        this.play();\n    }\n    getPosition() {\n        if (this.options.domId) {\n            const container = this.container, element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    x: (elRect.x + elRect.width / 2) * container.retina.pixelRatio,\n                    y: (elRect.y + elRect.height / 2) * container.retina.pixelRatio,\n                };\n            }\n        }\n        return this.position;\n    }\n    getSize() {\n        const container = this.container;\n        if (this.options.domId) {\n            const element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    width: elRect.width * container.retina.pixelRatio,\n                    height: elRect.height * container.retina.pixelRatio,\n                };\n            }\n        }\n        return getSize(this.size, container.canvas.size);\n    }\n    pause() {\n        if (this._paused) {\n            return;\n        }\n        delete this._emitDelay;\n    }\n    play() {\n        if (this._paused) {\n            return;\n        }\n        if (!(this.container.retina.reduceFactor &&\n            (this._lifeCount > 0 || this._immortal || !this.options.life.count) &&\n            (this._firstSpawn || this._currentSpawnDelay >= (this._spawnDelay ?? 0)))) {\n            return;\n        }\n        if (this._emitDelay === undefined) {\n            const delay = getRangeValue(this.options.rate.delay);\n            this._emitDelay = (1000 * delay) / this.container.retina.reduceFactor;\n        }\n        if (this._lifeCount > 0 || this._immortal) {\n            this._prepareToDie();\n        }\n    }\n    resize() {\n        const initialPosition = this._initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin)\n                ? initialPosition\n                : this._calcPosition();\n    }\n    update(delta) {\n        if (this._paused) {\n            return;\n        }\n        if (this._firstSpawn) {\n            this._firstSpawn = false;\n            this._currentSpawnDelay = this._spawnDelay ?? 0;\n            this._currentEmitDelay = this._emitDelay ?? 0;\n        }\n        if (!this._startParticlesAdded) {\n            this._startParticlesAdded = true;\n            this._emitParticles(this.options.startCount);\n        }\n        if (this._duration !== undefined) {\n            this._currentDuration += delta.value;\n            if (this._currentDuration >= this._duration) {\n                this.pause();\n                if (this._spawnDelay !== undefined) {\n                    delete this._spawnDelay;\n                }\n                if (!this._immortal) {\n                    this._lifeCount--;\n                }\n                if (this._lifeCount > 0 || this._immortal) {\n                    this.position = this._calcPosition();\n                    this._spawnDelay =\n                        (getRangeValue(this.options.life.delay ?? 0) * 1000) / this.container.retina.reduceFactor;\n                }\n                else {\n                    this._destroy();\n                }\n                this._currentDuration -= this._duration;\n                delete this._duration;\n            }\n        }\n        if (this._spawnDelay !== undefined) {\n            this._currentSpawnDelay += delta.value;\n            if (this._currentSpawnDelay >= this._spawnDelay) {\n                this._engine.dispatchEvent(\"emitterPlay\", {\n                    container: this.container,\n                });\n                this.play();\n                this._currentSpawnDelay -= this._currentSpawnDelay;\n                delete this._spawnDelay;\n            }\n        }\n        if (this._emitDelay !== undefined) {\n            this._currentEmitDelay += delta.value;\n            if (this._currentEmitDelay >= this._emitDelay) {\n                this._emit();\n                this._currentEmitDelay -= this._emitDelay;\n            }\n        }\n    }\n}\n","import { arrayRandomIndex, executeOnSingleOrMultiple, isArray, isNumber, itemFromArray, } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterInstance } from \"./EmitterInstance\";\nexport class Emitters {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this.array = [];\n        this.emitters = [];\n        this.interactivityEmitters = {\n            random: {\n                count: 1,\n                enable: false,\n            },\n            value: [],\n        };\n        container.getEmitter = (idxOrName) => idxOrName === undefined || isNumber(idxOrName)\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        container.addEmitter = (options, position) => this.addEmitter(options, position);\n        container.removeEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                this.removeEmitter(emitter);\n            }\n        };\n        container.playEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPlay();\n            }\n        };\n        container.pauseEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPause();\n            }\n        };\n    }\n    addEmitter(options, position) {\n        const emitterOptions = new Emitter();\n        emitterOptions.load(options);\n        const emitter = new EmitterInstance(this._engine, this, this.container, emitterOptions, position);\n        this.array.push(emitter);\n        return emitter;\n    }\n    handleClickMode(mode) {\n        const emitterOptions = this.emitters, modeEmitters = this.interactivityEmitters;\n        if (mode !== \"emitter\") {\n            return;\n        }\n        let emittersModeOptions;\n        if (modeEmitters && isArray(modeEmitters.value)) {\n            if (modeEmitters.value.length > 0 && modeEmitters.random.enable) {\n                emittersModeOptions = [];\n                const usedIndexes = [];\n                for (let i = 0; i < modeEmitters.random.count; i++) {\n                    const idx = arrayRandomIndex(modeEmitters.value);\n                    if (usedIndexes.includes(idx) && usedIndexes.length < modeEmitters.value.length) {\n                        i--;\n                        continue;\n                    }\n                    usedIndexes.push(idx);\n                    emittersModeOptions.push(itemFromArray(modeEmitters.value, idx));\n                }\n            }\n            else {\n                emittersModeOptions = modeEmitters.value;\n            }\n        }\n        else {\n            emittersModeOptions = modeEmitters?.value;\n        }\n        const emittersOptions = emittersModeOptions ?? emitterOptions, ePosition = this.container.interactivity.mouse.clickPosition;\n        executeOnSingleOrMultiple(emittersOptions, (emitter) => {\n            this.addEmitter(emitter, ePosition);\n        });\n    }\n    async init() {\n        this.emitters = this.container.actualOptions.emitters;\n        this.interactivityEmitters = this.container.actualOptions.interactivity.modes.emitters;\n        if (!this.emitters) {\n            return;\n        }\n        if (isArray(this.emitters)) {\n            for (const emitterOptions of this.emitters) {\n                this.addEmitter(emitterOptions);\n            }\n        }\n        else {\n            this.addEmitter(this.emitters);\n        }\n    }\n    pause() {\n        for (const emitter of this.array) {\n            emitter.pause();\n        }\n    }\n    play() {\n        for (const emitter of this.array) {\n            emitter.play();\n        }\n    }\n    removeEmitter(emitter) {\n        const index = this.array.indexOf(emitter);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n    resize() {\n        for (const emitter of this.array) {\n            emitter.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    update(delta) {\n        for (const emitter of this.array) {\n            emitter.update(delta);\n        }\n    }\n}\n","const shapes = new Map();\nexport class ShapeManager {\n    constructor(engine) {\n        this._engine = engine;\n    }\n    addShape(name, drawer) {\n        if (!this.getShape(name)) {\n            shapes.set(name, drawer);\n        }\n    }\n    getShape(name) {\n        return shapes.get(name);\n    }\n    getSupportedShapes() {\n        return shapes.keys();\n    }\n}\n","import { getRandom } from \"tsparticles-engine\";\nfunction randomSquareCoordinate(position, offset) {\n    return position + offset * (getRandom() - 0.5);\n}\nexport class SquareShape {\n    randomPosition(position, size, fill) {\n        if (fill) {\n            return {\n                x: randomSquareCoordinate(position.x, size.width),\n                y: randomSquareCoordinate(position.y, size.height),\n            };\n        }\n        else {\n            const halfW = size.width / 2, halfH = size.height / 2, side = Math.floor(getRandom() * 4), v = (getRandom() - 0.5) * 2;\n            switch (side) {\n                case 0:\n                    return {\n                        x: position.x + v * halfW,\n                        y: position.y - halfH,\n                    };\n                case 1:\n                    return {\n                        x: position.x - halfW,\n                        y: position.y + v * halfH,\n                    };\n                case 2:\n                    return {\n                        x: position.x + v * halfW,\n                        y: position.y + halfH,\n                    };\n                case 3:\n                default:\n                    return {\n                        x: position.x + halfW,\n                        y: position.y + v * halfH,\n                    };\n            }\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isArray, isInArray, } from \"tsparticles-engine\";\nimport { CircleShape } from \"./Shapes/Circle/CircleShape\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { Emitters } from \"./Emitters\";\nimport { ShapeManager } from \"./ShapeManager\";\nimport { SquareShape } from \"./Shapes/Square/SquareShape\";\nclass EmittersPlugin {\n    constructor(engine) {\n        this._engine = engine;\n        this.id = \"emitters\";\n    }\n    getPlugin(container) {\n        return new Emitters(this._engine, container);\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source?.emitters) {\n            options.emitters = executeOnSingleOrMultiple(source.emitters, (emitter) => {\n                const tmp = new Emitter();\n                tmp.load(emitter);\n                return tmp;\n            });\n        }\n        const interactivityEmitters = source?.interactivity?.modes?.emitters;\n        if (interactivityEmitters) {\n            if (isArray(interactivityEmitters)) {\n                options.interactivity.modes.emitters = {\n                    random: {\n                        count: 1,\n                        enable: true,\n                    },\n                    value: interactivityEmitters.map((s) => {\n                        const tmp = new Emitter();\n                        tmp.load(s);\n                        return tmp;\n                    }),\n                };\n            }\n            else {\n                const emitterMode = interactivityEmitters;\n                if (emitterMode.value !== undefined) {\n                    if (isArray(emitterMode.value)) {\n                        options.interactivity.modes.emitters = {\n                            random: {\n                                count: emitterMode.random.count ?? 1,\n                                enable: emitterMode.random.enable ?? false,\n                            },\n                            value: emitterMode.value.map((s) => {\n                                const tmp = new Emitter();\n                                tmp.load(s);\n                                return tmp;\n                            }),\n                        };\n                    }\n                    else {\n                        const tmp = new Emitter();\n                        tmp.load(emitterMode.value);\n                        options.interactivity.modes.emitters = {\n                            random: {\n                                count: emitterMode.random.count ?? 1,\n                                enable: emitterMode.random.enable ?? false,\n                            },\n                            value: tmp,\n                        };\n                    }\n                }\n                else {\n                    const emitterOptions = (options.interactivity.modes.emitters = {\n                        random: {\n                            count: 1,\n                            enable: false,\n                        },\n                        value: new Emitter(),\n                    });\n                    emitterOptions.value.load(interactivityEmitters);\n                }\n            }\n        }\n    }\n    needsPlugin(options) {\n        if (!options) {\n            return false;\n        }\n        const emitters = options.emitters;\n        return ((isArray(emitters) && !!emitters.length) ||\n            emitters !== undefined ||\n            (!!options.interactivity?.events?.onClick?.mode &&\n                isInArray(\"emitter\", options.interactivity.events.onClick.mode)));\n    }\n}\nexport async function loadEmittersPlugin(engine, refresh = true) {\n    if (!engine.emitterShapeManager) {\n        engine.emitterShapeManager = new ShapeManager(engine);\n    }\n    if (!engine.addEmitterShape) {\n        engine.addEmitterShape = (name, shape) => {\n            engine.emitterShapeManager?.addShape(name, shape);\n        };\n    }\n    const plugin = new EmittersPlugin(engine);\n    await engine.addPlugin(plugin, refresh);\n    engine.addEmitterShape(\"circle\", new CircleShape());\n    engine.addEmitterShape(\"square\", new SquareShape());\n}\nexport * from \"./EmitterContainer\";\nexport * from \"./EmittersEngine\";\nexport * from \"./Enums/EmitterClickMode\";\nexport * from \"./Enums/EmitterShapeType\";\n","export class ExternalInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"external\";\n    }\n}\n","import { deepExtend } from \"tsparticles-engine\";\nexport class Trail {\n    constructor() {\n        this.delay = 1;\n        this.pauseOnStop = false;\n        this.quantity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = data.quantity;\n        }\n        if (data.particles !== undefined) {\n            this.particles = deepExtend({}, data.particles);\n        }\n        if (data.pauseOnStop !== undefined) {\n            this.pauseOnStop = data.pauseOnStop;\n        }\n    }\n}\n","import { ExternalInteractorBase, isInArray, } from \"tsparticles-engine\";\nimport { Trail } from \"./Options/Classes/Trail\";\nexport class TrailMaker extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._delay = 0;\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(delta) {\n        const container = this.container, { interactivity } = container;\n        if (!container.retina.reduceFactor) {\n            return;\n        }\n        const options = container.actualOptions, trailOptions = options.interactivity.modes.trail;\n        if (!trailOptions) {\n            return;\n        }\n        const optDelay = (trailOptions.delay * 1000) / this.container.retina.reduceFactor;\n        if (this._delay < optDelay) {\n            this._delay += delta.value;\n        }\n        if (this._delay < optDelay) {\n            return;\n        }\n        const canEmit = !(trailOptions.pauseOnStop &&\n            (interactivity.mouse.position === this._lastPosition ||\n                (interactivity.mouse.position?.x === this._lastPosition?.x &&\n                    interactivity.mouse.position?.y === this._lastPosition?.y)));\n        const mousePos = container.interactivity.mouse.position;\n        if (mousePos) {\n            this._lastPosition = { ...mousePos };\n        }\n        else {\n            delete this._lastPosition;\n        }\n        if (canEmit) {\n            container.particles.push(trailOptions.quantity, container.interactivity.mouse, trailOptions.particles);\n        }\n        this._delay -= optDelay;\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events;\n        return ((mouse.clicking && mouse.inside && !!mouse.position && isInArray(\"trail\", events.onClick.mode)) ||\n            (mouse.inside && !!mouse.position && isInArray(\"trail\", events.onHover.mode)));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.trail) {\n            options.trail = new Trail();\n        }\n        for (const source of sources) {\n            options.trail.load(source?.trail);\n        }\n    }\n    reset() {\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class RollLight {\n    constructor() {\n        this.enable = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { OptionsColor, setRangeValue, } from \"tsparticles-engine\";\nimport { RollLight } from \"./RollLight\";\nexport class Roll {\n    constructor() {\n        this.darken = new RollLight();\n        this.enable = false;\n        this.enlighten = new RollLight();\n        this.mode = \"vertical\";\n        this.speed = 25;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.backColor !== undefined) {\n            this.backColor = OptionsColor.create(this.backColor, data.backColor);\n        }\n        this.darken.load(data.darken);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.enlighten.load(data.enlighten);\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n    }\n}\n","import { initParticle, updateRoll } from \"./Utils\";\nimport { Roll } from \"./Options/Classes/Roll\";\nexport class RollUpdater {\n    getTransformValues(particle) {\n        const roll = particle.roll?.enable && particle.roll, rollHorizontal = roll && roll.horizontal, rollVertical = roll && roll.vertical;\n        return {\n            a: rollHorizontal ? Math.cos(roll.angle) : undefined,\n            d: rollVertical ? Math.sin(roll.angle) : undefined,\n        };\n    }\n    init(particle) {\n        initParticle(particle);\n    }\n    isEnabled(particle) {\n        const roll = particle.options.roll;\n        return !particle.destroyed && !particle.spawning && !!roll?.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.roll) {\n            options.roll = new Roll();\n        }\n        for (const source of sources) {\n            options.roll.load(source?.roll);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRoll(particle, delta);\n    }\n}\n","import { getRandom, getRangeValue, rangeColorToHsl } from \"tsparticles-engine\";\nexport function initParticle(particle) {\n    const rollOpt = particle.options.roll;\n    if (!rollOpt?.enable) {\n        particle.roll = {\n            enable: false,\n            horizontal: false,\n            vertical: false,\n            angle: 0,\n            speed: 0,\n        };\n        return;\n    }\n    particle.roll = {\n        enable: rollOpt.enable,\n        horizontal: rollOpt.mode === \"horizontal\" || rollOpt.mode === \"both\",\n        vertical: rollOpt.mode === \"vertical\" || rollOpt.mode === \"both\",\n        angle: getRandom() * Math.PI * 2,\n        speed: getRangeValue(rollOpt.speed) / 360,\n    };\n    if (rollOpt.backColor) {\n        particle.backColor = rangeColorToHsl(rollOpt.backColor);\n    }\n    else if (rollOpt.darken.enable && rollOpt.enlighten.enable) {\n        const alterType = getRandom() >= 0.5 ? \"darken\" : \"enlighten\";\n        particle.roll.alter = {\n            type: alterType,\n            value: getRangeValue(alterType === \"darken\" ? rollOpt.darken.value : rollOpt.enlighten.value),\n        };\n    }\n    else if (rollOpt.darken.enable) {\n        particle.roll.alter = {\n            type: \"darken\",\n            value: getRangeValue(rollOpt.darken.value),\n        };\n    }\n    else if (rollOpt.enlighten.enable) {\n        particle.roll.alter = {\n            type: \"enlighten\",\n            value: getRangeValue(rollOpt.enlighten.value),\n        };\n    }\n}\nexport function updateRoll(particle, delta) {\n    const roll = particle.options.roll, data = particle.roll;\n    if (!data || !roll?.enable) {\n        return;\n    }\n    const speed = data.speed * delta.factor, max = 2 * Math.PI;\n    data.angle += speed;\n    if (data.angle > max) {\n        data.angle -= max;\n    }\n}\n","import { tsParticles } from \"tsparticles-engine\";\nexport class Particles {\n    static init(options) {\n        const particles = new Particles(), selector = options.selector;\n        if (!selector) {\n            throw new Error(\"No selector provided\");\n        }\n        const el = document.querySelector(selector);\n        if (!el) {\n            throw new Error(\"No element found for selector\");\n        }\n        tsParticles\n            .set(selector.replace(\".\", \"\").replace(\"!\", \"\"), el, {\n            fullScreen: {\n                enable: false,\n            },\n            particles: {\n                color: {\n                    value: options.color ?? \"!000000\",\n                },\n                links: {\n                    color: \"random\",\n                    distance: options.minDistance ?? 120,\n                    enable: options.connectParticles ?? false,\n                },\n                move: {\n                    enable: true,\n                    speed: options.speed ?? 0.5,\n                },\n                number: {\n                    value: options.maxParticles ?? 100,\n                },\n                size: {\n                    value: { min: 1, max: options.sizeVariations ?? 3 },\n                },\n            },\n            responsive: options.responsive?.map((responsive) => ({\n                maxWidth: responsive.breakpoint,\n                options: {\n                    particles: {\n                        color: {\n                            value: responsive.options?.color,\n                        },\n                        links: {\n                            distance: responsive.options?.minDistance,\n                            enable: responsive.options?.connectParticles,\n                        },\n                        number: {\n                            value: options.maxParticles,\n                        },\n                        move: {\n                            enable: true,\n                            speed: responsive.options?.speed,\n                        },\n                        size: {\n                            value: responsive.options?.sizeVariations,\n                        },\n                    },\n                },\n            })),\n        })\n            .then((container) => {\n            particles._container = container;\n        });\n        return particles;\n    }\n    destroy() {\n        const container = this._container;\n        container && container.destroy();\n    }\n    pauseAnimation() {\n        const container = this._container;\n        container && container.pause();\n    }\n    resumeAnimation() {\n        const container = this._container;\n        container && container.play();\n    }\n}\n","const initParticlesJS = (engine) => {\n    const particlesJS = (tagId, options) => {\n        return engine.load(tagId, options);\n    };\n    particlesJS.load = (tagId, pathConfigJson, callback) => {\n        engine\n            .loadJSON(tagId, pathConfigJson)\n            .then((container) => {\n            if (container) {\n                callback(container);\n            }\n        })\n            .catch(() => {\n            callback(undefined);\n        });\n    };\n    particlesJS.setOnClickHandler = (callback) => {\n        engine.setOnClickHandler(callback);\n    };\n    const pJSDom = engine.dom();\n    return { particlesJS, pJSDom };\n};\nexport { initParticlesJS };\n","import { Particles } from \"./marcbruederlin/Particles\";\nimport { initParticlesJS } from \"./VincentGarreau/particles\";\nconst initPjs = (engine) => {\n    const { particlesJS, pJSDom } = initParticlesJS(engine);\n    window.particlesJS = particlesJS;\n    window.pJSDom = pJSDom;\n    window.Particles = Particles;\n    return { particlesJS, pJSDom, Particles };\n};\nexport { initPjs };\n","import { clamp, getDistances, getRandom, } from \"tsparticles-engine\";\nexport function applyDistance(particle) {\n    const initialPosition = particle.initialPosition, { dx, dy } = getDistances(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), { maxDistance } = particle.retina, hDistance = maxDistance.horizontal, vDistance = maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    if (((hDistance && dxFixed >= hDistance) || (vDistance && dyFixed >= vDistance)) && !particle.misplaced) {\n        particle.misplaced = (!!hDistance && dxFixed > hDistance) || (!!vDistance && dyFixed > vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance && ((pos.x < initialPosition.x && vel.x < 0) || (pos.x > initialPosition.x && vel.x > 0))) {\n            vel.x *= -getRandom();\n        }\n        if (vDistance && ((pos.y < initialPosition.y && vel.y < 0) || (pos.y > initialPosition.y && vel.y > 0))) {\n            vel.y *= -getRandom();\n        }\n    }\n}\nexport function move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta) {\n    applyPath(particle, delta);\n    const gravityOptions = particle.gravity, gravityFactor = gravityOptions?.enable && gravityOptions.inverse ? -1 : 1;\n    if (moveDrift && moveSpeed) {\n        particle.velocity.x += (moveDrift * delta.factor) / (60 * moveSpeed);\n    }\n    if (gravityOptions?.enable && moveSpeed) {\n        particle.velocity.y += (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (60 * moveSpeed);\n    }\n    const decay = particle.moveDecay;\n    particle.velocity.multTo(decay);\n    const velocity = particle.velocity.mult(moveSpeed);\n    if (gravityOptions?.enable &&\n        maxSpeed > 0 &&\n        ((!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed) ||\n            (gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed))) {\n        velocity.y = gravityFactor * maxSpeed;\n        if (moveSpeed) {\n            particle.velocity.y = velocity.y / moveSpeed;\n        }\n    }\n    const zIndexOptions = particle.options.zIndex, zVelocityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n    velocity.multTo(zVelocityFactor);\n    const { position } = particle;\n    position.addTo(velocity);\n    if (moveOptions.vibrate) {\n        position.x += Math.sin(position.x * Math.cos(position.y));\n        position.y += Math.cos(position.y * Math.sin(position.x));\n    }\n}\nexport function spin(particle, moveSpeed) {\n    const container = particle.container;\n    if (!particle.spin) {\n        return;\n    }\n    const updateFunc = {\n        x: particle.spin.direction === \"clockwise\" ? Math.cos : Math.sin,\n        y: particle.spin.direction === \"clockwise\" ? Math.sin : Math.cos,\n    };\n    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n    particle.spin.radius += particle.spin.acceleration;\n    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height);\n    if (particle.spin.radius > maxCanvasSize / 2) {\n        particle.spin.radius = maxCanvasSize / 2;\n        particle.spin.acceleration *= -1;\n    }\n    else if (particle.spin.radius < 0) {\n        particle.spin.radius = 0;\n        particle.spin.acceleration *= -1;\n    }\n    particle.spin.angle += (moveSpeed / 100) * (1 - particle.spin.radius / maxCanvasSize);\n}\nexport function applyPath(particle, delta) {\n    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;\n    if (!pathEnabled) {\n        return;\n    }\n    if (particle.lastPathTime <= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n    }\n    const path = particle.pathGenerator?.generate(particle, delta);\n    if (path) {\n        particle.velocity.addTo(path);\n    }\n    if (pathOptions.clamp) {\n        particle.velocity.x = clamp(particle.velocity.x, -1, 1);\n        particle.velocity.y = clamp(particle.velocity.y, -1, 1);\n    }\n    particle.lastPathTime -= particle.pathDelay;\n}\nexport function getProximitySpeedFactor(particle) {\n    return particle.slow.inRange ? particle.slow.factor : 1;\n}\n","import { getDistance, getRangeMax, getRangeValue, } from \"tsparticles-engine\";\nimport { applyDistance, getProximitySpeedFactor, move, spin } from \"./Utils\";\nconst diffFactor = 2;\nexport class BaseMover {\n    constructor() {\n        this._initSpin = (particle) => {\n            const container = particle.container, options = particle.options, spinOptions = options.move.spin;\n            if (!spinOptions.enable) {\n                return;\n            }\n            const spinPos = spinOptions.position ?? { x: 50, y: 50 }, spinCenter = {\n                x: (spinPos.x / 100) * container.canvas.size.width,\n                y: (spinPos.y / 100) * container.canvas.size.height,\n            }, pos = particle.getPosition(), distance = getDistance(pos, spinCenter), spinAcceleration = getRangeValue(spinOptions.acceleration);\n            particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n            particle.spin = {\n                center: spinCenter,\n                direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n                angle: particle.velocity.angle,\n                radius: distance,\n                acceleration: particle.retina.spinAcceleration,\n            };\n        };\n    }\n    init(particle) {\n        const options = particle.options, gravityOptions = options.move.gravity;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        this._initSpin(particle);\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, pxRatio = container.retina.pixelRatio, slowFactor = getProximitySpeedFactor(particle), baseSpeed = (particle.retina.moveSpeed ??= getRangeValue(moveOptions.speed) * pxRatio) *\n            container.retina.reduceFactor, moveDrift = (particle.retina.moveDrift ??= getRangeValue(particle.options.move.drift) * pxRatio), maxSize = getRangeMax(particleOptions.size.value) * pxRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1, moveSpeed = (baseSpeed * sizeFactor * slowFactor * (delta.factor || 1)) / diffFactor, maxSpeed = particle.retina.maxSpeed ?? container.retina.maxSpeed;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta);\n        }\n        applyDistance(particle);\n    }\n}\n","import { isObject } from \"tsparticles-engine\";\nexport class CircleDrawer {\n    draw(context, particle, radius) {\n        if (!particle.circleRange) {\n            particle.circleRange = { min: 0, max: Math.PI * 2 };\n        }\n        const circleRange = particle.circleRange;\n        context.arc(0, 0, radius, circleRange.min, circleRange.max, false);\n    }\n    getSidesCount() {\n        return 12;\n    }\n    particleInit(container, particle) {\n        const shapeData = particle.shapeData, angle = shapeData?.angle ?? {\n            max: 360,\n            min: 0,\n        };\n        particle.circleRange = !isObject(angle)\n            ? {\n                min: 0,\n                max: (angle * Math.PI) / 180,\n            }\n            : { min: (angle.min * Math.PI) / 180, max: (angle.max * Math.PI) / 180 };\n    }\n}\n","import { randomInRange, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        ((colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0))) {\n        return;\n    }\n    if (!colorValue.time) {\n        colorValue.time = 0;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        colorValue.time += delta.value;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nexport function updateColor(particle, delta) {\n    const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n    if (!color) {\n        return;\n    }\n    const { h, s, l } = color;\n    if (h) {\n        updateColorValue(delta, h, hAnimation, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, sAnimation, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, lAnimation, 100, true);\n    }\n}\n","import { getHslAnimationFromHsl, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { updateColor } from \"./Utils\";\nexport class ColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((color?.h.value !== undefined && hAnimation.enable) ||\n                (color?.s.value !== undefined && sAnimation.enable) ||\n                (color?.l.value !== undefined && lAnimation.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle, delta);\n    }\n}\n","import { getRandom, getRangeValue, initParticleNumericAnimationValue, } from \"tsparticles-engine\";\nimport { updateOpacity } from \"./Utils\";\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity;\n        particle.opacity = initParticleNumericAnimationValue(opacityOptions, 1);\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / 100) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            ((particle.opacity.maxLoops ?? 0) <= 0 ||\n                ((particle.opacity.maxLoops ?? 0) > 0 &&\n                    (particle.opacity.loops ?? 0) < (particle.opacity.maxLoops ?? 0))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.time = 0;\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateOpacity(particle, delta);\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.opacity.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateOpacity(particle, delta) {\n    const data = particle.opacity;\n    if (particle.destroyed || !data?.enable || ((data.maxLoops ?? 0) > 0 && (data.loops ?? 0) > (data.maxLoops ?? 0))) {\n        return;\n    }\n    const minValue = data.min, maxValue = data.max, decay = data.decay ?? 1;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        return;\n    }\n    switch (data.status) {\n        case \"increasing\":\n            if (data.value >= maxValue) {\n                data.status = \"decreasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += (data.velocity ?? 0) * delta.factor;\n            }\n            break;\n        case \"decreasing\":\n            if (data.value <= minValue) {\n                data.status = \"increasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= (data.velocity ?? 0) * delta.factor;\n            }\n            break;\n    }\n    if (data.velocity && data.decay !== 1) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n","import { calculateBounds, } from \"tsparticles-engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils\";\nexport class BounceOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\n            \"bounce\",\n            \"bounce-vertical\",\n            \"bounce-horizontal\",\n            \"bounceVertical\",\n            \"bounceHorizontal\",\n            \"split\",\n        ];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n}\n","import { getValue } from \"tsparticles-engine\";\nexport function bounceHorizontal(data) {\n    if ((data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-horizontal\" &&\n        data.outMode !== \"bounceHorizontal\" &&\n        data.outMode !== \"split\") ||\n        (data.direction !== \"left\" && data.direction !== \"right\")) {\n        return;\n    }\n    if (data.bounds.right < 0 && data.direction === \"left\") {\n        data.particle.position.x = data.size + data.offset.x;\n    }\n    else if (data.bounds.left > data.canvasSize.width && data.direction === \"right\") {\n        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === \"right\" && data.bounds.right >= data.canvasSize.width && velocity > 0) ||\n        (data.direction === \"left\" && data.bounds.left <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.horizontal);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width && data.direction === \"right\") {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= 0 && data.direction === \"left\") {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if ((data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-vertical\" &&\n        data.outMode !== \"bounceVertical\" &&\n        data.outMode !== \"split\") ||\n        (data.direction !== \"bottom\" && data.direction !== \"top\")) {\n        return;\n    }\n    if (data.bounds.bottom < 0 && data.direction === \"top\") {\n        data.particle.position.y = data.size + data.offset.y;\n    }\n    else if (data.bounds.top > data.canvasSize.height && data.direction === \"bottom\") {\n        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n    }\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if ((data.direction === \"bottom\" && data.bounds.bottom >= data.canvasSize.height && velocity > 0) ||\n        (data.direction === \"top\" && data.bounds.top <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.vertical);\n        data.particle.velocity.y *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom >= data.canvasSize.height && data.direction === \"bottom\") {\n        data.particle.position.y = data.canvasSize.height - minPos;\n    }\n    else if (data.bounds.top <= 0 && data.direction === \"top\") {\n        data.particle.position.y = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\n","import { Vector, getDistances, isPointInside, } from \"tsparticles-engine\";\nexport class DestroyOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"destroy\"];\n    }\n    update(particle, direction, _delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"normal\":\n            case \"outside\":\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                break;\n            case \"inside\": {\n                const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                const { x: vx, y: vy } = particle.velocity;\n                if ((vx < 0 && dx > particle.moveCenter.radius) ||\n                    (vy < 0 && dy > particle.moveCenter.radius) ||\n                    (vx >= 0 && dx < -particle.moveCenter.radius) ||\n                    (vy >= 0 && dy < -particle.moveCenter.radius)) {\n                    return;\n                }\n                break;\n            }\n        }\n        container.particles.remove(particle, undefined, true);\n    }\n}\n","import { Vector, isPointInside, } from \"tsparticles-engine\";\nexport class NoneOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"none\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        if ((particle.options.move.distance.horizontal &&\n            (direction === \"left\" || direction === \"right\")) ||\n            (particle.options.move.distance.vertical &&\n                (direction === \"top\" || direction === \"bottom\"))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container;\n        const canvasSize = container.canvas.size;\n        const pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > 0 && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < 0 && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > 0 && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < 0 && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === \"bottom\") ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === \"top\")) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n","import { Vector, calculateBounds, getDistances, getRandom, isPointInside, randomInRange, } from \"tsparticles-engine\";\nexport class OutOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"out\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"inside\": {\n                const { x: vx, y: vy } = particle.velocity;\n                const circVec = Vector.origin;\n                circVec.length = particle.moveCenter.radius;\n                circVec.angle = particle.velocity.angle + Math.PI;\n                circVec.addTo(Vector.create(particle.moveCenter));\n                const { dx, dy } = getDistances(particle.position, circVec);\n                if ((vx <= 0 && dx >= 0) || (vy <= 0 && dy >= 0) || (vx >= 0 && dx <= 0) || (vy >= 0 && dy <= 0)) {\n                    return;\n                }\n                particle.position.x = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.width,\n                }));\n                particle.position.y = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.height,\n                }));\n                const { dx: newDx, dy: newDy } = getDistances(particle.position, particle.moveCenter);\n                particle.direction = Math.atan2(-newDy, -newDx);\n                particle.velocity.angle = particle.direction;\n                break;\n            }\n            default: {\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                switch (particle.outType) {\n                    case \"outside\": {\n                        particle.position.x =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.x;\n                        particle.position.y =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.y;\n                        const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                        if (particle.moveCenter.radius) {\n                            particle.direction = Math.atan2(dy, dx);\n                            particle.velocity.angle = particle.direction;\n                        }\n                        break;\n                    }\n                    case \"normal\": {\n                        const wrap = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n                            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n                            left: -particle.getRadius() - particle.offset.x,\n                            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n                            top: -particle.getRadius() - particle.offset.y,\n                        }, sizeValue = particle.getRadius(), nextBounds = calculateBounds(particle.position, sizeValue);\n                        if (direction === \"right\" &&\n                            nextBounds.left > canvasSize.width + particle.offset.x) {\n                            particle.position.x = newPos.left;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        else if (direction === \"left\" && nextBounds.right < -particle.offset.x) {\n                            particle.position.x = newPos.right;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        if (direction === \"bottom\" &&\n                            nextBounds.top > canvasSize.height + particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.top;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        else if (direction === \"top\" && nextBounds.bottom < -particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.bottom;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n}\n","import { BounceOutMode } from \"./BounceOutMode\";\nimport { DestroyOutMode } from \"./DestroyOutMode\";\nimport { NoneOutMode } from \"./NoneOutMode\";\nimport { OutOutMode } from \"./OutOutMode\";\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this.container = container;\n        this._updateOutMode = (particle, delta, outMode, direction) => {\n            for (const updater of this.updaters) {\n                updater.update(particle, direction, delta, outMode);\n            }\n        };\n        this.updaters = [\n            new BounceOutMode(container),\n            new DestroyOutMode(container),\n            new OutOutMode(container),\n            new NoneOutMode(container),\n        ];\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        const outModes = particle.options.move.outModes;\n        this._updateOutMode(particle, delta, outModes.bottom ?? outModes.default, \"bottom\");\n        this._updateOutMode(particle, delta, outModes.left ?? outModes.default, \"left\");\n        this._updateOutMode(particle, delta, outModes.right ?? outModes.default, \"right\");\n        this._updateOutMode(particle, delta, outModes.top ?? outModes.default, \"top\");\n    }\n}\n","import { getRandom } from \"tsparticles-engine\";\nimport { updateSize } from \"./Utils\";\nexport class SizeUpdater {\n    init(particle) {\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                ((particle.retina.sizeAnimationSpeed ?? container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            ((particle.size.maxLoops ?? 0) <= 0 ||\n                ((particle.size.maxLoops ?? 0) > 0 && (particle.size.loops ?? 0) < (particle.size.maxLoops ?? 0))));\n    }\n    reset(particle) {\n        particle.size.loops = 0;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateSize(particle, delta);\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.size.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateSize(particle, delta) {\n    const data = particle.size;\n    if (particle.destroyed ||\n        !data ||\n        !data.enable ||\n        ((data.maxLoops ?? 0) > 0 && (data.loops ?? 0) > (data.maxLoops ?? 0))) {\n        return;\n    }\n    const sizeVelocity = (data.velocity ?? 0) * delta.factor, minValue = data.min, maxValue = data.max, decay = data.decay ?? 1;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        return;\n    }\n    switch (data.status) {\n        case \"increasing\":\n            if (data.value >= maxValue) {\n                data.status = \"decreasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += sizeVelocity;\n            }\n            break;\n        case \"decreasing\":\n            if (data.value <= minValue) {\n                data.status = \"increasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= sizeVelocity;\n            }\n    }\n    if (data.velocity && decay !== 1) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n","import { loadBaseMover } from \"tsparticles-move-base\";\nimport { loadCircleShape } from \"tsparticles-shape-circle\";\nimport { loadColorUpdater } from \"tsparticles-updater-color\";\nimport { loadOpacityUpdater } from \"tsparticles-updater-opacity\";\nimport { loadOutModesUpdater } from \"tsparticles-updater-out-modes\";\nimport { loadSizeUpdater } from \"tsparticles-updater-size\";\nexport async function loadBasic(engine, refresh = true) {\n    await loadBaseMover(engine, false);\n    await loadCircleShape(engine, false);\n    await loadColorUpdater(engine, false);\n    await loadOpacityUpdater(engine, false);\n    await loadOutModesUpdater(engine, false);\n    await loadSizeUpdater(engine, false);\n    await engine.refresh(refresh);\n}\n","import { BaseMover } from \"./BaseMover\";\nexport async function loadBaseMover(engine, refresh = true) {\n    await engine.addMover(\"base\", () => new BaseMover(), refresh);\n}\n","import { CircleDrawer } from \"./CircleDrawer\";\nexport async function loadCircleShape(engine, refresh = true) {\n    await engine.addShape(\"circle\", new CircleDrawer(), refresh);\n}\n","import { ColorUpdater } from \"./ColorUpdater\";\nexport async function loadColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"color\", (container) => new ColorUpdater(container), refresh);\n}\n","import { OpacityUpdater } from \"./OpacityUpdater\";\nexport async function loadOpacityUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"opacity\", (container) => new OpacityUpdater(container), refresh);\n}\n","import { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater\";\nexport async function loadOutModesUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"outModes\", (container) => new OutOfCanvasUpdater(container), refresh);\n}\n","import { SizeUpdater } from \"./SizeUpdater\";\nexport async function loadSizeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"size\", () => new SizeUpdater(), refresh);\n}\n","export class Attract {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.easing = \"ease-out-quad\";\n        this.factor = 1;\n        this.maxSpeed = 50;\n        this.speed = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Vector, clamp, getDistances, getEasing, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Attract } from \"./Options/Classes/Attract\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickAttract = () => {\n            const container = this.container;\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            const { attract } = container;\n            if (!attract.finish) {\n                if (!attract.count) {\n                    attract.count = 0;\n                }\n                attract.count++;\n                if (attract.count === container.particles.count) {\n                    attract.finish = true;\n                }\n            }\n            if (attract.clicking) {\n                const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;\n                if (!attractRadius || attractRadius < 0 || !mousePos) {\n                    return;\n                }\n                this._processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n            }\n            else if (attract.clicking === false) {\n                attract.particles = [];\n            }\n            return;\n        };\n        this._hoverAttract = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;\n            if (!attractRadius || attractRadius < 0 || !mousePos) {\n                return;\n            }\n            this._processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n        };\n        this._processAttract = (position, attractRadius, area) => {\n            const container = this.container, attractOptions = container.actualOptions.interactivity.modes.attract;\n            if (!attractOptions) {\n                return;\n            }\n            const query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position);\n                const velocity = attractOptions.speed * attractOptions.factor;\n                const attractFactor = clamp(getEasing(attractOptions.easing)(1 - distance / attractRadius) * velocity, 0, attractOptions.maxSpeed);\n                const normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * attractFactor, distance === 0 ? velocity : (dy / distance) * attractFactor);\n                particle.position.subFrom(normVec);\n            }\n        };\n        this._engine = engine;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, attract = options.interactivity.modes.attract;\n            if (!attract || mode !== \"attract\") {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                if (!container.attract) {\n                    container.attract = { particles: [] };\n                }\n                container.attract.clicking = false;\n            }, attract.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, attract = container.actualOptions.interactivity.modes.attract;\n        if (!attract) {\n            return;\n        }\n        container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n            this._hoverAttract();\n        }\n        else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n            this._clickAttract();\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.attract) {\n            options.attract = new Attract();\n        }\n        for (const source of sources) {\n            options.attract.load(source?.attract);\n        }\n    }\n    reset() {\n    }\n}\n","export class Bounce {\n    constructor() {\n        this.distance = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, isDivModeEnabled, isInArray, mouseMoveEvent, rectBounce, } from \"tsparticles-engine\";\nimport { Bounce } from \"./Options/Classes/Bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._processBounce = (position, radius, area) => {\n            const query = this.container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                if (area instanceof Circle) {\n                    circleBounce(circleBounceDataFromParticle(particle), {\n                        position,\n                        radius,\n                        mass: (radius ** 2 * Math.PI) / 2,\n                        velocity: Vector.origin,\n                        factor: Vector.origin,\n                    });\n                }\n                else if (area instanceof Rectangle) {\n                    rectBounce(particle, calculateBounds(position, radius));\n                }\n            }\n        };\n        this._processMouseBounce = () => {\n            const container = this.container, pxRatio = container.retina.pixelRatio, tolerance = 10 * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n            if (!radius || radius < 0 || !mousePos) {\n                return;\n            }\n            this._processBounce(mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance));\n        };\n        this._singleSelectorBounce = (selector, div) => {\n            const container = this.container, query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, radius = (elem.offsetWidth / 2) * pxRatio, tolerance = 10 * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, radius + tolerance)\n                    : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * 2, elem.offsetHeight * pxRatio + tolerance * 2);\n                this._processBounce(pos, radius, area);\n            });\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"bounce\", hoverMode)) {\n            this._processMouseBounce();\n        }\n        else {\n            divModeExecute(\"bounce\", divs, (selector, div) => this._singleSelectorBounce(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv;\n        return ((mouse.position && events.onHover.enable && isInArray(\"bounce\", events.onHover.mode)) ||\n            isDivModeEnabled(\"bounce\", divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source?.bounce);\n        }\n    }\n    reset() {\n    }\n}\n","import { OptionsColor, executeOnSingleOrMultiple, isArray, } from \"tsparticles-engine\";\nexport class BubbleBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.mix = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.mix !== undefined) {\n            this.mix = data.mix;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.color !== undefined) {\n            const sourceColor = isArray(this.color) ? undefined : this.color;\n            this.color = executeOnSingleOrMultiple(data.color, (color) => {\n                return OptionsColor.create(sourceColor, color);\n            });\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { BubbleBase } from \"./BubbleBase\";\nexport class BubbleDiv extends BubbleBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { BubbleBase } from \"./BubbleBase\";\nimport { BubbleDiv } from \"./BubbleDiv\";\nexport class Bubble extends BubbleBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new BubbleDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nexport function calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return clamp(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return clamp(value, modeValue, particleValue);\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, colorMix, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromSingleOrMultiple, mouseLeaveEvent, mouseMoveEvent, rangeColorToHsl, rgbToHsl, } from \"tsparticles-engine\";\nimport { Bubble } from \"./Options/Classes/Bubble\";\nimport { calculateBubbleValue } from \"./Utils\";\nexport class Bubbler extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._clickBubble = () => {\n            const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || !mouseClickPos) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            const distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < 0) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mouseClickPos, distance, (p) => this.isEnabled(p)), { bubble } = container;\n            for (const particle of query) {\n                if (!bubble.clicking) {\n                    continue;\n                }\n                particle.bubble.inRange = !bubble.durationEnd;\n                const pos = particle.getPosition(), distMouse = getDistance(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n                if (timeSpent > bubbleOptions.duration) {\n                    bubble.durationEnd = true;\n                }\n                if (timeSpent > bubbleOptions.duration * 2) {\n                    bubble.clicking = false;\n                    bubble.durationEnd = false;\n                }\n                const sizeData = {\n                    bubbleObj: {\n                        optValue: container.retina.bubbleModeSize,\n                        value: particle.bubble.radius,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                        value: particle.size.value,\n                    },\n                    type: \"size\",\n                };\n                this._process(particle, distMouse, timeSpent, sizeData);\n                const opacityData = {\n                    bubbleObj: {\n                        optValue: bubbleOptions.opacity,\n                        value: particle.bubble.opacity,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.opacity.value),\n                        value: particle.opacity?.value ?? 1,\n                    },\n                    type: \"opacity\",\n                };\n                this._process(particle, distMouse, timeSpent, opacityData);\n                if (!bubble.durationEnd && distMouse <= distance) {\n                    this._hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n        };\n        this._hoverBubble = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < 0 || mousePos === undefined) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                particle.bubble.inRange = true;\n                const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos), ratio = 1 - pointDistance / distance;\n                if (pointDistance <= distance) {\n                    if (ratio >= 0 && container.interactivity.status === mouseMoveEvent) {\n                        this._hoverBubbleSize(particle, ratio);\n                        this._hoverBubbleOpacity(particle, ratio);\n                        this._hoverBubbleColor(particle, ratio);\n                    }\n                }\n                else {\n                    this.reset(particle);\n                }\n                if (container.interactivity.status === mouseLeaveEvent) {\n                    this.reset(particle);\n                }\n            }\n        };\n        this._hoverBubbleColor = (particle, ratio, divBubble) => {\n            const options = this.container.actualOptions, bubbleOptions = divBubble ?? options.interactivity.modes.bubble;\n            if (!bubbleOptions) {\n                return;\n            }\n            if (!particle.bubble.finalColor) {\n                const modeColor = bubbleOptions.color;\n                if (!modeColor) {\n                    return;\n                }\n                const bubbleColor = itemFromSingleOrMultiple(modeColor);\n                particle.bubble.finalColor = rangeColorToHsl(bubbleColor);\n            }\n            if (!particle.bubble.finalColor) {\n                return;\n            }\n            if (bubbleOptions.mix) {\n                particle.bubble.color = undefined;\n                const pColor = particle.getFillColor();\n                particle.bubble.color = pColor\n                    ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, 1 - ratio, ratio))\n                    : particle.bubble.finalColor;\n            }\n            else {\n                particle.bubble.color = particle.bubble.finalColor;\n            }\n        };\n        this._hoverBubbleOpacity = (particle, ratio, divBubble) => {\n            const container = this.container, options = container.actualOptions, modeOpacity = divBubble?.opacity ?? options.interactivity.modes.bubble?.opacity;\n            if (!modeOpacity) {\n                return;\n            }\n            const optOpacity = particle.options.opacity.value, pOpacity = particle.opacity?.value ?? 1, opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n            if (opacity !== undefined) {\n                particle.bubble.opacity = opacity;\n            }\n        };\n        this._hoverBubbleSize = (particle, ratio, divBubble) => {\n            const container = this.container, modeSize = divBubble?.size ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n            if (modeSize === undefined) {\n                return;\n            }\n            const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio, pSize = particle.size.value, size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n            if (size !== undefined) {\n                particle.bubble.radius = size;\n            }\n        };\n        this._process = (particle, distMouse, timeSpent, data) => {\n            const container = this.container, bubbleParam = data.bubbleObj.optValue, options = container.actualOptions, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || bubbleParam === undefined) {\n                return;\n            }\n            const bubbleDuration = bubbleOptions.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value || 0, type = data.type;\n            if (!bubbleDistance || bubbleDistance < 0 || bubbleParam === particlesParam) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            if (container.bubble.durationEnd) {\n                if (pObjBubble) {\n                    if (type === \"size\") {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === \"opacity\") {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n            else {\n                if (distMouse <= bubbleDistance) {\n                    const obj = pObjBubble ?? pObj;\n                    if (obj !== bubbleParam) {\n                        const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                        if (type === \"size\") {\n                            particle.bubble.radius = value;\n                        }\n                        if (type === \"opacity\") {\n                            particle.bubble.opacity = value;\n                        }\n                    }\n                }\n                else {\n                    if (type === \"size\") {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === \"opacity\") {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n        };\n        this._singleSelectorHover = (delta, selector, div) => {\n            const container = this.container, selectors = document.querySelectorAll(selector), bubble = container.actualOptions.interactivity.modes.bubble;\n            if (!bubble || !selectors.length) {\n                return;\n            }\n            selectors.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n                for (const particle of query) {\n                    if (!area.contains(particle.getPosition())) {\n                        continue;\n                    }\n                    particle.bubble.inRange = true;\n                    const divs = bubble.divs, divBubble = divMode(divs, elem);\n                    if (!particle.bubble.div || particle.bubble.div !== elem) {\n                        this.clear(particle, delta, true);\n                        particle.bubble.div = elem;\n                    }\n                    this._hoverBubbleSize(particle, 1, divBubble);\n                    this._hoverBubbleOpacity(particle, 1, divBubble);\n                    this._hoverBubbleColor(particle, 1, divBubble);\n                }\n            });\n        };\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        this.handleClickMode = (mode) => {\n            if (mode !== \"bubble\") {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            container.bubble.clicking = true;\n        };\n    }\n    clear(particle, delta, force) {\n        if (particle.bubble.inRange && !force) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    init() {\n        const container = this.container, bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble) {\n            return;\n        }\n        container.retina.bubbleModeDistance = bubble.distance * container.retina.pixelRatio;\n        if (bubble.size !== undefined) {\n            container.retina.bubbleModeSize = bubble.size * container.retina.pixelRatio;\n        }\n    }\n    async interact(delta) {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && isInArray(\"bubble\", hoverMode)) {\n            this._hoverBubble();\n        }\n        else if (clickEnabled && isInArray(\"bubble\", clickMode)) {\n            this._clickBubble();\n        }\n        else {\n            divModeExecute(\"bubble\", divs, (selector, div) => this._singleSelectorHover(delta, selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, { onClick, onDiv, onHover } = events, divBubble = isDivModeEnabled(\"bubble\", onDiv);\n        if (!(divBubble || (onHover.enable && mouse.position) || (onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        return isInArray(\"bubble\", onHover.mode) || isInArray(\"bubble\", onClick.mode) || divBubble;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bubble) {\n            options.bubble = new Bubble();\n        }\n        for (const source of sources) {\n            options.bubble.load(source?.bubble);\n        }\n    }\n    reset(particle) {\n        particle.bubble.inRange = false;\n    }\n}\n","export class ConnectLinks {\n    constructor() {\n        this.opacity = 0.5;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { ConnectLinks } from \"./ConnectLinks\";\nexport class Connect {\n    constructor() {\n        this.distance = 80;\n        this.links = new ConnectLinks();\n        this.radius = 60;\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links ?? data.lineLinked ?? data.line_linked);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { colorMix, drawLine, getStyleFromHsl, getStyleFromRgb, } from \"tsparticles-engine\";\nexport function gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(0, getStyleFromHsl(color1, opacity));\n    grad.addColorStop(gradStop > 1 ? 1 : gradStop, getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(1, getStyleFromHsl(color2, opacity));\n    return grad;\n}\nexport function drawConnectLine(context, width, lineStyle, begin, end) {\n    drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n}\nexport function lineStyle(container, ctx, p1, p2) {\n    const options = container.actualOptions, connectOptions = options.interactivity.modes.connect;\n    if (!connectOptions) {\n        return;\n    }\n    return gradient(ctx, p1, p2, connectOptions.links.opacity);\n}\nexport function drawConnection(container, p1, p2) {\n    container.canvas.draw((ctx) => {\n        const ls = lineStyle(container, ctx, p1, p2);\n        if (!ls) {\n            return;\n        }\n        const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        drawConnectLine(ctx, p1.retina.linksWidth ?? 0, ls, pos1, pos2);\n    });\n}\n","import { ExternalInteractorBase, isInArray, } from \"tsparticles-engine\";\nimport { Connect } from \"./Options/Classes/Connect\";\nimport { drawConnection } from \"./Utils\";\nexport class Connector extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, connect = container.actualOptions.interactivity.modes.connect;\n        if (!connect) {\n            return;\n        }\n        container.retina.connectModeDistance = connect.distance * container.retina.pixelRatio;\n        container.retina.connectModeRadius = connect.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"pointermove\") {\n            const mousePos = container.interactivity.mouse.position;\n            if (!container.retina.connectModeDistance ||\n                container.retina.connectModeDistance < 0 ||\n                !container.retina.connectModeRadius ||\n                container.retina.connectModeRadius < 0 ||\n                !mousePos) {\n                return;\n            }\n            const distance = Math.abs(container.retina.connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            let i = 0;\n            for (const p1 of query) {\n                const pos1 = p1.getPosition();\n                for (const p2 of query.slice(i + 1)) {\n                    const pos2 = p2.getPosition(), distMax = Math.abs(container.retina.connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        drawConnection(container, p1, p2);\n                    }\n                }\n                ++i;\n            }\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        return isInArray(\"connect\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.connect) {\n            options.connect = new Connect();\n        }\n        for (const source of sources) {\n            options.connect.load(source?.connect);\n        }\n    }\n    reset() {\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class GrabLinks {\n    constructor() {\n        this.blink = false;\n        this.consent = false;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { GrabLinks } from \"./GrabLinks\";\nexport class Grab {\n    constructor() {\n        this.distance = 100;\n        this.links = new GrabLinks();\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links ?? data.lineLinked ?? data.line_linked);\n    }\n}\n","import { drawLine, getStyleFromRgb } from \"tsparticles-engine\";\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    drawLine(context, begin, end);\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n}\nexport function drawGrab(container, particle, lineColor, opacity, mousePos) {\n    container.canvas.draw((ctx) => {\n        const beginPos = particle.getPosition();\n        drawGrabLine(ctx, particle.retina.linksWidth ?? 0, beginPos, mousePos, lineColor, opacity);\n    });\n}\n","import { ExternalInteractorBase, getDistance, getLinkColor, getLinkRandomColor, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Grab } from \"./Options/Classes/Grab\";\nimport { drawGrab } from \"./Utils\";\nexport class Grabber extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, grab = container.actualOptions.interactivity.modes.grab;\n        if (!grab) {\n            return;\n        }\n        container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (!interactivity.modes.grab ||\n            !interactivity.events.onHover.enable ||\n            container.interactivity.status !== mouseMoveEvent) {\n            return;\n        }\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const distance = container.retina.grabModeDistance;\n        if (!distance || distance < 0) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos);\n            if (pointDistance > distance) {\n                continue;\n            }\n            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n            if (opacityLine <= 0) {\n                continue;\n            }\n            const optColor = grabLineOptions.color ?? particle.options.links?.color;\n            if (!container.particles.grabLineColor && optColor) {\n                const linksOptions = interactivity.modes.grab.links;\n                container.particles.grabLineColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            }\n            const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n            if (!colorLine) {\n                continue;\n            }\n            drawGrab(container, particle, colorLine, opacityLine, mousePos);\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"grab\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.grab) {\n            options.grab = new Grab();\n        }\n        for (const source of sources) {\n            options.grab.load(source?.grab);\n        }\n    }\n    reset() {\n    }\n}\n","import { ExternalInteractorBase } from \"tsparticles-engine\";\nexport class Pauser extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"pause\") {\n                return;\n            }\n            const container = this.container;\n            if (container.getAnimationStatus()) {\n                container.pause();\n            }\n            else {\n                container.play();\n            }\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    reset() {\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class Push {\n    constructor() {\n        this.default = true;\n        this.groups = [];\n        this.quantity = 4;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = setRangeValue(value);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        if (data.groups !== undefined) {\n            this.groups = data.groups.map((t) => t);\n        }\n        if (!this.groups.length) {\n            this.default = true;\n        }\n        const quantity = data.quantity ?? data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, itemFromArray, } from \"tsparticles-engine\";\nimport { Push } from \"./Options/Classes/Push\";\nexport class Pusher extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"push\") {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, pushOptions = options.interactivity.modes.push;\n            if (!pushOptions) {\n                return;\n            }\n            const quantity = getRangeValue(pushOptions.quantity);\n            if (quantity <= 0) {\n                return;\n            }\n            const group = itemFromArray([undefined, ...pushOptions.groups]), groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n            container.particles.push(quantity, container.interactivity.mouse, groupOptions, group);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.push) {\n            options.push = new Push();\n        }\n        for (const source of sources) {\n            options.push.load(source?.push);\n        }\n    }\n    reset() {\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class Remove {\n    constructor() {\n        this.quantity = 2;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = setRangeValue(value);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const quantity = data.quantity ?? data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, } from \"tsparticles-engine\";\nimport { Remove } from \"./Options/Classes/Remove\";\nexport class Remover extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container, options = container.actualOptions;\n            if (!options.interactivity.modes.remove || mode !== \"remove\") {\n                return;\n            }\n            const removeNb = getRangeValue(options.interactivity.modes.remove.quantity);\n            container.particles.removeQuantity(removeNb);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.remove) {\n            options.remove = new Remove();\n        }\n        for (const source of sources) {\n            options.remove.load(source?.remove);\n        }\n    }\n    reset() {\n    }\n}\n","export class RepulseBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.factor = 100;\n        this.speed = 1;\n        this.maxSpeed = 50;\n        this.easing = \"ease-out-quad\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { RepulseBase } from \"./RepulseBase\";\nexport class RepulseDiv extends RepulseBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { RepulseBase } from \"./RepulseBase\";\nimport { RepulseDiv } from \"./RepulseDiv\";\nexport class Repulse extends RepulseBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new RepulseDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, clamp, divMode, divModeExecute, getDistances, getEasing, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Repulse } from \"./Options/Classes/Repulse\";\nexport class Repulser extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickRepulse = () => {\n            const container = this.container, repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            const repulse = container.repulse || { particles: [] };\n            if (!repulse.finish) {\n                if (!repulse.count) {\n                    repulse.count = 0;\n                }\n                repulse.count++;\n                if (repulse.count === container.particles.count) {\n                    repulse.finish = true;\n                }\n            }\n            if (repulse.clicking) {\n                const repulseDistance = container.retina.repulseModeDistance;\n                if (!repulseDistance || repulseDistance < 0) {\n                    return;\n                }\n                const repulseRadius = Math.pow(repulseDistance / 6, 3), mouseClickPos = container.interactivity.mouse.clickPosition;\n                if (mouseClickPos === undefined) {\n                    return;\n                }\n                const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range, (p) => this.isEnabled(p));\n                for (const particle of query) {\n                    const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** 2, velocity = repulseOptions.speed, force = (-repulseRadius * velocity) / d;\n                    if (d <= repulseRadius) {\n                        repulse.particles.push(particle);\n                        const vect = Vector.create(dx, dy);\n                        vect.length = force;\n                        particle.velocity.setTo(vect);\n                    }\n                }\n            }\n            else if (repulse.clicking === false) {\n                for (const particle of repulse.particles) {\n                    particle.velocity.setTo(particle.initialVelocity);\n                }\n                repulse.particles = [];\n            }\n        };\n        this._hoverRepulse = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, repulseRadius = container.retina.repulseModeDistance;\n            if (!repulseRadius || repulseRadius < 0 || !mousePos) {\n                return;\n            }\n            this._processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n        };\n        this._processRepulse = (position, repulseRadius, area, divRepulse) => {\n            const container = this.container, query = container.particles.quadTree.query(area, (p) => this.isEnabled(p)), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position), velocity = (divRepulse?.speed ?? repulseOptions.speed) * repulseOptions.factor, repulseFactor = clamp(getEasing(repulseOptions.easing)(1 - distance / repulseRadius) * velocity, 0, repulseOptions.maxSpeed), normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * repulseFactor, distance === 0 ? velocity : (dy / distance) * repulseFactor);\n                particle.position.addTo(normVec);\n            }\n        };\n        this._singleSelectorRepulse = (selector, div) => {\n            const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n            if (!repulse) {\n                return;\n            }\n            const query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = repulse.divs, divRepulse = divMode(divs, elem);\n                this._processRepulse(pos, repulseRadius, area, divRepulse);\n            });\n        };\n        this._engine = engine;\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, repulseOpts = options.interactivity.modes.repulse;\n            if (!repulseOpts || mode !== \"repulse\") {\n                return;\n            }\n            if (!container.repulse) {\n                container.repulse = { particles: [] };\n            }\n            const repulse = container.repulse;\n            repulse.clicking = true;\n            repulse.count = 0;\n            for (const particle of container.repulse.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            repulse.particles = [];\n            repulse.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                repulse.clicking = false;\n            }, repulseOpts.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hover = events.onHover, hoverEnabled = hover.enable, hoverMode = hover.mode, click = events.onClick, clickEnabled = click.enable, clickMode = click.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"repulse\", hoverMode)) {\n            this._hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(\"repulse\", clickMode)) {\n            this._clickRepulse();\n        }\n        else {\n            divModeExecute(\"repulse\", divs, (selector, div) => this._singleSelectorRepulse(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv, hover = events.onHover, click = events.onClick, divRepulse = isDivModeEnabled(\"repulse\", divs);\n        if (!(divRepulse || (hover.enable && mouse.position) || (click.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = hover.mode, clickMode = click.mode;\n        return isInArray(\"repulse\", hoverMode) || isInArray(\"repulse\", clickMode) || divRepulse;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.repulse) {\n            options.repulse = new Repulse();\n        }\n        for (const source of sources) {\n            options.repulse.load(source?.repulse);\n        }\n    }\n    reset() {\n    }\n}\n","export class Slow {\n    constructor() {\n        this.factor = 3;\n        this.radius = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ExternalInteractorBase, getDistance, isInArray, } from \"tsparticles-engine\";\nimport { Slow } from \"./Options/Classes/Slow\";\nexport class Slower extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear(particle, delta, force) {\n        if (particle.slow.inRange && !force) {\n            return;\n        }\n        particle.slow.factor = 1;\n    }\n    init() {\n        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;\n        if (!slow) {\n            return;\n        }\n        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"slow\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.slow) {\n            options.slow = new Slow();\n        }\n        for (const source of sources) {\n            options.slow.load(source?.slow);\n        }\n    }\n    reset(particle) {\n        particle.slow.inRange = false;\n        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slowOptions = options.interactivity.modes.slow;\n        if (!slowOptions || !radius || radius < 0 || !mousePos) {\n            return;\n        }\n        const particlePos = particle.getPosition(), dist = getDistance(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slowOptions.factor, { slow } = particle;\n        if (dist > radius) {\n            return;\n        }\n        slow.inRange = true;\n        slow.factor = proximityFactor / slowFactor;\n    }\n}\n","export const InterlaceOffsets = [0, 4, 2, 1];\nexport const InterlaceSteps = [8, 8, 4, 2];\n","export class ByteStream {\n    constructor(bytes) {\n        this.pos = 0;\n        this.data = new Uint8ClampedArray(bytes);\n    }\n    getString(count) {\n        const slice = this.data.slice(this.pos, this.pos + count);\n        this.pos += slice.length;\n        return slice.reduce((acc, curr) => acc + String.fromCharCode(curr), \"\");\n    }\n    nextByte() {\n        return this.data[this.pos++];\n    }\n    nextTwoBytes() {\n        this.pos += 2;\n        return this.data[this.pos - 2] + (this.data[this.pos - 1] << 8);\n    }\n    readSubBlocks() {\n        let blockString = \"\", size = 0;\n        do {\n            size = this.data[this.pos++];\n            for (let count = size; --count >= 0; blockString += String.fromCharCode(this.data[this.pos++])) {\n            }\n        } while (size !== 0);\n        return blockString;\n    }\n    readSubBlocksBin() {\n        let size = 0, len = 0;\n        for (let offset = 0; (size = this.data[this.pos + offset]) !== 0; offset += size + 1) {\n            len += size;\n        }\n        const blockData = new Uint8Array(len);\n        for (let i = 0; (size = this.data[this.pos++]) !== 0;) {\n            for (let count = size; --count >= 0; blockData[i++] = this.data[this.pos++]) {\n            }\n        }\n        return blockData;\n    }\n    skipSubBlocks() {\n        for (; this.data[this.pos] !== 0; this.pos += this.data[this.pos] + 1) {\n        }\n        this.pos++;\n    }\n}\n","import { InterlaceOffsets, InterlaceSteps } from \"./Constants\";\nimport { ByteStream } from \"./ByteStream\";\nfunction parseColorTable(byteStream, count) {\n    const colors = [];\n    for (let i = 0; i < count; i++) {\n        colors.push({\n            r: byteStream.data[byteStream.pos],\n            g: byteStream.data[byteStream.pos + 1],\n            b: byteStream.data[byteStream.pos + 2],\n        });\n        byteStream.pos += 3;\n    }\n    return colors;\n}\nasync function parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex) {\n    switch (byteStream.nextByte()) {\n        case 249: {\n            const frame = gif.frames[getFrameIndex(false)];\n            byteStream.pos++;\n            const packedByte = byteStream.nextByte();\n            frame.GCreserved = (packedByte & 0xe0) >>> 5;\n            frame.disposalMethod = (packedByte & 0x1c) >>> 2;\n            frame.userInputDelayFlag = (packedByte & 2) === 2;\n            const transparencyFlag = (packedByte & 1) === 1;\n            frame.delayTime = byteStream.nextTwoBytes() * 0xa;\n            const transparencyIndex = byteStream.nextByte();\n            if (transparencyFlag) {\n                getTransparencyIndex(transparencyIndex);\n            }\n            byteStream.pos++;\n            break;\n        }\n        case 255: {\n            byteStream.pos++;\n            const applicationExtension = {\n                identifier: byteStream.getString(8),\n                authenticationCode: byteStream.getString(3),\n                data: byteStream.readSubBlocksBin(),\n            };\n            gif.applicationExtensions.push(applicationExtension);\n            break;\n        }\n        case 254: {\n            gif.comments.push([getFrameIndex(false), byteStream.readSubBlocks()]);\n            break;\n        }\n        case 1: {\n            if (gif.globalColorTable.length === 0) {\n                throw new EvalError(\"plain text extension without global color table\");\n            }\n            byteStream.pos++;\n            gif.frames[getFrameIndex(false)].plainTextData = {\n                left: byteStream.nextTwoBytes(),\n                top: byteStream.nextTwoBytes(),\n                width: byteStream.nextTwoBytes(),\n                height: byteStream.nextTwoBytes(),\n                charSize: {\n                    width: byteStream.nextTwoBytes(),\n                    height: byteStream.nextTwoBytes(),\n                },\n                foregroundColor: byteStream.nextByte(),\n                backgroundColor: byteStream.nextByte(),\n                text: byteStream.readSubBlocks(),\n            };\n            break;\n        }\n        default:\n            byteStream.skipSubBlocks();\n            break;\n    }\n}\nasync function parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    const frame = gif.frames[getFrameIndex(true)];\n    frame.left = byteStream.nextTwoBytes();\n    frame.top = byteStream.nextTwoBytes();\n    frame.width = byteStream.nextTwoBytes();\n    frame.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), localColorTableFlag = (packedByte & 0x80) === 0x80, interlacedFlag = (packedByte & 0x40) === 0x40;\n    frame.sortFlag = (packedByte & 0x20) === 0x20;\n    frame.reserved = (packedByte & 0x18) >>> 3;\n    const localColorCount = 1 << ((packedByte & 7) + 1);\n    if (localColorTableFlag) {\n        frame.localColorTable = parseColorTable(byteStream, localColorCount);\n    }\n    const getColor = (index) => {\n        const { r, g, b } = (localColorTableFlag ? frame.localColorTable : gif.globalColorTable)[index];\n        return { r, g, b, a: index === getTransparencyIndex(null) ? (avgAlpha ? ~~((r + g + b) / 3) : 0) : 255 };\n    };\n    const image = (() => {\n        try {\n            return new ImageData(frame.width, frame.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (image == null) {\n        throw new EvalError(\"GIF frame size is to large\");\n    }\n    const minCodeSize = byteStream.nextByte(), imageData = byteStream.readSubBlocksBin(), clearCode = 1 << minCodeSize;\n    const readBits = (pos, len) => {\n        const bytePos = pos >>> 3, bitPos = pos & 7;\n        return (((imageData[bytePos] + (imageData[bytePos + 1] << 8) + (imageData[bytePos + 2] << 16)) &\n            (((1 << len) - 1) << bitPos)) >>>\n            bitPos);\n    };\n    if (interlacedFlag) {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pass = 0; pass < 4; pass++) {\n            if (InterlaceOffsets[pass] < frame.height) {\n                for (let pixelPos = 0, lineIndex = 0;;) {\n                    const last = code;\n                    code = readBits(pos, size);\n                    pos += size + 1;\n                    if (code === clearCode) {\n                        size = minCodeSize + 1;\n                        dic.length = clearCode + 2;\n                        for (let i = 0; i < dic.length; i++) {\n                            dic[i] = i < clearCode ? [i] : [];\n                        }\n                    }\n                    else {\n                        if (code >= dic.length) {\n                            dic.push(dic[last].concat(dic[last][0]));\n                        }\n                        else if (last !== clearCode) {\n                            dic.push(dic[last].concat(dic[code][0]));\n                        }\n                        for (let i = 0; i < dic[code].length; i++) {\n                            const { r, g, b, a } = getColor(dic[code][i]);\n                            image.data.set([r, g, b, a], InterlaceOffsets[pass] * frame.width +\n                                InterlaceSteps[pass] * lineIndex +\n                                (pixelPos % (frame.width * 4)));\n                            pixelPos += 4;\n                        }\n                        if (dic.length === 1 << size && size < 0xc) {\n                            size++;\n                        }\n                    }\n                    if (pixelPos === frame.width * 4 * (lineIndex + 1)) {\n                        lineIndex++;\n                        if (InterlaceOffsets[pass] + InterlaceSteps[pass] * lineIndex >= frame.height) {\n                            break;\n                        }\n                    }\n                }\n            }\n            progressCallback?.(byteStream.pos / (byteStream.data.length - 1), getFrameIndex(false) + 1, image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n    }\n    else {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pixelPos = -4;;) {\n            const last = code;\n            code = readBits(pos, size);\n            pos += size;\n            if (code === clearCode) {\n                size = minCodeSize + 1;\n                dic.length = clearCode + 2;\n                for (let i = 0; i < dic.length; i++) {\n                    dic[i] = i < clearCode ? [i] : [];\n                }\n            }\n            else {\n                if (code === clearCode + 1) {\n                    break;\n                }\n                if (code >= dic.length) {\n                    dic.push(dic[last].concat(dic[last][0]));\n                }\n                else if (last !== clearCode) {\n                    dic.push(dic[last].concat(dic[code][0]));\n                }\n                for (let i = 0; i < dic[code].length; i++) {\n                    const { r, g, b, a } = getColor(dic[code][i]);\n                    image.data.set([r, g, b, a], (pixelPos += 4));\n                }\n                if (dic.length >= 1 << size && size < 0xc) {\n                    size++;\n                }\n            }\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n        progressCallback?.((byteStream.pos + 1) / byteStream.data.length, getFrameIndex(false) + 1, frame.image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n    }\n}\nasync function parseBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    switch (byteStream.nextByte()) {\n        case 59:\n            return true;\n        case 44:\n            await parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback);\n            break;\n        case 33:\n            await parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex);\n            break;\n        default:\n            throw new EvalError(\"undefined block found\");\n    }\n    return false;\n}\nexport function getGIFLoopAmount(gif) {\n    for (const extension of gif.applicationExtensions) {\n        if (extension.identifier + extension.authenticationCode !== \"NETSCAPE2.0\") {\n            continue;\n        }\n        return extension.data[1] + (extension.data[2] << 8);\n    }\n    return NaN;\n}\nexport async function decodeGIF(gifURL, progressCallback, avgAlpha) {\n    if (!avgAlpha)\n        avgAlpha = false;\n    const res = await fetch(gifURL);\n    if (!res.ok && res.status === 404) {\n        throw new EvalError(\"file not found\");\n    }\n    const buffer = await res.arrayBuffer();\n    const gif = {\n        width: 0,\n        height: 0,\n        totalTime: 0,\n        colorRes: 0,\n        pixelAspectRatio: 0,\n        frames: [],\n        sortFlag: false,\n        globalColorTable: [],\n        backgroundImage: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n        comments: [],\n        applicationExtensions: [],\n    }, byteStream = new ByteStream(new Uint8ClampedArray(buffer));\n    if (byteStream.getString(6) !== \"GIF89a\") {\n        throw new Error(\"not a supported GIF file\");\n    }\n    gif.width = byteStream.nextTwoBytes();\n    gif.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), globalColorTableFlag = (packedByte & 0x80) === 0x80;\n    gif.colorRes = (packedByte & 0x70) >>> 4;\n    gif.sortFlag = (packedByte & 8) === 8;\n    const globalColorCount = 1 << ((packedByte & 7) + 1), backgroundColorIndex = byteStream.nextByte();\n    gif.pixelAspectRatio = byteStream.nextByte();\n    if (gif.pixelAspectRatio !== 0) {\n        gif.pixelAspectRatio = (gif.pixelAspectRatio + 0xf) / 0x40;\n    }\n    if (globalColorTableFlag) {\n        gif.globalColorTable = parseColorTable(byteStream, globalColorCount);\n    }\n    const backgroundImage = (() => {\n        try {\n            return new ImageData(gif.width, gif.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (backgroundImage == null) {\n        throw new Error(\"GIF frame size is to large\");\n    }\n    const { r, g, b } = gif.globalColorTable[backgroundColorIndex];\n    backgroundImage.data.set(globalColorTableFlag ? [r, g, b, 255] : [0, 0, 0, 0]);\n    for (let i = 4; i < backgroundImage.data.length; i *= 2) {\n        backgroundImage.data.copyWithin(i, 0, i);\n    }\n    gif.backgroundImage = backgroundImage;\n    let frameIndex = -1, incrementFrameIndex = true, transparencyIndex = -1;\n    const getframeIndex = (increment) => {\n        if (increment) {\n            incrementFrameIndex = true;\n        }\n        return frameIndex;\n    };\n    const getTransparencyIndex = (newValue) => {\n        if (newValue != null) {\n            transparencyIndex = newValue;\n        }\n        return transparencyIndex;\n    };\n    try {\n        do {\n            if (incrementFrameIndex) {\n                gif.frames.push({\n                    left: 0,\n                    top: 0,\n                    width: 0,\n                    height: 0,\n                    disposalMethod: 0,\n                    image: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n                    plainTextData: null,\n                    userInputDelayFlag: false,\n                    delayTime: 0,\n                    sortFlag: false,\n                    localColorTable: [],\n                    reserved: 0,\n                    GCreserved: 0,\n                });\n                frameIndex++;\n                transparencyIndex = -1;\n                incrementFrameIndex = false;\n            }\n        } while (!(await parseBlock(byteStream, gif, avgAlpha, getframeIndex, getTransparencyIndex, progressCallback)));\n        gif.frames.length--;\n        for (const frame of gif.frames) {\n            if (frame.userInputDelayFlag && frame.delayTime === 0) {\n                gif.totalTime = Infinity;\n                break;\n            }\n            gif.totalTime += frame.delayTime;\n        }\n        return gif;\n    }\n    catch (error) {\n        if (error instanceof EvalError) {\n            throw new Error(`error while parsing frame ${frameIndex} \"${error.message}\"`);\n        }\n        throw error;\n    }\n}\n","import { errorPrefix, getLogger, getStyleFromHsl } from \"tsparticles-engine\";\nimport { decodeGIF, getGIFLoopAmount } from \"./GifUtils/Utils\";\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(0, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            getLogger().error(`${errorPrefix} loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function loadGifImage(image) {\n    if (image.type !== \"gif\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    try {\n        image.gifData = await decodeGIF(image.source);\n        image.gifLoopCount = getGIFLoopAmount(image.gifData) ?? 0;\n        if (image.gifLoopCount === 0) {\n            image.gifLoopCount = Infinity;\n        }\n    }\n    catch {\n        image.error = true;\n    }\n    image.loading = false;\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        getLogger().error(`${errorPrefix} Image not found`);\n        image.error = true;\n    }\n    else {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    const svgColoredData = replaceColorSvg(image, color, particle.opacity?.value ?? 1), imageRes = {\n        color,\n        gif: imageData.gif,\n        data: {\n            ...image,\n            svgData: svgColoredData,\n        },\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: imageData.replaceColor ?? imageData.replace_color,\n        source: imageData.src,\n    };\n    return new Promise((resolve) => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        img.addEventListener(\"error\", async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = {\n                ...image,\n                error: false,\n                loading: true,\n            };\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        });\n        img.src = url;\n    });\n}\n","import { errorPrefix } from \"tsparticles-engine\";\nimport { replaceImageColor } from \"./Utils\";\nexport class ImageDrawer {\n    constructor(engine) {\n        this.loadImageShape = async (imageShape) => {\n            if (!this._engine.loadImage) {\n                throw new Error(`${errorPrefix} image shape not initialized`);\n            }\n            await this._engine.loadImage({\n                gif: imageShape.gif,\n                name: imageShape.name,\n                replaceColor: imageShape.replaceColor ?? imageShape.replace_color ?? false,\n                src: imageShape.src,\n            });\n        };\n        this._engine = engine;\n    }\n    addImage(image) {\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        this._engine.images.push(image);\n    }\n    draw(context, particle, radius, opacity, delta) {\n        const image = particle.image, element = image?.element;\n        if (!image) {\n            return;\n        }\n        context.globalAlpha = opacity;\n        if (image.gif && image.gifData) {\n            const offscreenCanvas = new OffscreenCanvas(image.gifData.width, image.gifData.height), offscreenContext = offscreenCanvas.getContext(\"2d\");\n            if (!offscreenContext) {\n                throw new Error(\"could not create offscreen canvas context\");\n            }\n            offscreenContext.imageSmoothingQuality = \"low\";\n            offscreenContext.imageSmoothingEnabled = false;\n            offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n            if (particle.gifLoopCount === undefined) {\n                particle.gifLoopCount = image.gifLoopCount ?? 0;\n            }\n            let frameIndex = particle.gifFrame ?? 0;\n            const pos = { x: -image.gifData.width * 0.5, y: -image.gifData.height * 0.5 }, frame = image.gifData.frames[frameIndex];\n            if (particle.gifTime === undefined) {\n                particle.gifTime = 0;\n            }\n            if (!frame.bitmap) {\n                return;\n            }\n            context.scale(radius / image.gifData.width, radius / image.gifData.height);\n            switch (frame.disposalMethod) {\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 0:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                    break;\n                case 1:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    break;\n                case 2:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                    if (image.gifData.globalColorTable.length === 0) {\n                        offscreenContext.putImageData(image.gifData.frames[0].image, pos.x + frame.left, pos.y + frame.top);\n                    }\n                    else {\n                        offscreenContext.putImageData(image.gifData.backgroundImage, pos.x, pos.y);\n                    }\n                    break;\n                case 3:\n                    {\n                        const previousImageData = offscreenContext.getImageData(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                        offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                        context.drawImage(offscreenCanvas, pos.x, pos.y);\n                        offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                        offscreenContext.putImageData(previousImageData, 0, 0);\n                    }\n                    break;\n            }\n            particle.gifTime += delta.value;\n            if (particle.gifTime > frame.delayTime) {\n                particle.gifTime -= frame.delayTime;\n                if (++frameIndex >= image.gifData.frames.length) {\n                    if (--particle.gifLoopCount <= 0) {\n                        return;\n                    }\n                    frameIndex = 0;\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                }\n                particle.gifFrame = frameIndex;\n            }\n            context.scale(image.gifData.width / radius, image.gifData.height / radius);\n        }\n        else if (element) {\n            const ratio = image.ratio, pos = {\n                x: -radius,\n                y: -radius,\n            };\n            context.drawImage(element, pos.x, pos.y, radius * 2, (radius * 2) / ratio);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (!options.preload || !this._engine.loadImage) {\n            return;\n        }\n        for (const imageData of options.preload) {\n            await this._engine.loadImage(imageData);\n        }\n    }\n    loadShape(particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const imageData = particle.shapeData, image = this._engine.images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            this.loadImageShape(imageData).then(() => {\n                this.loadShape(particle);\n            });\n        }\n    }\n    particleInit(container, particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const images = this._engine.images, imageData = particle.shapeData, color = particle.getFillColor(), image = images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            return;\n        }\n        const replaceColor = imageData.replaceColor ?? imageData.replace_color ?? image.replaceColor;\n        if (image.loading) {\n            setTimeout(() => {\n                this.particleInit(container, particle);\n            });\n            return;\n        }\n        (async () => {\n            let imageRes;\n            if (image.svgData && color) {\n                imageRes = await replaceImageColor(image, imageData, color, particle);\n            }\n            else {\n                imageRes = {\n                    color,\n                    data: image,\n                    element: image.element,\n                    gif: image.gif,\n                    gifData: image.gifData,\n                    gifLoopCount: image.gifLoopCount,\n                    loaded: true,\n                    ratio: imageData.width && imageData.height ? imageData.width / imageData.height : image.ratio ?? 1,\n                    replaceColor: replaceColor,\n                    source: imageData.src,\n                };\n            }\n            if (!imageRes.ratio) {\n                imageRes.ratio = 1;\n            }\n            const fill = imageData.fill ?? particle.fill, close = imageData.close ?? particle.close, imageShape = {\n                image: imageRes,\n                fill,\n                close,\n            };\n            particle.image = imageShape.image;\n            particle.fill = imageShape.fill;\n            particle.close = imageShape.close;\n        })();\n    }\n}\n","export class Preload {\n    constructor() {\n        this.src = \"\";\n        this.gif = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.gif !== undefined) {\n            this.gif = data.gif;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.replaceColor !== undefined) {\n            this.replaceColor = data.replaceColor;\n        }\n        if (data.src !== undefined) {\n            this.src = data.src;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { Preload } from \"./Options/Classes/Preload\";\nexport class ImagePreloaderPlugin {\n    constructor(engine) {\n        this.id = \"imagePreloader\";\n        this._engine = engine;\n    }\n    getPlugin() {\n        return {};\n    }\n    loadOptions(options, source) {\n        if (!source || !source.preload) {\n            return;\n        }\n        if (!options.preload) {\n            options.preload = [];\n        }\n        const preloadOptions = options.preload;\n        for (const item of source.preload) {\n            const existing = preloadOptions.find((t) => t.name === item.name || t.src === item.src);\n            if (existing) {\n                existing.load(item);\n            }\n            else {\n                const preload = new Preload();\n                preload.load(item);\n                preloadOptions.push(preload);\n            }\n        }\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n","import { downloadSvgImage, loadGifImage, loadImage } from \"./Utils\";\nimport { ImageDrawer } from \"./ImageDrawer\";\nimport { ImagePreloaderPlugin } from \"./ImagePreloader\";\nimport { errorPrefix } from \"tsparticles-engine\";\nfunction addLoadImageToEngine(engine) {\n    if (engine.loadImage) {\n        return;\n    }\n    engine.loadImage = async (data) => {\n        if (!data.name && !data.src) {\n            throw new Error(`${errorPrefix} no image source provided`);\n        }\n        if (!engine.images) {\n            engine.images = [];\n        }\n        if (engine.images.find((t) => t.name === data.name || t.source === data.src)) {\n            return;\n        }\n        try {\n            const image = {\n                gif: data.gif ?? false,\n                name: data.name ?? data.src,\n                source: data.src,\n                type: data.src.substring(data.src.length - 3),\n                error: false,\n                loading: true,\n                replaceColor: data.replaceColor,\n                ratio: data.width && data.height ? data.width / data.height : undefined,\n            };\n            engine.images.push(image);\n            const imageFunc = data.gif ? loadGifImage : data.replaceColor ? downloadSvgImage : loadImage;\n            await imageFunc(image);\n        }\n        catch {\n            throw new Error(`${errorPrefix} ${data.name ?? data.src} not found`);\n        }\n    };\n}\nexport async function loadImageShape(engine, refresh = true) {\n    addLoadImageToEngine(engine);\n    const preloader = new ImagePreloaderPlugin(engine);\n    await engine.addPlugin(preloader, refresh);\n    await engine.addShape([\"image\", \"images\"], new ImageDrawer(engine), refresh);\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDelay extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDuration extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.0001;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { LifeDelay } from \"./LifeDelay\";\nimport { LifeDuration } from \"./LifeDuration\";\nexport class Life {\n    constructor() {\n        this.count = 0;\n        this.delay = new LifeDelay();\n        this.duration = new LifeDuration();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.delay.load(data.delay);\n        this.duration.load(data.duration);\n    }\n}\n","import { getRandom, getRangeValue, randomInRange, setRangeValue, } from \"tsparticles-engine\";\nimport { Life } from \"./Options/Classes/Life\";\nexport class LifeUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, lifeOptions = particlesOptions.life;\n        if (!lifeOptions) {\n            return;\n        }\n        particle.life = {\n            delay: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            delayTime: 0,\n            duration: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            time: 0,\n            count: lifeOptions.count,\n        };\n        if (particle.life.duration <= 0) {\n            particle.life.duration = -1;\n        }\n        if (particle.life.count <= 0) {\n            particle.life.count = -1;\n        }\n        if (particle.life) {\n            particle.spawning = particle.life.delay > 0;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.life) {\n            options.life = new Life();\n        }\n        for (const source of sources) {\n            options.life.load(source?.life);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.life) {\n            return;\n        }\n        const life = particle.life;\n        let justSpawned = false;\n        if (particle.spawning) {\n            life.delayTime += delta.value;\n            if (life.delayTime >= particle.life.delay) {\n                justSpawned = true;\n                particle.spawning = false;\n                life.delayTime = 0;\n                life.time = 0;\n            }\n            else {\n                return;\n            }\n        }\n        if (life.duration === -1) {\n            return;\n        }\n        if (particle.spawning) {\n            return;\n        }\n        if (justSpawned) {\n            life.time = 0;\n        }\n        else {\n            life.time += delta.value;\n        }\n        if (life.time < life.duration) {\n            return;\n        }\n        life.time = 0;\n        if (particle.life.count > 0) {\n            particle.life.count--;\n        }\n        if (particle.life.count === 0) {\n            particle.destroy();\n            return;\n        }\n        const canvasSize = this.container.canvas.size, widthRange = setRangeValue(0, canvasSize.width), heightRange = setRangeValue(0, canvasSize.width);\n        particle.position.x = randomInRange(widthRange);\n        particle.position.y = randomInRange(heightRange);\n        particle.spawning = true;\n        life.delayTime = 0;\n        life.time = 0;\n        particle.reset();\n        const lifeOptions = particle.options.life;\n        if (lifeOptions) {\n            life.delay = getRangeValue(lifeOptions.delay.value) * 1000;\n            life.duration = getRangeValue(lifeOptions.duration.value) * 1000;\n        }\n    }\n}\n","export class LineDrawer {\n    draw(context, particle, radius) {\n        const shapeData = particle.shapeData;\n        context.moveTo(-radius / 2, 0);\n        context.lineTo(radius / 2, 0);\n        context.lineCap = shapeData?.cap ?? \"butt\";\n    }\n    getSidesCount() {\n        return 1;\n    }\n}\n","import { isSsr } from \"tsparticles-engine\";\nexport class ParallaxMover {\n    init() {\n    }\n    isEnabled(particle) {\n        return (!isSsr() &&\n            !particle.destroyed &&\n            particle.container.actualOptions.interactivity.events.onHover.parallax.enable);\n    }\n    move(particle) {\n        const container = particle.container, options = container.actualOptions, parallaxOptions = options.interactivity.events.onHover.parallax;\n        if (isSsr() || !parallaxOptions.enable) {\n            return;\n        }\n        const parallaxForce = parallaxOptions.force, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const canvasSize = container.canvas.size, canvasCenter = {\n            x: canvasSize.width / 2,\n            y: canvasSize.height / 2,\n        }, parallaxSmooth = parallaxOptions.smooth, factor = particle.getRadius() / parallaxForce, centerDistance = {\n            x: (mousePos.x - canvasCenter.x) * factor,\n            y: (mousePos.y - canvasCenter.y) * factor,\n        }, { offset } = particle;\n        offset.x += (centerDistance.x - offset.x) / parallaxSmooth;\n        offset.y += (centerDistance.y - offset.y) / parallaxSmooth;\n    }\n}\n","export class ParticlesInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"particles\";\n    }\n}\n","import { ParticlesInteractorBase, getDistances, } from \"tsparticles-engine\";\nexport class Attractor extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1) {\n        const container = this.container, distance = p1.retina.attractDistance ?? container.retina.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy } = getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * 1000), ay = dy / (rotate.y * 1000), p1Factor = p2.size.value / p1.size.value, p2Factor = 1 / p1Factor;\n            p1.velocity.x -= ax * p1Factor;\n            p1.velocity.y -= ay * p1Factor;\n            p2.velocity.x += ax * p2Factor;\n            p2.velocity.y += ay * p2Factor;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction updateAbsorb(p1, r1, p2, r2, delta, pixelRatio) {\n    const factor = clamp((p1.options.collisions.absorb.speed * delta.factor) / 10, 0, r2);\n    p1.size.value += factor / 2;\n    p2.size.value -= factor;\n    if (r2 <= pixelRatio) {\n        p2.size.value = 0;\n        p2.destroy();\n    }\n}\nexport function absorb(p1, p2, delta, pixelRatio) {\n    const r1 = p1.getRadius(), r2 = p2.getRadius();\n    if (r1 === undefined && r2 !== undefined) {\n        p1.destroy();\n    }\n    else if (r1 !== undefined && r2 === undefined) {\n        p2.destroy();\n    }\n    else if (r1 !== undefined && r2 !== undefined) {\n        if (r1 >= r2) {\n            updateAbsorb(p1, r1, p2, r2, delta, pixelRatio);\n        }\n        else {\n            updateAbsorb(p2, r2, p1, r1, delta, pixelRatio);\n        }\n    }\n}\n","import { circleBounce, circleBounceDataFromParticle, getRangeValue } from \"tsparticles-engine\";\nconst fixBounceSpeed = (p) => {\n    if (p.collisionMaxSpeed === undefined) {\n        p.collisionMaxSpeed = getRangeValue(p.options.collisions.maxSpeed);\n    }\n    if (p.velocity.length > p.collisionMaxSpeed) {\n        p.velocity.length = p.collisionMaxSpeed;\n    }\n};\nexport function bounce(p1, p2) {\n    circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n    fixBounceSpeed(p1);\n    fixBounceSpeed(p2);\n}\n","import { absorb } from \"./Absorb\";\nimport { bounce } from \"./Bounce\";\nimport { destroy } from \"./Destroy\";\nexport function resolveCollision(p1, p2, delta, pixelRatio) {\n    switch (p1.options.collisions.mode) {\n        case \"absorb\": {\n            absorb(p1, p2, delta, pixelRatio);\n            break;\n        }\n        case \"bounce\": {\n            bounce(p1, p2);\n            break;\n        }\n        case \"destroy\": {\n            destroy(p1, p2);\n            break;\n        }\n    }\n}\n","import { bounce } from \"./Bounce\";\nexport function destroy(p1, p2) {\n    if (!p1.unbreakable && !p2.unbreakable) {\n        bounce(p1, p2);\n    }\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        const deleteP = p1.getRadius() >= p2.getRadius() ? p2 : p1;\n        deleteP.destroy();\n    }\n}\n","import { ParticlesInteractorBase, getDistance } from \"tsparticles-engine\";\nimport { resolveCollision } from \"./ResolveCollision\";\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1, delta) {\n        if (p1.destroyed || p1.spawning) {\n            return;\n        }\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n","import { Circle, Rectangle } from \"tsparticles-engine\";\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = { ...canvasSize };\n    }\n    contains(point) {\n        const { width, height } = this.canvasSize;\n        const { x, y } = point;\n        return (super.contains(point) ||\n            super.contains({ x: x - width, y }) ||\n            super.contains({ x: x - width, y: y - height }) ||\n            super.contains({ x, y: y - height }));\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * 2);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new OptionsColor();\n        this.color.value = \"#000\";\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksTriangle {\n    constructor() {\n        this.enable = false;\n        this.frequency = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nimport { LinksShadow } from \"./LinksShadow\";\nimport { LinksTriangle } from \"./LinksTriangle\";\nexport class Links {\n    constructor() {\n        this.blink = false;\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.frequency = 1;\n        this.opacity = 1;\n        this.shadow = new LinksShadow();\n        this.triangles = new LinksTriangle();\n        this.width = 1;\n        this.warp = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.id !== undefined) {\n            this.id = data.id;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        this.shadow.load(data.shadow);\n        this.triangles.load(data.triangles);\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { Circle, ParticlesInteractorBase, getDistances, getLinkRandomColor, } from \"tsparticles-engine\";\nimport { CircleWarp } from \"./CircleWarp\";\nimport { Links } from \"./Options/Classes/Links\";\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    const { dx, dy, distance } = getDistances(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const absDiffs = {\n        x: Math.abs(dx),\n        y: Math.abs(dy),\n    }, warpDistances = {\n        x: Math.min(absDiffs.x, canvasSize.width - absDiffs.x),\n        y: Math.min(absDiffs.y, canvasSize.height - absDiffs.y),\n    };\n    return Math.sqrt(warpDistances.x ** 2 + warpDistances.y ** 2);\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n        this._setColor = (p1) => {\n            if (!p1.options.links) {\n                return;\n            }\n            const container = this.linkContainer, linksOptions = p1.options.links;\n            let linkColor = linksOptions.id === undefined\n                ? container.particles.linksColor\n                : container.particles.linksColors.get(linksOptions.id);\n            if (linkColor) {\n                return;\n            }\n            const optColor = linksOptions.color;\n            linkColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            if (linksOptions.id === undefined) {\n                container.particles.linksColor = linkColor;\n            }\n            else {\n                container.particles.linksColors.set(linksOptions.id, linkColor);\n            }\n        };\n        this.linkContainer = container;\n    }\n    clear() {\n    }\n    init() {\n        this.linkContainer.particles.linksColor = undefined;\n        this.linkContainer.particles.linksColors = new Map();\n    }\n    async interact(p1) {\n        if (!p1.options.links) {\n            return;\n        }\n        p1.links = [];\n        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n        if (pos1.x < 0 || pos1.y < 0 || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = p1.retina.linksDistance ?? 0, warp = linkOpt1.warp, range = warp\n            ? new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\n            : new Circle(pos1.x, pos1.y, optDistance), query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !linkOpt2?.enable ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                !p2.links ||\n                p1.links.some((t) => t.destination === p2) ||\n                p2.links.some((t) => t.destination === p1)) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < 0 || pos2.y < 0 || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                continue;\n            }\n            const opacityLine = (1 - distance / optDistance) * optOpacity;\n            this._setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    isEnabled(particle) {\n        return !!particle.options.links?.enable;\n    }\n    loadParticlesOptions(options, ...sources) {\n        if (!options.links) {\n            options.links = new Links();\n        }\n        for (const source of sources) {\n            options.links.load(source?.links ?? source?.lineLinked ?? source?.line_linked);\n        }\n    }\n    reset() {\n    }\n}\n","import { drawLine, drawTriangle, getDistance, getDistances, getRandom, getStyleFromRgb, rangeColorToRgb, } from \"tsparticles-engine\";\nexport function drawLinkLine(params) {\n    let drawn = false;\n    const { begin, end, maxDistance, context, canvasSize, width, backgroundMask, colorLine, opacity, links } = params;\n    if (getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (links.warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = getDistances(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = getDistances(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    const { shadow } = links;\n    if (shadow.enable) {\n        const shadowColor = rangeColorToRgb(shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexport function drawLinkTriangle(params) {\n    const { context, pos1, pos2, pos3, backgroundMask, colorTriangle, opacityTriangle } = params;\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\nexport function getLinkKey(ids) {\n    ids.sort((a, b) => a - b);\n    return ids.join(\"_\");\n}\nexport function setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map((t) => t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = getRandom();\n        dictionary.set(key, res);\n    }\n    return res;\n}\n","import { getDistance, getLinkColor, getRandom, getRangeValue, rangeColorToRgb, } from \"tsparticles-engine\";\nimport { drawLinkLine, drawLinkTriangle, setLinkFrequency } from \"./Utils\";\nexport class LinkInstance {\n    constructor(container) {\n        this.container = container;\n        this._drawLinkLine = (p1, link) => {\n            const p1LinksOptions = p1.options.links;\n            if (!p1LinksOptions?.enable) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n            let opacity = link.opacity;\n            container.canvas.draw((ctx) => {\n                let colorLine;\n                const twinkle = p1.options.twinkle?.lines;\n                if (twinkle?.enable) {\n                    const twinkleFreq = twinkle.frequency, twinkleRgb = rangeColorToRgb(twinkle.color), twinkling = getRandom() < twinkleFreq;\n                    if (twinkling && twinkleRgb) {\n                        colorLine = twinkleRgb;\n                        opacity = getRangeValue(twinkle.opacity);\n                    }\n                }\n                if (!colorLine) {\n                    const linkColor = p1LinksOptions.id !== undefined\n                        ? container.particles.linksColors.get(p1LinksOptions.id)\n                        : container.particles.linksColor;\n                    colorLine = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorLine) {\n                    return;\n                }\n                const width = p1.retina.linksWidth ?? 0, maxDistance = p1.retina.linksDistance ?? 0, { backgroundMask } = options;\n                drawLinkLine({\n                    context: ctx,\n                    width,\n                    begin: pos1,\n                    end: pos2,\n                    maxDistance,\n                    canvasSize: container.canvas.size,\n                    links: p1LinksOptions,\n                    backgroundMask: backgroundMask,\n                    colorLine,\n                    opacity,\n                });\n            });\n        };\n        this._drawLinkTriangle = (p1, link1, link2) => {\n            const linksOptions = p1.options.links;\n            if (!linksOptions?.enable) {\n                return;\n            }\n            const triangleOptions = linksOptions.triangles;\n            if (!triangleOptions.enable) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, opacityTriangle = triangleOptions.opacity ?? (link1.opacity + link2.opacity) / 2;\n            if (opacityTriangle <= 0) {\n                return;\n            }\n            container.canvas.draw((ctx) => {\n                const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = p1.retina.linksDistance ?? 0;\n                if (getDistance(pos1, pos2) > linksDistance ||\n                    getDistance(pos3, pos2) > linksDistance ||\n                    getDistance(pos3, pos1) > linksDistance) {\n                    return;\n                }\n                let colorTriangle = rangeColorToRgb(triangleOptions.color);\n                if (!colorTriangle) {\n                    const linkColor = linksOptions.id !== undefined\n                        ? container.particles.linksColors.get(linksOptions.id)\n                        : container.particles.linksColor;\n                    colorTriangle = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorTriangle) {\n                    return;\n                }\n                drawLinkTriangle({\n                    context: ctx,\n                    pos1,\n                    pos2,\n                    pos3,\n                    backgroundMask: options.backgroundMask,\n                    colorTriangle,\n                    opacityTriangle,\n                });\n            });\n        };\n        this._drawTriangles = (options, p1, link, p1Links) => {\n            const p2 = link.destination;\n            if (!(options.links?.triangles.enable && p2.options.links?.triangles.enable)) {\n                return;\n            }\n            const vertices = p2.links?.filter((t) => {\n                const linkFreq = this._getLinkFrequency(p2, t.destination);\n                return (p2.options.links &&\n                    linkFreq <= p2.options.links.frequency &&\n                    p1Links.findIndex((l) => l.destination === t.destination) >= 0);\n            });\n            if (!vertices?.length) {\n                return;\n            }\n            for (const vertex of vertices) {\n                const p3 = vertex.destination, triangleFreq = this._getTriangleFrequency(p1, p2, p3);\n                if (triangleFreq > options.links.triangles.frequency) {\n                    continue;\n                }\n                this._drawLinkTriangle(p1, link, vertex);\n            }\n        };\n        this._getLinkFrequency = (p1, p2) => {\n            return setLinkFrequency([p1, p2], this._freqs.links);\n        };\n        this._getTriangleFrequency = (p1, p2, p3) => {\n            return setLinkFrequency([p1, p2, p3], this._freqs.triangles);\n        };\n        this._freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n    }\n    drawParticle(context, particle) {\n        const { links, options } = particle;\n        if (!links || links.length <= 0) {\n            return;\n        }\n        const p1Links = links.filter((l) => options.links && this._getLinkFrequency(particle, l.destination) <= options.links.frequency);\n        for (const link of p1Links) {\n            this._drawTriangles(options, particle, link, p1Links);\n            if (link.opacity > 0 && (particle.retina.linksWidth ?? 0) > 0) {\n                this._drawLinkLine(particle, link);\n            }\n        }\n    }\n    async init() {\n        this._freqs.links = new Map();\n        this._freqs.triangles = new Map();\n    }\n    particleCreated(particle) {\n        particle.links = [];\n        if (!particle.options.links) {\n            return;\n        }\n        const ratio = this.container.retina.pixelRatio, { retina } = particle, { distance, width } = particle.options.links;\n        retina.linksDistance = distance * ratio;\n        retina.linksWidth = width * ratio;\n    }\n    particleDestroyed(particle) {\n        particle.links = [];\n    }\n}\n","import { LinkInstance } from \"./LinkInstance\";\nclass LinksPlugin {\n    constructor() {\n        this.id = \"links\";\n    }\n    getPlugin(container) {\n        return new LinkInstance(container);\n    }\n    loadOptions() {\n    }\n    needsPlugin() {\n        return true;\n    }\n}\nexport async function loadLinksPlugin(engine, refresh = true) {\n    const plugin = new LinksPlugin();\n    await engine.addPlugin(plugin, refresh);\n}\n","import { loadLinksInteraction } from \"./interaction\";\nimport { loadLinksPlugin } from \"./plugin\";\nexport async function loadParticlesLinksInteraction(engine, refresh = true) {\n    await loadLinksInteraction(engine, refresh);\n    await loadLinksPlugin(engine, refresh);\n}\nexport * from \"./Options/Classes/Links\";\nexport * from \"./Options/Classes/LinksShadow\";\nexport * from \"./Options/Classes/LinksTriangle\";\nexport * from \"./Options/Interfaces/ILinks\";\nexport * from \"./Options/Interfaces/ILinksShadow\";\nexport * from \"./Options/Interfaces/ILinksTriangle\";\n","import { Linker } from \"./Linker\";\nexport async function loadLinksInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesLinks\", (container) => new Linker(container), refresh);\n}\n","import { getRangeValue } from \"tsparticles-engine\";\nexport class PolygonDrawerBase {\n    draw(context, particle, radius) {\n        const start = this.getCenter(particle, radius), side = this.getSidesData(particle, radius), sideCount = side.count.numerator * side.count.denominator, decimalSides = side.count.numerator / side.count.denominator, interiorAngleDegrees = (180 * (decimalSides - 2)) / decimalSides, interiorAngle = Math.PI - (Math.PI * interiorAngleDegrees) / 180;\n        if (!context) {\n            return;\n        }\n        context.beginPath();\n        context.translate(start.x, start.y);\n        context.moveTo(0, 0);\n        for (let i = 0; i < sideCount; i++) {\n            context.lineTo(side.length, 0);\n            context.translate(side.length, 0);\n            context.rotate(interiorAngle);\n        }\n    }\n    getSidesCount(particle) {\n        const polygon = particle.shapeData;\n        return Math.round(getRangeValue(polygon?.sides ?? polygon?.nb_sides ?? 5));\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class PolygonDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius / (particle.sides / 3.5),\n            y: -radius / (2.66 / 3.5),\n        };\n    }\n    getSidesData(particle, radius) {\n        const sides = particle.sides;\n        return {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: (radius * 2.66) / (sides / 3),\n        };\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class TriangleDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius,\n            y: radius / 1.66,\n        };\n    }\n    getSidesCount() {\n        return 3;\n    }\n    getSidesData(particle, radius) {\n        return {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: radius * 2,\n        };\n    }\n}\n","import { PolygonDrawer } from \"./PolygonDrawer\";\nimport { TriangleDrawer } from \"./TriangleDrawer\";\nexport async function loadGenericPolygonShape(engine, refresh = true) {\n    await engine.addShape(\"polygon\", new PolygonDrawer(), refresh);\n}\nexport async function loadTriangleShape(engine, refresh = true) {\n    await engine.addShape(\"triangle\", new TriangleDrawer(), refresh);\n}\nexport async function loadPolygonShape(engine, refresh = true) {\n    await loadGenericPolygonShape(engine, refresh);\n    await loadTriangleShape(engine, refresh);\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom, } from \"tsparticles-engine\";\nimport { RotateAnimation } from \"./RotateAnimation\";\nexport class Rotate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RotateAnimation();\n        this.direction = \"clockwise\";\n        this.path = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.animation.load(data.animation);\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n    }\n}\n","import { getRandom, getRangeValue, } from \"tsparticles-engine\";\nimport { Rotate } from \"./Options/Classes/Rotate\";\nfunction updateRotate(particle, delta) {\n    const rotate = particle.rotate, rotateOptions = particle.options.rotate;\n    if (!rotate || !rotateOptions) {\n        return;\n    }\n    const rotateAnimation = rotateOptions.animation, speed = (rotate.velocity ?? 0) * delta.factor, max = 2 * Math.PI, decay = rotate.decay ?? 1;\n    if (!rotateAnimation.enable) {\n        return;\n    }\n    switch (rotate.status) {\n        case \"increasing\":\n            rotate.value += speed;\n            if (rotate.value > max) {\n                rotate.value -= max;\n            }\n            break;\n        case \"decreasing\":\n        default:\n            rotate.value -= speed;\n            if (rotate.value < 0) {\n                rotate.value += max;\n            }\n            break;\n    }\n    if (rotate.velocity && decay !== 1) {\n        rotate.velocity *= decay;\n    }\n}\nexport class RotateUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        if (!rotateOptions) {\n            return;\n        }\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: (getRangeValue(rotateOptions.value) * Math.PI) / 180,\n        };\n        particle.pathRotation = rotateOptions.path;\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            rotateDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (rotateDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.rotate.status = \"decreasing\";\n                break;\n            case \"clockwise\":\n                particle.rotate.status = \"increasing\";\n                break;\n        }\n        const rotateAnimation = rotateOptions.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.decay = 1 - getRangeValue(rotateAnimation.decay);\n            particle.rotate.velocity =\n                (getRangeValue(rotateAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= getRandom();\n            }\n        }\n        particle.rotation = particle.rotate.value;\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        if (!rotate) {\n            return false;\n        }\n        return !particle.destroyed && !particle.spawning && rotate.animation.enable && !rotate.path;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.rotate) {\n            options.rotate = new Rotate();\n        }\n        for (const source of sources) {\n            options.rotate.load(source?.rotate);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRotate(particle, delta);\n        particle.rotation = particle.rotate?.value ?? 0;\n    }\n}\n","const fixFactor = Math.sqrt(2);\nexport class SquareDrawer {\n    draw(context, particle, radius) {\n        const fixedRadius = radius / fixFactor, fixedDiameter = fixedRadius * 2;\n        context.rect(-fixedRadius, -fixedRadius, fixedDiameter, fixedDiameter);\n    }\n    getSidesCount() {\n        return 4;\n    }\n}\n","import { getRangeValue } from \"tsparticles-engine\";\nexport class StarDrawer {\n    draw(context, particle, radius) {\n        const sides = particle.sides, inset = particle.starInset ?? 2;\n        context.moveTo(0, 0 - radius);\n        for (let i = 0; i < sides; i++) {\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius * inset);\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius);\n        }\n    }\n    getSidesCount(particle) {\n        const star = particle.shapeData;\n        return Math.round(getRangeValue(star?.sides ?? star?.nb_sides ?? 5));\n    }\n    particleInit(container, particle) {\n        const star = particle.shapeData, inset = getRangeValue(star?.inset ?? 2);\n        particle.starInset = inset;\n    }\n}\n","import { randomInRange, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        ((colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0))) {\n        return;\n    }\n    if (!colorValue.time) {\n        colorValue.time = 0;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        colorValue.time += delta.value;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nexport function updateStrokeColor(particle, delta) {\n    if (!particle.strokeColor || !particle.strokeAnimation) {\n        return;\n    }\n    const { h, s, l } = particle.strokeColor, { h: hAnimation, s: sAnimation, l: lAnimation } = particle.strokeAnimation;\n    if (h) {\n        updateColorValue(delta, h, hAnimation, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, sAnimation, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, lAnimation, 100, true);\n    }\n}\n","import { getHslAnimationFromHsl, getRangeValue, itemFromSingleOrMultiple, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { updateStrokeColor } from \"./Utils\";\nexport class StrokeColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, options = particle.options;\n        const stroke = itemFromSingleOrMultiple(options.stroke, particle.id, options.reduceDuplicates);\n        particle.strokeWidth = getRangeValue(stroke.width) * container.retina.pixelRatio;\n        particle.strokeOpacity = getRangeValue(stroke.opacity ?? 1);\n        particle.strokeAnimation = stroke.color?.animation;\n        const strokeHslColor = rangeColorToHsl(stroke.color) ?? particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, particle.strokeAnimation, container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const color = particle.strokeAnimation, { strokeColor } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((strokeColor?.h.value !== undefined && strokeColor.h.enable) ||\n                (strokeColor?.s.value !== undefined && strokeColor.s.enable) ||\n                (strokeColor?.l.value !== undefined && strokeColor.l.enable)));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateStrokeColor(particle, delta);\n    }\n}\n","import { executeOnSingleOrMultiple, isInArray, itemFromSingleOrMultiple, loadFont, } from \"tsparticles-engine\";\nexport const validTypes = [\"text\", \"character\", \"char\"];\nexport class TextDrawer {\n    draw(context, particle, radius, opacity) {\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        if (particle.text === undefined) {\n            particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n        }\n        const text = particle.text, style = character.style ?? \"\", weight = character.weight ?? \"400\", size = Math.round(radius) * 2, font = character.font ?? \"Verdana\", fill = particle.fill, offsetX = (text.length * radius) / 2;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -offsetX,\n            y: radius / 2,\n        };\n        context.globalAlpha = opacity;\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (validTypes.find((t) => isInArray(t, options.particles.shape.type))) {\n            const shapeOptions = validTypes\n                .map((t) => options.particles.shape.options[t])\n                .find((t) => !!t), promises = [];\n            executeOnSingleOrMultiple(shapeOptions, (shape) => {\n                promises.push(loadFont(shape.font, shape.weight));\n            });\n            await Promise.all(promises);\n        }\n    }\n    particleInit(container, particle) {\n        if (!particle.shape || !validTypes.includes(particle.shape)) {\n            return;\n        }\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n    }\n}\n","import { initPjs } from \"tsparticles-particles.js\";\nimport { loadBasic } from \"tsparticles-basic\";\nimport { loadEasingQuadPlugin } from \"tsparticles-plugin-easing-quad\";\nimport { loadExternalAttractInteraction } from \"tsparticles-interaction-external-attract\";\nimport { loadExternalBounceInteraction } from \"tsparticles-interaction-external-bounce\";\nimport { loadExternalBubbleInteraction } from \"tsparticles-interaction-external-bubble\";\nimport { loadExternalConnectInteraction } from \"tsparticles-interaction-external-connect\";\nimport { loadExternalGrabInteraction } from \"tsparticles-interaction-external-grab\";\nimport { loadExternalPauseInteraction } from \"tsparticles-interaction-external-pause\";\nimport { loadExternalPushInteraction } from \"tsparticles-interaction-external-push\";\nimport { loadExternalRemoveInteraction } from \"tsparticles-interaction-external-remove\";\nimport { loadExternalRepulseInteraction } from \"tsparticles-interaction-external-repulse\";\nimport { loadExternalSlowInteraction } from \"tsparticles-interaction-external-slow\";\nimport { loadImageShape } from \"tsparticles-shape-image\";\nimport { loadLifeUpdater } from \"tsparticles-updater-life\";\nimport { loadLineShape } from \"tsparticles-shape-line\";\nimport { loadParallaxMover } from \"tsparticles-move-parallax\";\nimport { loadParticlesAttractInteraction } from \"tsparticles-interaction-particles-attract\";\nimport { loadParticlesCollisionsInteraction } from \"tsparticles-interaction-particles-collisions\";\nimport { loadParticlesLinksInteraction } from \"tsparticles-interaction-particles-links\";\nimport { loadPolygonShape } from \"tsparticles-shape-polygon\";\nimport { loadRotateUpdater } from \"tsparticles-updater-rotate\";\nimport { loadSquareShape } from \"tsparticles-shape-square\";\nimport { loadStarShape } from \"tsparticles-shape-star\";\nimport { loadStrokeColorUpdater } from \"tsparticles-updater-stroke-color\";\nimport { loadTextShape } from \"tsparticles-shape-text\";\nexport async function loadSlim(engine, refresh = true) {\n    initPjs(engine);\n    await loadParallaxMover(engine, false);\n    await loadExternalAttractInteraction(engine, false);\n    await loadExternalBounceInteraction(engine, false);\n    await loadExternalBubbleInteraction(engine, false);\n    await loadExternalConnectInteraction(engine, false);\n    await loadExternalGrabInteraction(engine, false);\n    await loadExternalPauseInteraction(engine, false);\n    await loadExternalPushInteraction(engine, false);\n    await loadExternalRemoveInteraction(engine, false);\n    await loadExternalRepulseInteraction(engine, false);\n    await loadExternalSlowInteraction(engine, false);\n    await loadParticlesAttractInteraction(engine, false);\n    await loadParticlesCollisionsInteraction(engine, false);\n    await loadParticlesLinksInteraction(engine, false);\n    await loadEasingQuadPlugin();\n    await loadImageShape(engine, false);\n    await loadLineShape(engine, false);\n    await loadPolygonShape(engine, false);\n    await loadSquareShape(engine, false);\n    await loadStarShape(engine, false);\n    await loadTextShape(engine, false);\n    await loadLifeUpdater(engine, false);\n    await loadRotateUpdater(engine, false);\n    await loadStrokeColorUpdater(engine, false);\n    await loadBasic(engine, refresh);\n}\n","import { ParallaxMover } from \"./ParallaxMover\";\nexport async function loadParallaxMover(engine, refresh = true) {\n    await engine.addMover(\"parallax\", () => new ParallaxMover(), refresh);\n}\n","import { Attractor } from \"./Attractor\";\nexport async function loadExternalAttractInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalAttract\", (container) => new Attractor(engine, container), refresh);\n}\nexport * from \"./Options/Classes/Attract\";\nexport * from \"./Options/Interfaces/IAttract\";\n","import { Bouncer } from \"./Bouncer\";\nexport async function loadExternalBounceInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalBounce\", (container) => new Bouncer(container), refresh);\n}\nexport * from \"./Options/Classes/Bounce\";\nexport * from \"./Options/Interfaces/IBounce\";\n","import { Bubbler } from \"./Bubbler\";\nexport async function loadExternalBubbleInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalBubble\", (container) => new Bubbler(container), refresh);\n}\nexport * from \"./Options/Classes/BubbleBase\";\nexport * from \"./Options/Classes/BubbleDiv\";\nexport * from \"./Options/Classes/Bubble\";\nexport * from \"./Options/Interfaces/IBubbleBase\";\nexport * from \"./Options/Interfaces/IBubbleDiv\";\nexport * from \"./Options/Interfaces/IBubble\";\n","import { Connector } from \"./Connector\";\nexport async function loadExternalConnectInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalConnect\", (container) => new Connector(container), refresh);\n}\nexport * from \"./Options/Classes/Connect\";\nexport * from \"./Options/Classes/ConnectLinks\";\nexport * from \"./Options/Interfaces/IConnect\";\nexport * from \"./Options/Interfaces/IConnectLinks\";\n","import { Grabber } from \"./Grabber\";\nexport async function loadExternalGrabInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalGrab\", (container) => new Grabber(container), refresh);\n}\nexport * from \"./Options/Classes/Grab\";\nexport * from \"./Options/Classes/GrabLinks\";\nexport * from \"./Options/Interfaces/IGrab\";\nexport * from \"./Options/Interfaces/IGrabLinks\";\n","import { Pauser } from \"./Pauser\";\nexport async function loadExternalPauseInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalPause\", (container) => new Pauser(container), refresh);\n}\n","import { Pusher } from \"./Pusher\";\nexport async function loadExternalPushInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalPush\", (container) => new Pusher(container), refresh);\n}\nexport * from \"./Options/Classes/Push\";\nexport * from \"./Options/Interfaces/IPush\";\n","import { Remover } from \"./Remover\";\nexport async function loadExternalRemoveInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalRemove\", (container) => new Remover(container), refresh);\n}\nexport * from \"./Options/Classes/Remove\";\nexport * from \"./Options/Interfaces/IRemove\";\n","import { Repulser } from \"./Repulser\";\nexport async function loadExternalRepulseInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalRepulse\", (container) => new Repulser(engine, container), refresh);\n}\nexport * from \"./Options/Classes/RepulseBase\";\nexport * from \"./Options/Classes/RepulseDiv\";\nexport * from \"./Options/Classes/Repulse\";\nexport * from \"./Options/Interfaces/IRepulseBase\";\nexport * from \"./Options/Interfaces/IRepulseDiv\";\nexport * from \"./Options/Interfaces/IRepulse\";\n","import { Slower } from \"./Slower\";\nexport async function loadExternalSlowInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalSlow\", (container) => new Slower(container), refresh);\n}\nexport * from \"./Options/Classes/Slow\";\nexport * from \"./Options/Interfaces/ISlow\";\n","import { Attractor } from \"./Attractor\";\nexport async function loadParticlesAttractInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesAttract\", (container) => new Attractor(container), refresh);\n}\n","import { Collider } from \"./Collider\";\nexport async function loadParticlesCollisionsInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesCollisions\", (container) => new Collider(container), refresh);\n}\n","import { addEasing } from \"tsparticles-engine\";\nexport async function loadEasingQuadPlugin() {\n    addEasing(\"ease-in-quad\", (value) => value ** 2);\n    addEasing(\"ease-out-quad\", (value) => 1 - (1 - value) ** 2);\n    addEasing(\"ease-in-out-quad\", (value) => (value < 0.5 ? 2 * value ** 2 : 1 - (-2 * value + 2) ** 2 / 2));\n}\n","import { LineDrawer } from \"./LineDrawer\";\nexport async function loadLineShape(engine, refresh = true) {\n    await engine.addShape(\"line\", new LineDrawer(), refresh);\n}\n","import { SquareDrawer } from \"./SquareDrawer\";\nexport async function loadSquareShape(engine, refresh = true) {\n    await engine.addShape([\"edge\", \"square\"], new SquareDrawer(), refresh);\n}\n","import { StarDrawer } from \"./StarDrawer\";\nexport async function loadStarShape(engine, refresh = true) {\n    await engine.addShape(\"star\", new StarDrawer(), refresh);\n}\n","import { TextDrawer, validTypes } from \"./TextDrawer\";\nexport async function loadTextShape(engine, refresh = true) {\n    await engine.addShape(validTypes, new TextDrawer(), refresh);\n}\n","import { LifeUpdater } from \"./LifeUpdater\";\nexport async function loadLifeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"life\", (container) => new LifeUpdater(container), refresh);\n}\n","import { RotateUpdater } from \"./RotateUpdater\";\nexport async function loadRotateUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"rotate\", (container) => new RotateUpdater(container), refresh);\n}\n","import { StrokeColorUpdater } from \"./StrokeColorUpdater\";\nexport async function loadStrokeColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"strokeColor\", (container) => new StrokeColorUpdater(container), refresh);\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class TiltAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nimport { TiltAnimation } from \"./TiltAnimation\";\nexport class Tilt extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new TiltAnimation();\n        this.direction = \"clockwise\";\n        this.enable = false;\n        this.value = 0;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.animation.load(data.animation);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { getRandom, getRangeValue, } from \"tsparticles-engine\";\nimport { Tilt } from \"./Options/Classes/Tilt\";\nimport { updateTilt } from \"./Utils\";\nexport class TiltUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    getTransformValues(particle) {\n        const tilt = particle.tilt?.enable && particle.tilt;\n        return {\n            b: tilt ? Math.cos(tilt.value) * tilt.cosDirection : undefined,\n            c: tilt ? Math.sin(tilt.value) * tilt.sinDirection : undefined,\n        };\n    }\n    init(particle) {\n        const tiltOptions = particle.options.tilt;\n        if (!tiltOptions) {\n            return;\n        }\n        particle.tilt = {\n            enable: tiltOptions.enable,\n            value: (getRangeValue(tiltOptions.value) * Math.PI) / 180,\n            sinDirection: getRandom() >= 0.5 ? 1 : -1,\n            cosDirection: getRandom() >= 0.5 ? 1 : -1,\n        };\n        let tiltDirection = tiltOptions.direction;\n        if (tiltDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            tiltDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (tiltDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.tilt.status = \"decreasing\";\n                break;\n            case \"clockwise\":\n                particle.tilt.status = \"increasing\";\n                break;\n        }\n        const tiltAnimation = particle.options.tilt?.animation;\n        if (tiltAnimation?.enable) {\n            particle.tilt.decay = 1 - getRangeValue(tiltAnimation.decay);\n            particle.tilt.velocity = (getRangeValue(tiltAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!tiltAnimation.sync) {\n                particle.tilt.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        const tiltAnimation = particle.options.tilt?.animation;\n        return !particle.destroyed && !particle.spawning && !!tiltAnimation?.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.tilt) {\n            options.tilt = new Tilt();\n        }\n        for (const source of sources) {\n            options.tilt.load(source?.tilt);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateTilt(particle, delta);\n    }\n}\n","export function updateTilt(particle, delta) {\n    if (!particle.tilt || !particle.options.tilt) {\n        return;\n    }\n    const tilt = particle.options.tilt, tiltAnimation = tilt.animation, speed = (particle.tilt.velocity ?? 0) * delta.factor, max = 2 * Math.PI, decay = particle.tilt.decay ?? 1;\n    if (!tiltAnimation.enable) {\n        return;\n    }\n    switch (particle.tilt.status) {\n        case \"increasing\":\n            particle.tilt.value += speed;\n            if (particle.tilt.value > max) {\n                particle.tilt.value -= max;\n            }\n            break;\n        case \"decreasing\":\n        default:\n            particle.tilt.value -= speed;\n            if (particle.tilt.value < 0) {\n                particle.tilt.value += max;\n            }\n            break;\n    }\n    if (particle.tilt.velocity && decay !== 1) {\n        particle.tilt.velocity *= decay;\n    }\n}\n","import { OptionsColor, setRangeValue, } from \"tsparticles-engine\";\nexport class TwinkleValues {\n    constructor() {\n        this.enable = false;\n        this.frequency = 0.05;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { TwinkleValues } from \"./TwinkleValues\";\nexport class Twinkle {\n    constructor() {\n        this.lines = new TwinkleValues();\n        this.particles = new TwinkleValues();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.lines.load(data.lines);\n        this.particles.load(data.particles);\n    }\n}\n","import { getRandom, getRangeValue, getStyleFromHsl, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { Twinkle } from \"./Options/Classes/Twinkle\";\nexport class TwinkleUpdater {\n    getColorStyles(particle, context, radius, opacity) {\n        const pOptions = particle.options, twinkleOptions = pOptions.twinkle;\n        if (!twinkleOptions) {\n            return {};\n        }\n        const twinkle = twinkleOptions.particles, twinkling = twinkle.enable && getRandom() < twinkle.frequency, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, twinklingOpacity = twinkling ? getRangeValue(twinkle.opacity) * zOpacityFactor : opacity, twinkleRgb = rangeColorToHsl(twinkle.color), twinkleStyle = twinkleRgb ? getStyleFromHsl(twinkleRgb, twinklingOpacity) : undefined, res = {}, needsTwinkle = twinkling && twinkleStyle;\n        res.fill = needsTwinkle ? twinkleStyle : undefined;\n        res.stroke = needsTwinkle ? twinkleStyle : undefined;\n        return res;\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        const pOptions = particle.options, twinkleOptions = pOptions.twinkle;\n        if (!twinkleOptions) {\n            return false;\n        }\n        return twinkleOptions.particles.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.twinkle) {\n            options.twinkle = new Twinkle();\n        }\n        for (const source of sources) {\n            options.twinkle.load(source?.twinkle);\n        }\n    }\n    update() {\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class WobbleSpeed {\n    constructor() {\n        this.angle = 50;\n        this.move = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.angle !== undefined) {\n            this.angle = setRangeValue(data.angle);\n        }\n        if (data.move !== undefined) {\n            this.move = setRangeValue(data.move);\n        }\n    }\n}\n","import { isNumber, setRangeValue, } from \"tsparticles-engine\";\nimport { WobbleSpeed } from \"./WobbleSpeed\";\nexport class Wobble {\n    constructor() {\n        this.distance = 5;\n        this.enable = false;\n        this.speed = new WobbleSpeed();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            if (isNumber(data.speed)) {\n                this.speed.load({ angle: data.speed });\n            }\n            else {\n                const rangeSpeed = data.speed;\n                if (rangeSpeed.min !== undefined) {\n                    this.speed.load({ angle: rangeSpeed });\n                }\n                else {\n                    this.speed.load(data.speed);\n                }\n            }\n        }\n    }\n}\n","import { getRandom, getRangeValue, } from \"tsparticles-engine\";\nimport { Wobble } from \"./Options/Classes/Wobble\";\nimport { updateWobble } from \"./Utils\";\nexport class WobbleUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const wobbleOpt = particle.options.wobble;\n        if (wobbleOpt?.enable) {\n            particle.wobble = {\n                angle: getRandom() * Math.PI * 2,\n                angleSpeed: getRangeValue(wobbleOpt.speed.angle) / 360,\n                moveSpeed: getRangeValue(wobbleOpt.speed.move) / 10,\n            };\n        }\n        else {\n            particle.wobble = {\n                angle: 0,\n                angleSpeed: 0,\n                moveSpeed: 0,\n            };\n        }\n        particle.retina.wobbleDistance = getRangeValue(wobbleOpt?.distance ?? 0) * this.container.retina.pixelRatio;\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning && !!particle.options.wobble?.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.wobble) {\n            options.wobble = new Wobble();\n        }\n        for (const source of sources) {\n            options.wobble.load(source?.wobble);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateWobble(particle, delta);\n    }\n}\n","export function updateWobble(particle, delta) {\n    const { wobble: wobbleOptions } = particle.options, { wobble } = particle;\n    if (!wobbleOptions?.enable || !wobble) {\n        return;\n    }\n    const angleSpeed = wobble.angleSpeed * delta.factor, moveSpeed = wobble.moveSpeed * delta.factor, distance = (moveSpeed * ((particle.retina.wobbleDistance ?? 0) * delta.factor)) / (1000 / 60), max = 2 * Math.PI, { position } = particle;\n    wobble.angle += angleSpeed;\n    if (wobble.angle > max) {\n        wobble.angle -= max;\n    }\n    position.x += distance * Math.cos(wobble.angle);\n    position.y += distance * Math.abs(Math.sin(wobble.angle));\n}\n","import { loadAbsorbersPlugin } from \"tsparticles-plugin-absorbers\";\nimport { loadDestroyUpdater } from \"tsparticles-updater-destroy\";\nimport { loadEmittersPlugin } from \"tsparticles-plugin-emitters\";\nimport { loadExternalTrailInteraction } from \"tsparticles-interaction-external-trail\";\nimport { loadRollUpdater } from \"tsparticles-updater-roll\";\nimport { loadSlim } from \"tsparticles-slim\";\nimport { loadTiltUpdater } from \"tsparticles-updater-tilt\";\nimport { loadTwinkleUpdater } from \"tsparticles-updater-twinkle\";\nimport { loadWobbleUpdater } from \"tsparticles-updater-wobble\";\nexport async function loadFull(engine, refresh = true) {\n    await loadDestroyUpdater(engine, false);\n    await loadRollUpdater(engine, false);\n    await loadTiltUpdater(engine, false);\n    await loadTwinkleUpdater(engine, false);\n    await loadWobbleUpdater(engine, false);\n    await loadExternalTrailInteraction(engine, false);\n    await loadAbsorbersPlugin(engine, false);\n    await loadEmittersPlugin(engine, false);\n    await loadSlim(engine, refresh);\n}\n","import { DestroyUpdater } from \"./DestroyUpdater\";\nexport async function loadDestroyUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"destroy\", (container) => new DestroyUpdater(engine, container), refresh);\n}\n","import { RollUpdater } from \"./RollUpdater\";\nexport async function loadRollUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"roll\", () => new RollUpdater(), refresh);\n}\n","import { TiltUpdater } from \"./TiltUpdater\";\nexport async function loadTiltUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"tilt\", (container) => new TiltUpdater(container), refresh);\n}\n","import { TwinkleUpdater } from \"./TwinkleUpdater\";\nexport async function loadTwinkleUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"twinkle\", () => new TwinkleUpdater(), refresh);\n}\n","import { WobbleUpdater } from \"./WobbleUpdater\";\nexport async function loadWobbleUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"wobble\", (container) => new WobbleUpdater(container), refresh);\n}\n","import { TrailMaker } from \"./TrailMaker\";\nexport async function loadExternalTrailInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalTrail\", (container) => new TrailMaker(container), refresh);\n}\nexport * from \"./Options/Classes/Trail\";\nexport * from \"./Options/Interfaces/ITrail\";\n"],"names":["isObject","val","deepCompare","obj1","obj2","excludeKeyFn","arguments","length","undefined","keys1","Object","keys","filter","key","keys2","value1","value2","Array","isArray","deepCompareArrays","arr1","arr2","i","val1","val2","defaultId","Particles","Component","constructor","props","super","this","state","init","library","destroy","setState","shouldComponentUpdate","nextProps","_nextProps$options","_this$props$options","nextOptions","options","params","currentOptions","url","id","canvasClassName","className","height","width","style","loaded","startsWith","componentDidUpdate","refresh","forceUpdate","then","componentDidMount","tsParticles","async","loadParticles","componentWillUnmount","render","React","_ref","_this$props$id","_this$props$options2","defaultProps","container","load","current","Circle","Range","x","y","radius","contains","point","getDistance","position","intersects","range","pos1","pos2","distPos","Math","abs","r","sqrt","Rectangle","size","pow","generatedAttribute","mouseDownEvent","mouseUpEvent","mouseLeaveEvent","mouseOutEvent","mouseMoveEvent","touchStartEvent","touchEndEvent","touchMoveEvent","touchCancelEvent","resizeEvent","visibilityChangeEvent","errorPrefix","w","h","pos","size2","w2","h2","Vector","Vector3d","xOrCoords","origin","create","clone","source","z","_updateFromAngle","angle","cos","sin","isNumber","coords3d","Error","concat","atan2","getLengthSq","add","v","addTo","copy","distanceTo","sub","distanceToSq","div","n","divTo","mult","multTo","normalize","rotate","setTo","c","v3d","subFrom","ColorAnimation","count","enable","offset","speed","delay","decay","sync","data","setRangeValue","HslAnimation","s","l","AnimatableColor","OptionsColor","animation","color","isString","value","colorAnimation","AnimationOptions","RangedAnimationOptions","mode","startValue","minimumValue","Random","ValueWithRandom","random","isBoolean","drawLine","context","begin","end","beginPath","moveTo","lineTo","closePath","drawTriangle","p1","p2","p3","paintBase","dimension","baseColor","fillStyle","fillRect","paintImage","image","opacity","globalAlpha","drawImage","clear","clearRect","drawParticle","_transform$a","_transform$b","_transform$c","_transform$d","_particle$strokeWidth","particle","delta","colorStyles","backgroundMask","composite","shadow","transform","getPosition","rotation","pathRotation","velocity","rotateData","transformData","a","b","d","setTransform","globalCompositeOperation","shadowColor","shadowBlur","blur","getStyleFromRgb","shadowOffsetX","shadowOffsetY","fill","strokeWidth","lineWidth","stroke","strokeStyle","shape","drawer","drawers","get","draw","retina","pixelRatio","drawShape","close","afterEffect","drawShapeAfterEffect","drawPlugin","plugin","drawParticlePlugin","alterHsl","type","randomColorValue","midColorValue","colorManagers","Map","addColorManager","manager","set","hue2rgb","p","q","t","stringToRgba","input","stringPrefix","parseString","hexFixed","replace","_","g","result","exec","parseInt","rangeColorToRgb","index","useIndex","colorToRgb","itemFromArray","res","handleRangeColor","getRandomRgbColor","stringToRgb","handleColor","rangeColorToHsl","rgb","rgbToHsl","r1","g1","b1","max","min","hslToRgb","hsl","hslPercent","floor","hslaToRgba","hsla","rgbResult","fixedMin","randomInRange","getStyleFromHsl","colorMix","color1","color2","size1","rgb1","rgb2","mix","getLinkColor","linkColor","_p1$getFillColor","_p2$getFillColor","sourceColor","getFillColor","getStrokeColor","destColor","getRadius","hslColor","getLinkRandomColor","optColor","blink","consent","getHslFromAnimation","getHslAnimationFromHsl","animationOptions","reduceFactor","resColor","setColorAnimation","colorValue","getRangeValue","status","loops","maxLoops","time","delayTime","getRandom","initialValue","_random","easings","addEasing","name","easing","getEasing","clamp","num","comp1","comp2","weight1","weight2","getRangeMax","getRangeMin","getValue","getDistances","pointA","pointB","dx","dy","distance","getParticleDirectionAngle","direction","center","PI","getParticleBaseVelocity","baseVelocity","collisionVelocity","v1","v2","m1","m2","calcPositionOrRandomFromSize","_data$position$x","_data$position","_data$position$y","_data$position2","calcPositionOrRandomFromSizeRanged","_data$position3","_data$position4","calcExactPositionOrRandomFromSize","_data$position$x2","_data$position5","_data$position$y2","_data$position6","parseAlpha","endsWith","parseFloat","CollisionsAbsorb","CollisionsOverlap","retries","ParticlesBounceFactor","ParticlesBounce","horizontal","vertical","Collisions","absorb","bounce","maxSpeed","overlap","MoveAngle","MoveAttract","rotateX","rotateY","_data$rotate$x","_data$rotate","_data$rotate$y","_data$rotate2","MoveCenter","MoveGravity","acceleration","inverse","MovePath","generator","deepExtend","MoveTrailFill","MoveTrail","fillColor","OutModes","default","_data$bottom","_data$left","_data$right","_data$top","bottom","left","right","top","Spin","Move","attract","drift","gravity","path","outModes","spin","straight","trail","vibrate","warp","collisions","noise","outMode","out_mode","_data$outModes","_data$path","OpacityAnimation","opacity_min","Opacity","anim","_data$animation","ParticlesDensity","area","factor","value_area","_data$width","_data$height","ParticlesNumber","density","limit","_data$limit","Shadow","charKey","charAltKey","imageKey","imageAltKey","polygonKey","polygonAltKey","Shape","loadShape","item","mainKey","altKey","altOverride","_this$options$mainKey","itemIsArray","emptyValue","mainDifferentValues","altDifferentValues","_this$options$altKey","character","_this$options$charKey","custom","_this$options$imageKe","images","polygon","_this$options$polygon","_value","_data$options","_data$image","_this$options$shape","SizeAnimation","size_min","Size","Stroke","ZIndex","opacityRate","sizeRate","velocityRate","ParticlesOptions","engine","_engine","_container","groups","move","number","reduceDuplicates","zIndex","_data$move$collisions","_data$move","_data$move2","_data$stroke","_data$shape","group","_this$groups$group","interactivity","strokeToLoad","executeOnSingleOrMultiple","tmp","updaters","plugins","updater","loadOptions","interactors","interactor","loadParticlesOptions","_len","sourceOptionsArr","_key","sourceOptions","_len2","_key2","_logger","debug","console","error","info","log","verbose","warning","warn","getLogger","rectSideBounce","bounced","pSide","pOtherSide","rectSide","rectOtherSide","isSsr","window","document","safeMatchMedia","query","matchMedia","safeMutationObserver","callback","MutationObserver","isInArray","array","indexOf","loadFont","font","weight","fonts","arrayRandomIndex","isPointInside","bounds","inside","areBoundsInside","calculateBounds","destination","sources","sourceIsArray","destDict","map","isDivModeEnabled","divs","findItemFromSingleOrMultiple","divModeExecute","divMode","selectors","selector","singleDivModeExecute","element","matches","some","checkSelector","circleBounceDataFromParticle","mass","getMass","circleBounce","xVelocityDiff","yVelocityDiff","xDist","yDist","u1","u2","vFinal1","vFinal2","rectBounce","divBounds","resH","resV","obj","itemFromSingleOrMultiple","find","initParticleNumericAnimationValue","pxRatio","valueRange","autoStatus","getPositionOrSize","positionOrSize","canvasSize","rest","getSize","arg","isFunction","setTransformValue","newFactor","newValue","_factor$key","Canvas","_applyPostDrawUpdaters","_postDrawUpdaters","afterDraw","_applyPreDrawUpdaters","ctx","zOpacity","_preDrawUpdaters","getColorStyles","getTransformValues","updaterTransform","beforeDraw","_applyResizePlugins","_resizePlugins","resize","_getPluginParticleColors","fColor","sColor","_colorPlugins","particleFillColor","particleStrokeColor","_initCover","cover","actualOptions","coverRgb","coverColor","_coverColorStyle","_initStyle","_fullScreen","_originalStyle","_setFullScreenStyle","_resetOriginalStyle","setProperty","_initTrail","particles","trailFill","_trailFill","Promise","resolve","reject","img","createElement","addEventListener","evt","src","_paintBase","_paintImage","_repairStyle","_safeMutationObserver","observer","disconnect","initBackground","observe","attributes","originalStyle","_mutationObserver","priority","fullScreen","toString","_context","_generated","paint","stop","remove","cb","_particle$getStrokeCo","spawning","destroyed","pfColor","psColor","_particle$bubble$opac","_particle$opacity","_particle$strokeOpaci","zIndexOptions","zOpacityFactor","zIndexFactor","bubble","zStrokeOpacity","strokeOpacity","obs","records","record","attributeName","e","initUpdaters","initPlugins","background","elementStyle","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","repeat","backgroundSize","push","loadCanvas","canvas","dataset","ariaHidden","offsetHeight","offsetWidth","getContext","newSize","oldSize","started","resizeFactor","windowResize","needsRefresh","updateActualOptions","setDensity","manageListener","event","handler","addOptions","passive","capture","removeOptions","removeEventListener","EventListeners","_doMouseTouchClick","_canPush","mouseInteractivity","mouse","mousePos","clickPosition","clickTime","Date","getTime","onClick","events","handleClickMode","setTimeout","_mouseTouchFinish","_handleThemeChange","mediaEvent","defaultThemes","themeName","dark","light","theme","themes","auto","loadTheme","_handleVisibilityChange","pauseOnBlur","hidden","pageHidden","pause","getAnimationStatus","play","_handleWindowResize","_resizeTimeout","clearTimeout","_manageInteractivityListeners","mouseLeaveTmpEvent","handlers","_handlers","interactivityEl","html","canvasEl","pointerEvents","onHover","mouseMove","touchStart","touchMove","touchEndClick","mouseUp","mouseDown","touchEnd","mouseLeave","touchCancel","_manageListeners","detectType","detectsOn","_canvasEl$parentEleme","parentElement","parentNode","_manageMediaMatch","_manageResize","visibilityChange","mediaMatch","addListener","oldThemeChange","removeListener","themeChange","ResizeObserver","_resizeObserver","unobserve","entries","target","_mouseDown","clicking","downPosition","_mouseTouchClick","handled","mousePosition","clickPositionValid","_mouseTouchMove","mouseEvent","clientRect","getBoundingClientRect","clientX","clientY","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","_mouseEvent$offsetX","_mouseEvent$offsetY","_mouseEvent$offsetX2","_mouseEvent$offsetY2","_canvasRect$left","_canvasRect$top","touchEvent","lastTouch","touches","_touchEnd","from","changedTouches","touch","_touches","delete","identifier","_touchEndClick","_touchStart","performance","now","addListeners","removeListeners","Background","BackgroundMaskCover","BackgroundMask","FullScreen","ClickEvent","DivEvent","el","elementId","ids","_data$ids","Parallax","force","smooth","HoverEvent","parallax","ResizeEvent","Events","onDiv","onclick","ondiv","onhover","_data$onClick","_data$onDiv","_data$onHover","Modes","loadModeOptions","Interactivity","modes","detect_on","_data$detectsOn","ManualParticle","_data$position$mode","Responsive","maxWidth","Infinity","ThemeDefault","Theme","Options","_findDefaultTheme","_this$themes$find","_importPreset","preset","getPreset","autoPlay","detectRetina","duration","fpsLimit","manualParticles","pauseOnOutsideViewport","responsive","zLayers","backgroundMode","fps_limit","retina_detect","_data$detectRetina","_data$fpsLimit","_data$fullScreen","_this$_findDefaultThe","_this$_findDefaultThe2","optResponsive","sort","existingTheme","optTheme","setResponsive","defaultOptions","responsiveOptions","screen","availWidth","setTheme","chosenTheme","clientDarkMode","defaultTheme","InteractionManager","_interactors","getInteractors","_externalInteractors","_particleInteractors","externalInteract","isEnabled","interact","particlesInteract","reset","fixOutMode","checkModes","diameter","coord","maxCoord","setCb","Particle","overrideOptions","_this","_calcPosition","_outModes$left","_outModes$right","_outModes$top","_outModes$bottom","tryCount","pluginPos","particlePosition","exactPosition","fixHorizontal","fixVertical","_checkOverlap","_calculateVelocity","moveOptions","rad","radOffset","collisionsOptions","overlapOptions","_getRollColor","_this$roll$angle","roll","backColor","alter","backFactor","backSum","_initPosition","_this$options$move$ce","_this$options$move$ce2","zIndexValue","initialPosition","moveCenter","outType","_loadShapeData","shapeOptions","shapeData","override","unbreakable","inRange","slow","pathGenerator","particleDestroyed","_this$bubble$color","_this$bubble$radius","_this$bubble$color2","strokeColor","_shapeData$fill","_shapeData$close","_drawer","lastPathTime","misplaced","maxDistance","ignoresResizeRatio","mainOptions","particlesOptions","shapeType","overrideShapeType","pathOptions","pathDelay","getPathGenerator","addPath","initParticle","initialVelocity","moveDecay","needsSort","lastZIndex","sides","getShapeDrawer","sideCountFunc","getSidesCount","mover","movers","particleInit","particleCreated","isInsideCanvas","isVisible","Point","QuadTree","rectangle","capacity","_subdivide","_subs","round","_divided","_points","insert","check","found","queryCircle","queryRectangle","qTreeRectangle","_applyDensity","manualCount","_options$number$densi","numberOptions","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","removeQuantity","densityOptions","_pushParticle","initializer","pool","pop","_nextId","canAdd","_array","_zArray","dispatchEvent","_removeParticle","zIdx","splice","_interactionManager","quadTree","getMovers","getUpdaters","addManualParticles","addParticle","countToRemove","update","condition","particlesInitialization","pathGenerators","groupOptions","j","_groupOptions$number","nb","pushing","redraw","removeAt","quantity","deleted","particlesToDelete","Set","particleUpdate","checkDelete","has","zArray","Retina","devicePixelRatio","ratio","attractDistance","sizeAnimationSpeed","moveDistance","moveDrift","moveSpeed","guardCheck","loadContainerOptions","defaultPathGenerator","generate","Container","_intersectionManager","entry","isIntersecting","_nextFrame","_this$lastFrameTime","lastFrameTime","timestamp","initDelta","addLifeTime","alive","_delay","_duration","_lifeTime","_firstStart","_paused","_sourceOptions","_initialSourceOptions","_options","_eventListeners","IntersectionObserver","_intersectionObserver","addClickHandler","clickOrTouchHandler","posRetina","touched","touchMoved","touchStartHandler","touchMoveHandler","radiusX","radiusY","touchCancelHandler","mainArr","dom","idx","findIndex","refreshTime","_drawAnimationFrame","requestAnimationFrame","export","supported","blob","shapes","getSupportedShapes","availablePlugins","getAvailablePlugins","particlesSetup","_currentTheme","cancelAnimationFrame","needsUpdate","start","setNoise","noiseOrGenerator","setPath","pathOrGenerator","oldGenerator","_delayTimeout","HTMLElement","newMaxWidth","responsiveMaxWidth","EventDispatcher","_listeners","listener","arr","args","listeners","forEach","hasEventListener","removeAllEventListeners","getItemsFromInitializer","initializers","values","Plugins","_initializers","presets","addInteractor","initInteractor","addParticleMover","initMover","addParticleUpdater","initUpdater","addPathGenerator","addPlugin","getPlugin","addPreset","presetKey","addShapeDrawer","types","needsPlugin","Engine","_configs","_domArray","_eventDispatcher","_initialized","configs","config","version","addConfig","nameOrConfig","_nameOrConfig$name","interactorInitializer","addMover","moverInitializer","updaterInitializer","addShape","initOrRefresh","afterEffectOrRefresh","destroyOrRefresh","customDrawer","realInit","realAfterEffect","realDestroy","realRefresh","domItem","tagIdOrOptionsOrParams","loadFromArray","optionsOrIndex","isParams","_loadParams","loadJSON","tagId","pathConfigJson","setJSON","setOnClickHandler","_params$id","_params$element","fallback","response","fetch","ok","json","getDataFromUrl","domContainer","getElementById","body","append","oldIndex","old","tagName","toLowerCase","existingCanvases","getElementsByTagName","appendChild","newItem","HslColorManager","_colorValue$hsl","_colorValue$hsl2","RgbColorManager","_colorValue$rgb","rgbColor","_colorValue$rgb2","rgbColorManager","hslColorManager","AbsorberSizeLimit","AbsorberSize","Absorber","draggable","orbits","AbsorberInstance","absorbers","_rangeColorToRgb","_this$initialPosition","_this$initialPosition2","_updateParticlePosition","needsNewPosition","newPosition","absorberOrbit","_particle$retina$move","minSize","absorberOrbitDirection","orbitRadius","orbitAngle","orbitDirection","updateFunc","addV","dragging","sizeFactor","translate","arc","Absorbers","interactivityAbsorbers","getAbsorber","idxOrName","addAbsorber","absorber","absorberOptions","modeAbsorbers","absorbersModeOptions","absorbersOptions","aPosition","removeAbsorber","AbsorbersPlugin","_source$interactivity","_options$interactivit","DestroyBounds","SplitFactor","SplitRate","Split","rate","sizeOffset","_this$colorOffset","colorOffset","Destroy","split","addSplitParticle","parent","splitParticlesOptions","destroyOptions","splitOptions","parentColor","_splitOptions$colorOf","_splitOptions$colorOf2","_splitOptions$colorOf3","_parent$splitCount","splitCount","DestroyUpdater","destroyBoundsOptions","destroyBounds","particlesSplitOptions","CircleShape","randomPosition","randomTheta","generateTheta","u","theta","atan","tan","maxRadius","randomRadius","EmitterLife","wait","EmitterRate","EmitterSize","Emitter","life","startCount","domId","spawnColor","EmitterInstance","emitters","_this$options$life$de","_this$_initialPositio","_this$_engine$emitter","_particlesOptions","_particlesOptions2","_particlesOptions2$mo","_particlesOptions$mov","_particlesOptions$mov2","_this$options$size","_this$options$life$co","_destroy","removeEmitter","emitter","_emit","_emitParticles","singleParticlesOptions","_this$_shape$randomPo","_this$_shape","_this$options$spawnCo","hslAnimation","_setColorAnimation","pPosition","_shape","_prepareToDie","_this$options$life","_lifeCount","_immortal","initValue","maxValue","_animation$speed","emitFactor","_currentDuration","_currentEmitDelay","_currentSpawnDelay","_initialPosition","_spawnDelay","emitterShapeManager","getShape","_firstSpawn","_startParticlesAdded","externalPause","externalPlay","elRect","_emitDelay","_this$_spawnDelay","_this$_spawnDelay2","_this$_emitDelay","_this$options$life$de2","Emitters","interactivityEmitters","getEmitter","addEmitter","playEmitter","pauseEmitter","emitterOptions","_emittersModeOptions","modeEmitters","emittersModeOptions","usedIndexes","includes","emittersOptions","ePosition","ShapeManager","randomSquareCoordinate","SquareShape","halfW","halfH","side","EmittersPlugin","emitterMode","_emitterMode$random$c","_emitterMode$random$e","_emitterMode$random$c2","_emitterMode$random$e2","ExternalInteractorBase","Trail","pauseOnStop","TrailMaker","_interactivity$mouse$","_this$_lastPosition","_interactivity$mouse$2","_this$_lastPosition2","trailOptions","optDelay","canEmit","_lastPosition","_particle$interactivi","RollLight","Roll","darken","enlighten","RollUpdater","_particle$roll","rollHorizontal","rollVertical","rollOpt","alterType","updateRoll","_options$color","_options$minDistance","_options$connectParti","_options$speed","_options$maxParticles","_options$sizeVariatio","_options$responsive","querySelector","links","minDistance","connectParticles","maxParticles","sizeVariations","_responsive$options","_responsive$options2","_responsive$options3","_responsive$options4","_responsive$options5","breakpoint","pauseAnimation","resumeAnimation","initPjs","particlesJS","pJSDom","catch","initParticlesJS","_particle$pathGenerat","applyPath","gravityOptions","gravityFactor","zVelocityFactor","BaseMover","_initSpin","_spinOptions$position","spinOptions","spinPos","spinCenter","spinAcceleration","_particle$retina","_particle$retina2","_particle$retina2$mov","_particle$retina$maxS","particleOptions","slowFactor","getProximitySpeedFactor","baseSpeed","maxSize","maxCanvasSize","dxFixed","dyFixed","hDistance","vDistance","vel","applyDistance","CircleDrawer","circleRange","_shapeData$angle","updateColorValue","valueAnimation","decrease","_colorValue$maxLoops","_colorValue$loops","_colorValue$maxLoops2","_colorValue$delayTime","_colorValue$delayTime2","_colorValue$delayTime3","_colorValue$delayTime4","_colorValue$velocity","_colorValue$decay","ColorUpdater","hAnimation","sAnimation","lAnimation","updateColor","OpacityUpdater","opacityOptions","opacityAnimation","_particle$opacity$max","_particle$opacity$max2","_particle$opacity$loo","_particle$opacity$max3","_data$maxLoops","_data$loops","_data$maxLoops2","_data$decay","_data$delayTime","_data$delayTime2","_data$delayTime3","_data$delayTime4","minValue","_data$velocity","_data$velocity2","checkDestroy","updateOpacity","BounceOutMode","particleBounce","newVelocity","minPos","bounceHorizontal","bounceVertical","DestroyOutMode","_delta","vx","vy","NoneOutMode","pRadius","OutOutMode","circVec","newDx","newDy","wrap","newPos","sizeValue","nextBounds","OutOfCanvasUpdater","_updateOutMode","SizeUpdater","sizeAnimation","_particle$retina$size","_particle$size$maxLoo","_particle$size$maxLoo2","_particle$size$loops","_particle$size$maxLoo3","sizeVelocity","updateSize","loadBasic","loadBaseMover","loadCircleShape","loadColorUpdater","loadOpacityUpdater","loadOutModesUpdater","loadSizeUpdater","Attract","Attractor","_clickAttract","finish","attractRadius","attractModeDistance","_processAttract","_hoverAttract","attractOptions","attractFactor","normVec","mouseMoveStatus","hoverEnabled","hoverMode","clickEnabled","clickMode","Bounce","Bouncer","_processBounce","_processMouseBounce","tolerance","bounceModeDistance","_singleSelectorBounce","querySelectorAll","elem","offsetLeft","offsetTop","BubbleBase","BubbleDiv","Bubble","calculateBubbleValue","particleValue","modeValue","optionsValue","Bubbler","_clickBubble","mouseClickPos","bubbleOptions","bubbleModeDistance","_particle$opacity$val","durationEnd","distMouse","timeSpent","sizeData","bubbleObj","optValue","bubbleModeSize","particlesObj","_process","opacityData","_hoverBubbleColor","_hoverBubble","pointDistance","_hoverBubbleSize","_hoverBubbleOpacity","divBubble","finalColor","modeColor","bubbleColor","pColor","_divBubble$opacity","_particle$opacity$val2","_particle$opacity2","modeOpacity","optOpacity","modeSize","optSize","bubbleParam","bubbleDuration","bubbleDistance","particlesParam","pObjBubble","pObj","_singleSelectorHover","repulseRadius","ConnectLinks","Connect","lineLinked","line_linked","_data$links","lineStyle","connectOptions","connect","gradStop","sourcePos","destPos","midRgb","grad","createLinearGradient","addColorStop","gradient","drawConnection","_p1$retina$linksWidth","ls","drawConnectLine","linksWidth","Connector","connectModeDistance","connectModeRadius","slice","distMax","xDiff","yDiff","GrabLinks","Grab","drawGrab","lineColor","_particle$retina$link","beginPos","colorLine","drawGrabLine","Grabber","grab","grabModeDistance","_grabLineOptions$colo","_particle$options$lin","grabLineOptions","lineOpacity","opacityLine","grabLineColor","linksOptions","Pauser","Push","particles_nb","_data$quantity","Pusher","pushOptions","Remove","Remover","removeNb","RepulseBase","RepulseDiv","Repulse","Repulser","_clickRepulse","repulseOptions","repulse","repulseDistance","repulseModeDistance","vect","_hoverRepulse","_processRepulse","divRepulse","_divRepulse$speed","repulseFactor","_singleSelectorRepulse","repulseOpts","hover","click","Slow","Slower","slowModeRadius","slowOptions","particlePos","dist","proximityFactor","InterlaceOffsets","InterlaceSteps","ByteStream","bytes","Uint8ClampedArray","getString","reduce","acc","curr","String","fromCharCode","nextByte","nextTwoBytes","readSubBlocks","blockString","readSubBlocksBin","len","blockData","Uint8Array","skipSubBlocks","parseColorTable","byteStream","colors","parseBlock","gif","avgAlpha","getFrameIndex","getTransparencyIndex","progressCallback","frame","frames","packedByte","localColorTableFlag","interlacedFlag","sortFlag","reserved","localColorCount","localColorTable","getColor","globalColorTable","ImageData","colorSpace","DOMException","EvalError","minCodeSize","imageData","clearCode","readBits","bytePos","bitPos","code","dic","pass","pixelPos","lineIndex","last","bitmap","createImageBitmap","parseImageBlock","GCreserved","disposalMethod","userInputDelayFlag","transparencyFlag","transparencyIndex","applicationExtension","authenticationCode","applicationExtensions","comments","plainTextData","charSize","foregroundColor","text","parseExtensionBlock","currentColorRegex","loadImage","loading","Image","loadGifImage","_getGIFLoopAmount","gifData","gifURL","buffer","arrayBuffer","totalTime","colorRes","pixelAspectRatio","globalColorTableFlag","globalColorCount","backgroundColorIndex","copyWithin","frameIndex","incrementFrameIndex","getframeIndex","increment","message","decodeGIF","gifLoopCount","extension","NaN","getGIFLoopAmount","downloadSvgImage","svgData","replaceImageColor","_imageData$replaceCol","svgColoredData","imageShape","colorStyle","preFillIndex","substring","replaceColorSvg","imageRes","replaceColor","replace_color","svg","Blob","domUrl","URL","webkitURL","createObjectURL","revokeObjectURL","img2","ImageDrawer","loadImageShape","_imageShape$replaceCo","addImage","_particle$gifFrame","offscreenCanvas","OffscreenCanvas","offscreenContext","_image$gifLoopCount","imageSmoothingQuality","imageSmoothingEnabled","gifFrame","gifTime","scale","putImageData","previousImageData","getImageData","preload","_ref2","_imageData$fill","_imageData$close","_image$ratio","Preload","ImagePreloaderPlugin","preloadOptions","existing","_data$gif","_data$name","imageFunc","_data$name2","addLoadImageToEngine","preloader","LifeDelay","LifeDuration","Life","LifeUpdater","lifeOptions","justSpawned","widthRange","heightRange","LineDrawer","_shapeData$cap","lineCap","cap","ParallaxMover","parallaxOptions","parallaxForce","canvasCenter","parallaxSmooth","centerDistance","ParticlesInteractorBase","_p1$retina$attractDis","ax","ay","p1Factor","p2Factor","updateAbsorb","r2","fixBounceSpeed","collisionMaxSpeed","resolveCollision","Collider","radius1","radius2","CircleWarp","rect","circle","biggerCircle","rectSW","LinksShadow","LinksTriangle","frequency","Links","triangles","getLinkDistance","optDistance","absDiffs","warpDistances","Linker","_setColor","linkContainer","linksColor","linksColors","_p1$retina$linksDista","linkOpt1","linksDistance","linkOpt2","_source$links","setLinkFrequency","dictionary","join","LinkInstance","_drawLinkLine","link","p1LinksOptions","_p1$options$twinkle","twinkle","lines","twinkleFreq","twinkleRgb","drawn","pi1","pi2","endNE","d1","yi","endSW","d2","xi","endSE","d3","drawLinkLine","_drawLinkTriangle","link1","link2","_triangleOptions$opac","triangleOptions","opacityTriangle","_p1$retina$linksDista2","pos3","colorTriangle","drawLinkTriangle","_drawTriangles","p1Links","_options$links","_p2$options$links","_p2$links","vertices","linkFreq","_getLinkFrequency","vertex","_getTriangleFrequency","_freqs","LinksPlugin","loadParticlesLinksInteraction","loadLinksInteraction","loadLinksPlugin","PolygonDrawerBase","getCenter","getSidesData","sideCount","numerator","denominator","decimalSides","interiorAngleDegrees","interiorAngle","_polygon$sides","nb_sides","PolygonDrawer","TriangleDrawer","loadPolygonShape","loadGenericPolygonShape","loadTriangleShape","RotateAnimation","Rotate","RotateUpdater","rotateOptions","rotateDirection","rotateAnimation","_particle$rotate$valu","_particle$rotate","_rotate$velocity","_rotate$decay","updateRotate","fixFactor","SquareDrawer","fixedRadius","fixedDiameter","StarDrawer","_particle$starInset","inset","starInset","_star$sides","star","_star$inset","StrokeColorUpdater","_stroke$opacity","_stroke$color","_rangeColorToHsl","strokeAnimation","strokeHslColor","updateStrokeColor","validTypes","TextDrawer","_character$style","_character$weight","_character$font","textData","randomIndexData","fillText","strokeText","promises","all","loadSlim","loadParallaxMover","loadExternalAttractInteraction","loadExternalBounceInteraction","loadExternalBubbleInteraction","loadExternalConnectInteraction","loadExternalGrabInteraction","loadExternalPauseInteraction","loadExternalPushInteraction","loadExternalRemoveInteraction","loadExternalRepulseInteraction","loadExternalSlowInteraction","loadParticlesAttractInteraction","loadParticlesCollisionsInteraction","loadEasingQuadPlugin","loadLineShape","loadSquareShape","loadStarShape","loadTextShape","loadLifeUpdater","loadRotateUpdater","loadStrokeColorUpdater","TiltAnimation","Tilt","TiltUpdater","_particle$tilt","tilt","cosDirection","sinDirection","_particle$options$til","tiltOptions","tiltDirection","tiltAnimation","_particle$options$til2","_particle$tilt$veloci","_particle$tilt$decay","updateTilt","TwinkleValues","Twinkle","TwinkleUpdater","twinkleOptions","twinkling","twinklingOpacity","twinkleStyle","needsTwinkle","WobbleSpeed","Wobble","rangeSpeed","WobbleUpdater","_wobbleOpt$distance","wobbleOpt","wobble","angleSpeed","wobbleDistance","_particle$options$wob","_particle$retina$wobb","wobbleOptions","updateWobble","loadFull","loadDestroyUpdater","loadRollUpdater","loadTiltUpdater","loadTwinkleUpdater","loadWobbleUpdater","loadExternalTrailInteraction","loadAbsorbersPlugin","addEmitterShape","_engine$emitterShapeM","loadEmittersPlugin"],"sourceRoot":""}