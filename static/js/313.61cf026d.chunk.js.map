{"version":3,"file":"static/js/313.61cf026d.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/gestures/utils/event-type.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/utils.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/store-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/handoff.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/hey-listen/dist/hey-listen.es.js","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    /**\n     * If we have optimised appear animations to handoff from, trigger animateChanges\n     * from a synchronous useLayoutEffect to ensure there's no flash of incorrectly\n     * styled component in the event of a hydration error.\n     */\n    useIsomorphicLayoutEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useIsomorphicLayoutEffect(() => () => visualElement && visualElement.notify(\"Unmount\"), []);\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","const animationProps = [\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileDrag\",\n    \"whileInView\",\n];\nconst tapProps = [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"];\nconst panProps = [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"];\nconst inViewProps = [\n    \"whileInView\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n];\n/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"layoutDependency\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"dragSnapToOrigin\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"layoutScroll\",\n    ...inViewProps,\n    ...tapProps,\n    ...animationProps,\n    ...panProps,\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const newValues = scrapeMotionValuesFromProps$1(props);\n    for (const key in props) {\n        if (isMotionValue(props[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props);\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","function isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    const hasTouches = !!event.touches;\n    return hasTouches;\n}\n\nexport { isMouseEvent, isTouchEvent };\n","import { isTouchEvent } from '../gestures/utils/event-type.mjs';\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return (event) => {\n        const isMouseEvent = event instanceof MouseEvent;\n        const isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nconst defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType = \"page\") {\n    const primaryTouch = e.touches[0] || e.changedTouches[0];\n    const point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType = \"page\") {\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nconst wrapHandler = (handler, shouldFilterPrimaryPointer = false) => {\n    const listener = (event) => handler(event, extractEventInfo(event));\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\nexport { extractEventInfo, wrapHandler };\n","import { isBrowser } from '../utils/is-browser.mjs';\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nconst supportsPointerEvents = () => isBrowser && window.onpointerdown === null;\nconst supportsTouchEvents = () => isBrowser && window.ontouchstart === null;\nconst supportsMouseEvents = () => isBrowser && window.onmousedown === null;\n\nexport { supportsMouseEvents, supportsPointerEvents, supportsTouchEvents };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { wrapHandler } from './event-info.mjs';\nimport { supportsPointerEvents, supportsTouchEvents, supportsMouseEvents } from './utils.mjs';\n\nconst mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nconst touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { isMouseEvent } from './utils/event-type.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { env } from '../../../utils/process.mjs';\nimport { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? onTapCancel && onTapCancel(event, info)\n            : onTap && onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel && onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        onTapStart && onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = () => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    };\n    const onBlur = () => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"7.10.3\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @privateRemarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect) {\n        this.passiveEffect = passiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(animation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.stopAnimation = animation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.stopAnimation) {\n            this.stopAnimation();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.stopAnimation;\n    }\n    clearAnimation() {\n        this.stopAnimation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const appearStoreId = (id, value) => `${id}: ${value}`;\n\nexport { appearStoreId };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { appearStoreId } from './store-id.mjs';\n\nfunction handoffOptimizedAppearAnimation(id, name) {\n    const { MotionAppearAnimations } = window;\n    const animationId = appearStoreId(id, transformProps.has(name) ? \"transform\" : name);\n    const animation = MotionAppearAnimations && MotionAppearAnimations.get(animationId);\n    if (animation) {\n        /**\n         * We allow the animation to persist until the next frame:\n         *   1. So it continues to play until Framer Motion is ready to render\n         *      (avoiding a potential flash of the element's original state)\n         *   2. As all independent transforms share a single transform animation, stopping\n         *      it synchronously would prevent subsequent transforms from handing off.\n         */\n        sync.render(() => {\n            /**\n             * Animation.cancel() throws so it needs to be wrapped in a try/catch\n             */\n            try {\n                animation.cancel();\n                MotionAppearAnimations.delete(animationId);\n            }\n            catch (e) { }\n        });\n        return animation.currentTime || 0;\n    }\n    else {\n        return 0;\n    }\n}\n\nexport { handoffOptimizedAppearAnimation };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    const origin = keyframes[0];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframes.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restSpeed = 2, restDelta = 0.01, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working within what looks like a 0-1 range, change the default restDelta\n         * to 0.01\n         */\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(target - origin) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let latest;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes.length > 2 ? \"keyframes\" : type];\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            const state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls.stop();\n        },\n        sample: (t) => {\n            return animation.next(Math.max(0, t));\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    let { keyframes, duration = 0.3, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        const sampleAnimation = animate(options);\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        let t = 0;\n        while (!state.done) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return () => {\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        const { currentTime } = animation;\n        if (currentTime) {\n            const sampleAnimation = animate(options);\n            value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n        }\n        sync.update(() => animation.cancel());\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        return () => { };\n    };\n    return elapsed ? delay(setValue, -elapsed) : setValue();\n}\n\nexport { createInstantAnimation };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\nimport { supports } from './waapi/supports.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            const animation = inertia(options);\n            return () => animation.stop();\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        const canAccelerateAnimation = supports.waapi() &&\n            acceleratedValues.has(valueName) &&\n            !options.repeatDelay &&\n            options.repeatType !== \"mirror\" &&\n            options.damping !== 0 &&\n            visualElement &&\n            element instanceof HTMLElement &&\n            !visualElement.getProps().onUpdate;\n        if (canAccelerateAnimation) {\n            /**\n             * If this animation is capable of being run via WAAPI, then do so.\n             */\n            return createAcceleratedAnimation(value, valueName, options);\n        }\n        else {\n            /**\n             * Otherwise, fall back to the main thread.\n             */\n            const animation = animate(options);\n            return () => animation.stop();\n        }\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { handoffOptimizedAppearAnimation } from '../../animation/optimized-appear/handoff.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        let valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * Make animation instant if this is a transform prop and we should reduce motion.\n         */\n        if (visualElement.shouldReduceMotion && transformProps.has(key)) {\n            valueTransition = {\n                ...valueTransition,\n                type: false,\n                delay: 0,\n            };\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (!value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = handoffOptimizedAppearAnimation(appearId, key);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isMouseEvent, isTouchEvent } from './utils/event-type.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: AnyPointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst setAndResetVelocity = (value, to) => {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        setAndResetVelocity(value, origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { env } from '../utils/process.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"Unmount\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures(renderedProps, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (env !== \"production\" && preloadedFeatures && isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props), this.prevMotionValues);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (this.hasValue(key))\n            this.removeValue(key);\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n        this.bindToMotionValue(key, value);\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    /**\n     * Get a motion value for this key. If called with a default\n     * value, we'll create one if none exists.\n     */\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"7.10.3\", `Attempting to mix Framer Motion versions ${nextValue.version} with 7.10.3 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_c = (_b = valuesToRender.opacity) !== null && _b !== void 0 ? _b : this.latestValues.opacity) !== null && _c !== void 0 ? _c : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                const corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","PresenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","presenceId","id","undefined","blockInitialAnimation","initial","useIsomorphicLayoutEffect","render","animationState","animateChanges","notify","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","VisualElementHandler","React__default","getSnapshotBeforeUpdate","this","setProps","componentDidUpdate","children","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","key","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","useConstant","isBrowser","lazyStrictMode","initialLayoutGroupConfig","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","LayoutGroupContext","createMotionProxy","createConfig","custom","arguments","length","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","layout","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","sortTransformProps","a","b","isCSSVariable","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","concat","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","push","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","sort","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","latest","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","values","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","AnimationType","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","useEffect","isMouseEvent","event","PointerEvent","pointerType","MouseEvent","isTouchEvent","touches","defaultPagePoint","pageX","pageY","pointFromTouch","pointType","point","changedTouches","pointFromMouse","extractEventInfo","wrapHandler","listener","eventHandler","button","supportsPointerEvents","window","onpointerdown","supportsTouchEvents","ontouchstart","supportsMouseEvents","onmousedown","mouseEventNames","pointerdown","pointermove","pointerup","pointercancel","pointerover","pointerout","pointerenter","pointerleave","touchEventNames","getPointerEventName","addPointerEvent","usePointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","callback","info","setActive","Hover","isNodeOrChild","child","parentElement","combineFunctions","pipe","_len","transformers","_key","reduce","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","useIntersectionObserver","shouldObserve","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","getProps","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","_ref3","fallback","env","warnOnce","requestAnimationFrame","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","onPointerDown","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","onPointerCancel","useUnmountEffect","whileFocus","onFocus","Focus","onBlur","onHoverStart","onHoverEnd","whileHover","usePresence","isPresent","onExitComplete","register","useId","safeToRemove","shallowCompare","next","prev","prevLength","i","isZeroValueString","addUniqueItem","arr","item","removeItem","index","splice","SubscriptionManager","constructor","subscriptions","add","c","numSubscriptions","getSize","clear","velocityPerSecond","velocity","frameDuration","MotionValue","init","_this","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","delta","timestamp","frameData","sync","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","isNaN","owner","onChange","subscription","on","clearListeners","eventManagers","attach","passiveEffect","setWithVelocity","getPrevious","stop","Promise","resolve","stopAnimation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","appearStoreId","handoffOptimizedAppearAnimation","MotionAppearAnimations","animationId","cancel","currentTime","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","noop","any","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","keyframes","keyframeValues","times","duration","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","flipTarget","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restSpeed","restDelta","isResolvedFromDuration","springOptions","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","framesync","update","passTimestamp","cancelSync","driver","repeat","repeatMax","repeatType","repeatDelay","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","driverControls","interpolateFromNumber","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","delay","reverseElapsed","hasRepeatDelayElapsed","sample","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","createAcceleratedAnimation","valueName","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","timeout","performance","now","checkElapsed","read","createInstantAnimation","setValue","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","getDefaultTransition","valueKey","isAnimatable","isZero","getZeroUnit","potentialUnitType","getValueTransition","featureTests","waapi","Element","results","supports","acceleratedValues","createMotionValueAnimation","valueTransition","isTargetAnimatable","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","findNearestBoundary","startAnimation","startSpring","boundary","heading","checkBoundary","inertia","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","HTMLElement","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animations","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","first","last","willChange","animationTypeState","getState","shouldBlockAnimation","shouldReduceMotion","appearId","remove","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","subscribe","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","buttons","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","dragControls","groupDragControls","cssVariableRegex","maxDepth","getVariableValue","depth","token","exec","parseCSSVariable","getComputedStyle","getPropertyValue","positionalKeys","isPositionalKey","setAndResetVelocity","isNumOrPxType","BoundingBoxDimension","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","positionalValues","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","_ref12","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","initialMotionValues","_props","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","_c","valueIsTransform","removeOnChange","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","isStrict","ProjectionNodeConstructor","layoutScroll","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","getVariant","getClosestVariantNode","numVariantProps","closestVariantNode","removeValueFromRenderState","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","args","DOMVisualElement","compareDocumentPosition","isMounted","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","super","getAttribute","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","prevProps","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","_d","_e","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","preRender","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","flushSync","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","getPrevLead","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","featureBundle","motion","createDomMotionConfig"],"sourceRoot":""}